webpackJsonp(["outstandingcase.module"],{

/***/ "./node_modules/countup.js-angular2/fesm5/countup.js-angular2.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CountUpModule; });
/* unused harmony export Éµa */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_countup_js__ = __webpack_require__("./node_modules/countup.js/dist/countUp.min.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_countup_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_countup_js__);



/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var CountUpDirective = /** @class */ (function () {
    function CountUpDirective(el) {
        this.el = el;
        // on-complete event emitter
        this.complete = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    // Re-animate if preference is set.
    // Re-animate if preference is set.
    /**
     * @return {?}
     */
    CountUpDirective.prototype.onClick = 
    // Re-animate if preference is set.
    /**
     * @return {?}
     */
    function () {
        if (this.reanimateOnClick) {
            this.animate();
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    CountUpDirective.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.endVal && changes.endVal.currentValue) {
            this.countUp = this.createCountUp();
            this.animate();
        }
    };
    /**
     * @return {?}
     */
    CountUpDirective.prototype.createCountUp = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var start = this.startVal || 0;
        /** @type {?} */
        var duration = this.duration || 2;
        /** @type {?} */
        var decimals = this.decimals || 0;
        if (!this.duration) {
            this.duration = duration;
        }
        // construct countUp
        /** @type {?} */
        var countUp = new __WEBPACK_IMPORTED_MODULE_1_countup_js__(this.el.nativeElement, start, this.endVal, decimals, duration, this.options);
        /** @type {?} */
        var diff = Math.abs(this.endVal - start);
        // make easing smoother for large numbers
        if (diff > 999) {
            /** @type {?} */
            var up = (this.endVal > start) ? -1 : 1;
            countUp = new __WEBPACK_IMPORTED_MODULE_1_countup_js__(this.el.nativeElement, start, this.endVal + (up * 100), decimals, duration / 2, this.options);
        }
        return countUp;
    };
    /**
     * @return {?}
     */
    CountUpDirective.prototype.animate = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.countUp.reset();
        if (this.endVal > 999) {
            this.countUp.start(function () { return _this.countUp.update(_this.endVal); });
            setTimeout(function () {
                _this.complete.emit();
            }, this.duration * 1000);
        }
        else {
            this.countUp.start(function () {
                _this.complete.emit();
            });
        }
    };
    CountUpDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[countUp]'
                },] }
    ];
    CountUpDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"] }
    ]; };
    CountUpDirective.propDecorators = {
        options: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['countUp',] }],
        startVal: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] }],
        endVal: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] }],
        duration: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] }],
        decimals: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] }],
        reanimateOnClick: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] }],
        onClick: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"], args: ['click',] }],
        complete: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] }]
    };
    return CountUpDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var CountUpModule = /** @class */ (function () {
    function CountUpModule() {
    }
    CountUpModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    declarations: [CountUpDirective],
                    exports: [CountUpDirective]
                },] }
    ];
    return CountUpModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */



//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291bnR1cC5qcy1hbmd1bGFyMi5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vY291bnR1cC5qcy1hbmd1bGFyMi9saWIvY291bnQtdXAuZGlyZWN0aXZlLnRzIiwibmc6Ly9jb3VudHVwLmpzLWFuZ3VsYXIyL2xpYi9jb3VudC11cC5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBFbGVtZW50UmVmLFxuICBJbnB1dCxcbiAgT3V0cHV0LFxuICBIb3N0TGlzdGVuZXIsXG4gIEV2ZW50RW1pdHRlcixcbiAgT25DaGFuZ2VzLFxuICBTaW1wbGVDaGFuZ2VzXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgQ291bnRVcCBmcm9tICdjb3VudHVwLmpzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2NvdW50VXBdJ1xufSlcbmV4cG9ydCBjbGFzcyBDb3VudFVwRGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzIHtcblxuICBjb3VudFVwOiBhbnk7XG4gIC8vIE9wdGlvbmFsIGV4dHJhIGNvbmZpZ3VyYXRpb24sIHN1Y2ggYXMgZWFzaW5nLlxuICBASW5wdXQoJ2NvdW50VXAnKSBvcHRpb25zOiBhbnk7XG5cbiAgLy8gT3B0aW9uYWwgc3RhcnQgdmFsdWUgZm9yIHRoZSBjb3VudC4gRGVmYXVsdHMgdG8gemVyby5cbiAgQElucHV0KCkgc3RhcnRWYWw6IG51bWJlcjtcblxuICAvLyB0aGUgbnVtYmVyIHRvIGNvdW50IHRvXG4gIEBJbnB1dCgpIGVuZFZhbDogbnVtYmVyO1xuXG4gIC8vIE9wdGlvbmFsIGR1cmF0aW9uIG9mIHRoZSBhbmltYXRpb24gaW4gc2Vjb25kcy4gRGVmYXVsdCBpcyAyLlxuICBASW5wdXQoKSBkdXJhdGlvbjogbnVtYmVyO1xuXG4gIC8vIE9wdGlvbmFsIG51bWJlciBvZiBkZWNpbWFsIHBsYWNlcy4gRGVmYXVsdCBpcyAyLlxuICBASW5wdXQoKSBkZWNpbWFsczogbnVtYmVyO1xuICBcbiAgLy8gT3B0aW9uYWwgZmxhZyBmb3Igc3BlY2lmeWluZyB3aGV0aGVyIHRoZSBlbGVtZW50IHNob3VsZCByZS1hbmltYXRlIHdoZW4gY2xpY2tlZC5cbiAgLy8gRGVmYXVsdCBpcyB0cnVlLlxuICBASW5wdXQoKSByZWFuaW1hdGVPbkNsaWNrOiBib29sZWFuO1xuXG4gIC8vIFJlLWFuaW1hdGUgaWYgcHJlZmVyZW5jZSBpcyBzZXQuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgb25DbGljaygpIHtcbiAgICBpZiAodGhpcy5yZWFuaW1hdGVPbkNsaWNrKSB7XG4gICAgICB0aGlzLmFuaW1hdGUoKTtcbiAgICB9XG4gIH1cblxuICAvLyBvbi1jb21wbGV0ZSBldmVudCBlbWl0dGVyXG4gIEBPdXRwdXQoKSBjb21wbGV0ZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7fVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBpZiAoY2hhbmdlcy5lbmRWYWwgJiYgY2hhbmdlcy5lbmRWYWwuY3VycmVudFZhbHVlKSB7XG4gICAgICB0aGlzLmNvdW50VXAgPSB0aGlzLmNyZWF0ZUNvdW50VXAoKTtcbiAgICAgIHRoaXMuYW5pbWF0ZSgpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY3JlYXRlQ291bnRVcCgpOiBhbnkge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy5zdGFydFZhbCB8fCAwO1xuICAgIGNvbnN0IGR1cmF0aW9uID0gdGhpcy5kdXJhdGlvbiB8fCAyO1xuICAgIGNvbnN0IGRlY2ltYWxzID0gdGhpcy5kZWNpbWFscyB8fCAwO1xuXG4gICAgaWYgKCF0aGlzLmR1cmF0aW9uKSB7XG4gICAgICB0aGlzLmR1cmF0aW9uID0gZHVyYXRpb247XG4gICAgfVxuXG4gICAgLy8gY29uc3RydWN0IGNvdW50VXBcbiAgICBsZXQgY291bnRVcCA9IG5ldyBDb3VudFVwKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgc3RhcnQsIHRoaXMuZW5kVmFsLCBkZWNpbWFscywgZHVyYXRpb24sIHRoaXMub3B0aW9ucyk7XG4gICAgY29uc3QgZGlmZiA9IE1hdGguYWJzKHRoaXMuZW5kVmFsIC0gc3RhcnQpO1xuICAgIC8vIG1ha2UgZWFzaW5nIHNtb290aGVyIGZvciBsYXJnZSBudW1iZXJzXG4gICAgaWYgKGRpZmYgPiA5OTkpIHtcbiAgICAgIGNvbnN0IHVwID0gKHRoaXMuZW5kVmFsID4gc3RhcnQpID8gLTEgOiAxO1xuICAgICAgY291bnRVcCA9IG5ldyBDb3VudFVwKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgc3RhcnQsIHRoaXMuZW5kVmFsICsgKHVwICogMTAwKSwgZGVjaW1hbHMsIGR1cmF0aW9uIC8gMiwgdGhpcy5vcHRpb25zKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY291bnRVcDtcbiAgfVxuXG4gIHByaXZhdGUgYW5pbWF0ZSgpIHtcbiAgICB0aGlzLmNvdW50VXAucmVzZXQoKTtcbiAgICBpZiAodGhpcy5lbmRWYWwgPiA5OTkpIHtcbiAgICAgIHRoaXMuY291bnRVcC5zdGFydCgoKSA9PiB0aGlzLmNvdW50VXAudXBkYXRlKHRoaXMuZW5kVmFsKSk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5jb21wbGV0ZS5lbWl0KCk7XG4gICAgICB9LCB0aGlzLmR1cmF0aW9uICogMTAwMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY291bnRVcC5zdGFydCgoKSA9PiB7XG4gICAgICAgIHRoaXMuY29tcGxldGUuZW1pdCgpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ291bnRVcERpcmVjdGl2ZSB9IGZyb20gJy4vY291bnQtdXAuZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW10sXG4gIGRlY2xhcmF0aW9uczogW0NvdW50VXBEaXJlY3RpdmVdLFxuICBleHBvcnRzOiBbQ291bnRVcERpcmVjdGl2ZV1cbn0pXG5leHBvcnQgY2xhc3MgQ291bnRVcE1vZHVsZSB7IH1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7SUFnREUsMEJBQW9CLEVBQWM7UUFBZCxPQUFFLEdBQUYsRUFBRSxDQUFZOztRQUZ4QixhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztLQUVSOzs7Ozs7SUFUdEMsa0NBQU87Ozs7O0lBRFA7UUFFRSxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUN6QixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDaEI7S0FDRjs7Ozs7SUFPRCxzQ0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFO1lBQ2pELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1lBQ3BDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNoQjtLQUNGOzs7O0lBRU8sd0NBQWE7OztJQUFyQjs7WUFDUSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDOztZQUMxQixRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDOztZQUM3QixRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDO1FBRW5DLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1NBQzFCOzs7WUFHRyxPQUFPLEdBQUcsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDOztZQUNoRyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQzs7UUFFMUMsSUFBSSxJQUFJLEdBQUcsR0FBRyxFQUFFOztnQkFDUixFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDO1lBQ3pDLE9BQU8sR0FBRyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sSUFBSSxFQUFFLEdBQUcsR0FBRyxDQUFDLEVBQUUsUUFBUSxFQUFFLFFBQVEsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ3JIO1FBRUQsT0FBTyxPQUFPLENBQUM7S0FDaEI7Ozs7SUFFTyxrQ0FBTzs7O0lBQWY7UUFBQSxpQkFZQztRQVhDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDckIsSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRTtZQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxjQUFNLE9BQUEsS0FBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSSxDQUFDLE1BQU0sQ0FBQyxHQUFBLENBQUMsQ0FBQztZQUMzRCxVQUFVLENBQUM7Z0JBQ1QsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQzthQUN0QixFQUFFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLENBQUM7U0FDMUI7YUFBTTtZQUNMLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO2dCQUNqQixLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO2FBQ3RCLENBQUMsQ0FBQztTQUNKO0tBQ0Y7O2dCQTlFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFdBQVc7aUJBQ3RCOzs7Z0JBWkMsVUFBVTs7OzBCQWlCVCxLQUFLLFNBQUMsU0FBUzsyQkFHZixLQUFLO3lCQUdMLEtBQUs7MkJBR0wsS0FBSzsyQkFHTCxLQUFLO21DQUlMLEtBQUs7MEJBR0wsWUFBWSxTQUFDLE9BQU87MkJBUXBCLE1BQU07O0lBNkNULHVCQUFDO0NBL0VEOzs7Ozs7QUNaQTtJQUdBO0tBSzhCOztnQkFMN0IsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRSxFQUFFO29CQUNYLFlBQVksRUFBRSxDQUFDLGdCQUFnQixDQUFDO29CQUNoQyxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztpQkFDNUI7O0lBQzRCLG9CQUFDO0NBTDlCOzs7Ozs7Ozs7Ozs7OzsifQ==

/***/ }),

/***/ "./node_modules/countup.js/dist/countUp.min.js":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(a,n){ true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (n),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):"object"==typeof exports?module.exports=n(require,exports,module):a.CountUp=n()}(this,function(a,n,t){var e=function(a,n,t,e,i,r){function o(a){var n,t,e,i,r,o,s=a<0;if(a=Math.abs(a).toFixed(l.decimals),a+="",n=a.split("."),t=n[0],e=n.length>1?l.options.decimal+n[1]:"",l.options.useGrouping){for(i="",r=0,o=t.length;r<o;++r)0!==r&&r%3===0&&(i=l.options.separator+i),i=t[o-r-1]+i;t=i}return l.options.numerals.length&&(t=t.replace(/[0-9]/g,function(a){return l.options.numerals[+a]}),e=e.replace(/[0-9]/g,function(a){return l.options.numerals[+a]})),(s?"-":"")+l.options.prefix+t+e+l.options.suffix}function s(a,n,t,e){return t*(-Math.pow(2,-10*a/e)+1)*1024/1023+n}function u(a){return"number"==typeof a&&!isNaN(a)}var l=this;if(l.version=function(){return"1.9.3"},l.options={useEasing:!0,useGrouping:!0,separator:",",decimal:".",easingFn:s,formattingFn:o,prefix:"",suffix:"",numerals:[]},r&&"object"==typeof r)for(var m in l.options)r.hasOwnProperty(m)&&null!==r[m]&&(l.options[m]=r[m]);""===l.options.separator?l.options.useGrouping=!1:l.options.separator=""+l.options.separator;for(var d=0,c=["webkit","moz","ms","o"],f=0;f<c.length&&!window.requestAnimationFrame;++f)window.requestAnimationFrame=window[c[f]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[c[f]+"CancelAnimationFrame"]||window[c[f]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(a,n){var t=(new Date).getTime(),e=Math.max(0,16-(t-d)),i=window.setTimeout(function(){a(t+e)},e);return d=t+e,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),l.initialize=function(){return!!l.initialized||(l.error="",l.d="string"==typeof a?document.getElementById(a):a,l.d?(l.startVal=Number(n),l.endVal=Number(t),u(l.startVal)&&u(l.endVal)?(l.decimals=Math.max(0,e||0),l.dec=Math.pow(10,l.decimals),l.duration=1e3*Number(i)||2e3,l.countDown=l.startVal>l.endVal,l.frameVal=l.startVal,l.initialized=!0,!0):(l.error="[CountUp] startVal ("+n+") or endVal ("+t+") is not a number",!1)):(l.error="[CountUp] target is null or undefined",!1))},l.printValue=function(a){var n=l.options.formattingFn(a);"INPUT"===l.d.tagName?this.d.value=n:"text"===l.d.tagName||"tspan"===l.d.tagName?this.d.textContent=n:this.d.innerHTML=n},l.count=function(a){l.startTime||(l.startTime=a),l.timestamp=a;var n=a-l.startTime;l.remaining=l.duration-n,l.options.useEasing?l.countDown?l.frameVal=l.startVal-l.options.easingFn(n,0,l.startVal-l.endVal,l.duration):l.frameVal=l.options.easingFn(n,l.startVal,l.endVal-l.startVal,l.duration):l.countDown?l.frameVal=l.startVal-(l.startVal-l.endVal)*(n/l.duration):l.frameVal=l.startVal+(l.endVal-l.startVal)*(n/l.duration),l.countDown?l.frameVal=l.frameVal<l.endVal?l.endVal:l.frameVal:l.frameVal=l.frameVal>l.endVal?l.endVal:l.frameVal,l.frameVal=Math.round(l.frameVal*l.dec)/l.dec,l.printValue(l.frameVal),n<l.duration?l.rAF=requestAnimationFrame(l.count):l.callback&&l.callback()},l.start=function(a){l.initialize()&&(l.callback=a,l.rAF=requestAnimationFrame(l.count))},l.pauseResume=function(){l.paused?(l.paused=!1,delete l.startTime,l.duration=l.remaining,l.startVal=l.frameVal,requestAnimationFrame(l.count)):(l.paused=!0,cancelAnimationFrame(l.rAF))},l.reset=function(){l.paused=!1,delete l.startTime,l.initialized=!1,l.initialize()&&(cancelAnimationFrame(l.rAF),l.printValue(l.startVal))},l.update=function(a){if(l.initialize()){if(a=Number(a),!u(a))return void(l.error="[CountUp] update() - new endVal is not a number: "+a);l.error="",a!==l.frameVal&&(cancelAnimationFrame(l.rAF),l.paused=!1,delete l.startTime,l.startVal=l.frameVal,l.endVal=a,l.countDown=l.startVal>l.endVal,l.rAF=requestAnimationFrame(l.count))}},l.initialize()&&l.printValue(l.startVal)};return e});

/***/ }),

/***/ "./src/app/common/multigrid/B1-aging-oem.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return gridValues1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return gridValues3; });
var gridValues1 = [
    {
        header: {
            backgroundColor: '#ffc',
            items: [
                [
                    { header: 'MDL Summary', colspan: 4, rowspan: 1 },
                ],
                [
                    { header: 'FI OUT', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'ATQ OUT', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'FPY', colspan: 2, rowspan: 6 },
                    { header: 'TARGET', colspan: 1, rowspan: 1 },
                    { header: 'TOTAL', colspan: 1, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 1, rowspan: 1 },
                    { header: '-', colspan: 1, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 1, rowspan: 1 },
                    { header: '-', colspan: 1, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 1, rowspan: 1 },
                    { header: '-', colspan: 1, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 1, rowspan: 1 },
                    { header: '-', colspan: 1, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 1, rowspan: 1 },
                    { header: '-', colspan: 1, rowspan: 1 }
                ],
                [
                    { header: 'Q-level ', colspan: 2, rowspan: 6 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'A-level', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: ' ', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: ' ', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: ' ', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: ' ', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'T-level', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'S+A', colspan: 2, rowspan: 10 },
                    { header: 'TOTAL', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'På®ç»©', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                //////
                [
                    { header: 'OC Summary', colspan: 4, rowspan: 1 },
                ],
                [
                    { header: 'FI OUT', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'Q-level ', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'T-level', colspan: 2, rowspan: 1 },
                    { header: '-', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'S+A', colspan: 2, rowspan: 10 },
                    { header: 'TOTAL', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'REF', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: 'På®ç»©', colspan: 2, rowspan: 1 }
                ],
                [
                    { header: '-', colspan: 2, rowspan: 1 }
                ]
                //////
            ]
        },
        values: {
            items: []
        }
    }
];
//////////////////////////test/////////////////////////
var gridValues3 = [{
        header: {
            backgroundColor: '#D1EEEE',
            items: [
                [
                    { header: 'å®ç»©', colspan: 1, rowspan: 4 },
                    { header: 'modeltype', colspan: 7, rowspan: 1 }
                ],
                [
                    { header: 'FIOUT', colspan: 1, rowspan: 1 },
                    { header: ' ', colspan: 6, rowspan: 1 }
                ],
                [
                    { header: 'ATQOUT', colspan: 1, rowspan: 1 },
                    { header: '', colspan: 6, rowspan: 1 }
                ],
                [
                    { header: 'TOP', colspan: 1, rowspan: 1 },
                    { header: ' ', colspan: 4, rowspan: 1 },
                    { header: ' ', colspan: 1, rowspan: 1 },
                    { header: ' ', colspan: 1, rowspan: 1 },
                ],
            ]
        },
        values: {
            items: [
                [
                    { value: 'qratio', rowspan: 5 },
                    { value: '1', colspan: 1 },
                    { value: ' ', colspan: 4 },
                    { value: '' },
                    { value: '' }
                ],
                [
                    { value: '2', colspan: 1 },
                    { value: '', colspan: 4 },
                    { value: '' },
                    { value: '' }
                ],
                [
                    { value: '3', colspan: 1 },
                    { value: ' ', colspan: 4 },
                    { value: ' ' },
                    { value: ' ' }
                ],
                [
                    { value: '4', colspan: 1 },
                    { value: ' ', colspan: 4 },
                    { value: ' ' },
                    { value: ' ' }
                ],
                [
                    { value: '5', colspan: 1 },
                    { value: ' ', colspan: 4 },
                    { value: ' ' },
                    { value: ' ' }
                ]
            ]
        }
    },
    {
        header: {
            backgroundColor: '#D1EEEE',
            items: [
                [
                    { header: 'Q-PANEL', colspan: 6, rowspan: 1 },
                    { header: '', colspan: 2, rowspan: 1, editable: true }
                ]
            ]
        },
        values: {
            items: [
                [
                    { value: '', rowspan: 5 },
                    { value: '1', colspan: 1 },
                    { value: '', colspan: 4 },
                    { value: '' },
                    { value: '' }
                ],
                [
                    { value: '2', colspan: 1 },
                    { value: '', colspan: 4 },
                    { value: '' },
                    { value: '' }
                ],
                [
                    { value: '3', colspan: 1 },
                    { value: '', colspan: 4 },
                    { value: '54' },
                    { value: '0.38' }
                ],
                [
                    { value: '4', colspan: 1 },
                    { value: '', colspan: 4 },
                    { value: '' },
                    { value: '' }
                ],
                [
                    { value: '5', colspan: 1 },
                    { value: '', colspan: 4 },
                    { value: '' },
                    { value: '' }
                ]
            ]
        }
    }, {
        header: {
            backgroundColor: '#D1EEEE',
            items: [
                [
                    { header: '', colspan: 1, rowspan: 5, editable: true },
                    { header: 'A-TOTAL', colspan: 5, rowspan: 1 },
                    { header: '', colspan: 2, rowspan: 1, editable: true }
                ],
                [
                    { header: 'AN', colspan: 5, rowspan: 1 },
                    { header: '####', colspan: 1, rowspan: 1, editable: true },
                    { header: '', colspan: 1, rowspan: 1 }
                ],
                [
                    { header: 'AL', colspan: 5, rowspan: 1 },
                    { header: '', colspan: 1, rowspan: 1 },
                    { header: '', colspan: 1, rowspan: 1 }
                ],
                [
                    { header: 'A0', colspan: 5, rowspan: 1 },
                    { header: '', colspan: 1, rowspan: 1 },
                    { header: '', colspan: 1, rowspan: 1 }
                ],
                [
                    { header: 'AC', colspan: 5, rowspan: 1 },
                    { header: '', colspan: 1, rowspan: 1 },
                    { header: '', colspan: 1, rowspan: 1 }
                ]
            ]
        },
        values: {
            items: []
        }
    },
    {
        header: {
            backgroundColor: '#D1EEEE',
            items: [
                [{ header: '', rowspan: 1, colspan: 1 },
                    { header: 'æ°é', colspan: 2 },
                    { header: 0, colspan: 5 },
                ]
            ]
        },
        values: {
            items: []
        }
    },
    {
        header: {
            items: [
                [
                    { header: '', rowspan: 1, colspan: 8 }
                ]
            ]
        },
        values: {
            items: [
                [
                    { value: 'ç½ç­', colspan: 1, rowspan: 1 },
                    { value: 'input', colspan: 7, rowspan: 8, editable: true, editrows: 8, editcols: 9 }
                ],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: 'ç½ç­', colspan: 1, rowspan: 1 }],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [
                    { value: 'å¤ç­', colspan: 1, rowspan: 1 },
                    { value: 'input', colspan: 7, rowspan: 8, editable: true, editrows: 8, editcols: 9 }
                ],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: 'å¤ç­', colspan: 1, rowspan: 1 }],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: '-', colspan: 1, rowspan: 1 }],
                [{ value: 'panel shippi pçº§çããã', colspan: 8, rowspan: 1 }],
                [{ value: '-', colspan: 8, rowspan: 1 }],
                [{ value: '-', colspan: 8, rowspan: 1 }],
                [{ value: '-', colspan: 8, rowspan: 1 }],
                [{ value: '-', colspan: 8, rowspan: 1 }],
                [{ value: '-', colspan: 8, rowspan: 1 }]
            ],
        }
    }
];


/***/ }),

/***/ "./src/app/common/multigrid/agingvalue.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return agingData; });
var agingData = [
    {
        "modeltype": "23.6MDL ADS",
        "ratio_t": 0.0012674271,
        "grade_a_qty": 783,
        "rev_grade_a": {
            "ratio_N": 0.99239546,
            "AN": 783
        },
        "s+a": 0.9572183,
        "top5_qgrade": {
            "code": [
                "1180",
                "1240",
                "1460"
            ],
            "qty": [
                3,
                1,
                1
            ],
            "desc": [
                "Zara P/T ",
                "Cell Stain ",
                "Gap P/T"
            ],
            "ratio": [
                0.6,
                0.2,
                0.2
            ]
        },
        "fiout_qty": 804,
        "steps": {
            "step_lst": [
                "M030",
                "M100",
                "M120",
                "M151",
                "M160"
            ],
            "qty_rwk": [
                0,
                1,
                1,
                15,
                0
            ],
            "qty_total": [
                2,
                113,
                120,
                804,
                787
            ],
            "qty_ok": [
                2,
                112,
                119,
                789,
                787
            ]
        },
        "ratio_a": 0.992,
        "fpy": 0.96,
        "grade_all_qty": 789,
        "grade_q_qty": 5,
        "top5_rwk": {
            "code": [
                "PO02",
                "LX08",
                "PO01",
                "FF03",
                "AP18"
            ],
            "qty": [
                5,
                2,
                2,
                1,
                1
            ],
            "desc": [
                "POLå¼ç© ",
                "æçº¿X1 Line ",
                "POLæ°æ³¡ ",
                "å¼å¸¸ç¹ç¯ ",
                "Panel Broken(Machine) "
            ],
            "ratio": [
                0.29411766,
                0.11764706,
                0.11764706,
                0.05882353,
                0.05882353
            ]
        },
        "ratio_q": 0.006,
        "grade_t_qty": 1
    }, {
        "modeltype": "23.6OC MVG",
        "ratio_t": 0.0027472528,
        "grade_a_qty": 6755,
        "rev_grade_a": {
            "ratio_N": 0.97672063,
            "AN": 6755
        },
        "s+a": 0.9740798,
        "top5_qgrade": {
            "code": [
                "1450",
                "1152",
                "1460",
                "1240",
                "1212"
            ],
            "qty": [
                29,
                29,
                23,
                18,
                9
            ],
            "desc": [
                "æ°´å¹³é»çº¿Mura ",
                "æ¨ªåMura ",
                "Gap P/T",
                "Cell Stain ",
                "çº¿å½¢ "
            ],
            "ratio": [
                0.20422535,
                0.20422535,
                0.16197184,
                0.12676056,
                0.06338028
            ]
        },
        "fiout_qty": 6916,
        "steps": {
            "step_lst": [
                "M010",
                "M030",
                "M100",
                "M151",
                "M160"
            ],
            "qty_rwk": [
                0,
                9,
                128,
                0,
                5
            ],
            "qty_total": [
                6386,
                6487,
                128,
                6916,
                3793
            ],
            "qty_ok": [
                6386,
                6478,
                0,
                6916,
                3788
            ]
        },
        "ratio_a": 0.976,
        "fpy": 0.997,
        "grade_all_qty": 6916,
        "grade_q_qty": 142,
        "grade_atq_qty": 8000,
        "top5_rwk": {
            "code": [
                "PO02",
                "PO01",
                "LX07",
                "FO25",
                "AP18"
            ],
            "qty": [
                36,
                23,
                15,
                7,
                7
            ],
            "desc": [
                "POLå¼ç© ",
                "POLæ°æ³¡ ",
                "Xæçº¿å¤å ",
                "Misalign ",
                "Panel Broken(Machine) "
            ],
            "ratio": [
                0.2535211,
                0.16197184,
                0.1056338,
                0.049295776,
                0.049295776
            ]
        },
        "ratio_q": 0.020,
        "grade_t_qty": 19
    }, {
        "modeltype": "23.6OC TN",
        "ratio_t": 0.0625,
        "grade_a_qty": 24,
        "rev_grade_a": {
            "AC": 10,
            "ratio_N": 0.4375,
            "AN": 24,
            "ratio_C": 0.3125
        },
        "s+a": 0.75,
        "top5_qgrade": {
            "code": [
                "1460",
                "1211",
            ],
            "qty": [
                5,
                1,
            ],
            "desc": [
                "Gap P/T",
                "åå½¢ ",
                "", "", ""
            ],
            "ratio": [
                0.833,
                0.167,
            ]
        },
        "fiout_qty": 32,
        "steps": {
            "step_lst": [
                "M100",
                "M151",
                "M160"
            ],
            "qty_rwk": [
                3,
                0,
                0
            ],
            "qty_total": [
                3,
                32,
                26
            ],
            "qty_ok": [
                0,
                32,
                26
            ]
        },
        "ratio_a": 0.75,
        "fpy": 1.0,
        "grade_all_qty": 32,
        "grade_q_qty": 6,
        "top5_rwk": {
            "code": [
                "LX03",
                "FF03",
                "LX05", "", ""
            ],
            "qty": [
                1,
                1,
                1,
                "", ""
            ],
            "desc": [
                "äº®çº¿å¤å ",
                "å¼å¸¸ç¹ç¯ ",
                "X1 Line ",
                "", ""
            ],
            "ratio": [
                0.333,
                0.333,
                0.333,
                "", ""
            ]
        },
        "ratio_q": 0.1875,
        "grade_t_qty": 2
    }, {
        "modeltype": "18.5OC GOA",
        "ratio_t": 0.04722033,
        "grade_a_qty": 9596,
        "rev_grade_a": {
            "ratio_N": 0.934281,
            "AN": 9596
        },
        "s+a": 0.9329211,
        "top5_qgrade": {
            "code": [
                "1151",
                "1460",
                "1015",
                "1650",
                "1211"
            ],
            "qty": [
                74,
                27,
                23,
                16,
                12
            ],
            "desc": [
                "ç«åMura ",
                "Gap P/T",
                "äº®æç¹è·ç¦» ",
                "B4-äº®ç¹æ° ",
                "åå½¢ "
            ],
            "ratio": [
                0.389,
                0.142,
                0.121,
                0.084,
                0.063
            ]
        },
        "fiout_qty": 10271,
        "steps": {
            "step_lst": [
                "M010",
                "M030",
                "M100",
                "M151",
                "M160"
            ],
            "qty_rwk": [
                0,
                10,
                189,
                0,
                5
            ],
            "qty_total": [
                10568,
                10466,
                189,
                10271,
                9989
            ],
            "qty_ok": [
                10568,
                10456,
                0,
                10271,
                9984
            ]
        },
        "ratio_a": 0.934281,
        "fpy": 0.998,
        "grade_all_qty": 10271,
        "grade_q_qty": 190,
        "top5_rwk": {
            "code": [
                "LX03",
                "PO01",
                "PO02",
                "LY07",
                "MG02"
            ],
            "qty": [
                32,
                15,
                14,
                14,
                12
            ],
            "desc": [
                "äº®çº¿å¤å ",
                "POLæ°æ³¡ ",
                "POLå¼ç© ",
                "Yç½çº¿ ",
                "å¼ç©Gap "
            ],
            "ratio": [
                0.15686275,
                0.073529415,
                0.068627454,
                0.068627454,
                0.05882353
            ]
        },
        "ratio_q": 0.018498685,
        "grade_t_qty": 485
    }
];


/***/ }),

/***/ "./src/app/outstandingcase/cannedFReport/b1-oem-aging/b1-oem-aging.component.css":
/***/ (function(module, exports) {

module.exports = ".ui-g{font-size:8px;}\r\n*{margin: 0px; padding: 0px; }"

/***/ }),

/***/ "./src/app/outstandingcase/cannedFReport/b1-oem-aging/b1-oem-aging.component.html":
/***/ (function(module, exports) {

module.exports = "<h1 align=\"center\">B1-OEM-AGINGçäº§æ¥æ¥</h1>\n<br>\n<div class=\"ui-g\" id='toolbar'>\n    <div class=\"ui-g-9\">\n   <div class=\"ui-g-1\"><strong>æ¥æ :</strong></div>\n    <div class=\"ui-g-2\">\n        <p-calendar (onSelect)='onAgingSelect($event)' dateFormat=\"yy-mm-dd\"  hourFormat=\"24\" [(ngModel)]=\"agingDate\">æ¥æ :</p-calendar>\n    </div>\n    <div class=\"ui-g-1\">\n        <p-button label=\"æ¥ è¯¢\" (onClick)=\"getAgingData()\"></p-button> \n    </div>\n</div>\n<div class=\"ui-g-3\">\n    \n        <p-button class=\"fa fa-cloud-upload ui-button-success\" label=\"æäº¤\" (onClick)=\"submit()\"></p-button>\n        <button type=\"button\" pButton   label=\"excelä¸è½½\" (click)=\"xls()\"></button>\n    \n</div>\n</div>\n<br>\n<br>\n\n\n<div  *ngIf='reslength>0'  class=\"ui-g\" id=\"main1\">\n    <div class=\"ui-g-2\">\n        <app-boe-multigrid id=\"table1\" [values]=\"agingValues1\"></app-boe-multigrid>\n    </div>\n    <div class=\"ui-g-10\">\n        <div class=\"ui-g-4\" >\n            <app-boe-multigrid id=\"t1\" [values]=\"agingValues[0]\"></app-boe-multigrid>\n        </div>\n        <div class=\"ui-g-4\" id=\"test2\">\n            <app-boe-multigrid id=\"table3\" [values]=\"agingValues[1]\"></app-boe-multigrid>\n        </div>\n        <div class=\"ui-g-4\" id=\"test2\">\n            <app-boe-multigrid id=\"table3\" [values]=\"agingValues[2]\"></app-boe-multigrid>\n        </div>\n    </div>\n</div>\n<div   *ngIf='reslength>3'  class=\"ui-g\" id=\"main2\">\n    <div class=\"ui-g-2\">\n        <app-boe-multigrid id=\"table1\" [values]=\"agingValues1\"></app-boe-multigrid>\n    </div>\n    <div class=\"ui-g-10\">\n        <div class=\"ui-g-4\" id=\"test2\">\n            <app-boe-multigrid id=\"table2\" [values]=\"agingValues[3]\"></app-boe-multigrid>\n        </div>\n        <div class=\"ui-g-4\" id=\"test2\">\n            <app-boe-multigrid id=\"table3\" [values]=\"agingValues[4]\"></app-boe-multigrid>\n        </div>\n        <div class=\"ui-g-4\" id=\"test2\">\n            <app-boe-multigrid id=\"table3\" [values]=\"agingValues[5]\"></app-boe-multigrid>\n        </div>\n        \n    </div>\n</div>\n<div  *ngIf='reslength>6' class=\"ui-g\" id=\"main2\" >\n    <div class=\"ui-g-2\">\n        <app-boe-multigrid id=\"table1\" [values]=\"agingValues1\"></app-boe-multigrid>\n    </div>\n    <div class=\"ui-g-10\">\n        <div class=\"ui-g-4\" id=\"test2\">\n            <app-boe-multigrid id=\"table2\" [values]=\"agingValues[6]\"></app-boe-multigrid>\n        </div>\n        <div class=\"ui-g-4\" id=\"test2\">\n            <app-boe-multigrid id=\"table3\" [values]=\"agingValues[7]\"></app-boe-multigrid>\n        </div>\n        <div class=\"ui-g-4\" id=\"test2\">\n            <app-boe-multigrid id=\"table3\" [values]=\"agingValues[8]\"></app-boe-multigrid>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./src/app/outstandingcase/cannedFReport/b1-oem-aging/b1-oem-aging.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return B1OemAgingComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_environments_environment__ = __webpack_require__("./src/environments/environment.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_common__ = __webpack_require__("./node_modules/@angular/common/esm5/common.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery__ = __webpack_require__("./node_modules/jquery/dist/jquery.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__transparent_display_b1_pecvd_boe_service__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b1-pecvd/boe.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__ = __webpack_require__("./src/app/common/multigrid/B1-aging-oem.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_multigrid_agingvalue__ = __webpack_require__("./src/app/common/multigrid/agingvalue.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var B1OemAgingComponent = /** @class */ (function () {
    function B1OemAgingComponent(bsrv, dp) {
        this.bsrv = bsrv;
        this.dp = dp;
        this.agingValues = [];
        //submit
        this.submitData = { day: '', night: '', modeltype: '', timekey: '' };
        this.submitDataList = []; //submitData;
    }
    B1OemAgingComponent.prototype.ngOnInit = function () {
        this.agingValues1 = __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["a" /* gridValues1 */];
        // this.agingtimekey=this.getYstDay();
        // this.getAgingData(); 
        this.setData(__WEBPACK_IMPORTED_MODULE_6__common_multigrid_agingvalue__["a" /* agingData */]);
    };
    //è·åå½åæ¥æåä¸å¤©
    B1OemAgingComponent.prototype.getYstDay = function () {
        var yesterday = new Date();
        yesterday.setDate(yesterday.getDate() - 1);
        var strYear1 = yesterday.getFullYear().toString(); // '2019'
        var strMonth1 = (100 + yesterday.getMonth() + 1).toString().substring(1); // '01'
        var strDay1 = (100 + yesterday.getDate()).toString().substring(1); // '14'
        return strYear1 + strMonth1 + strDay1;
    };
    //éå®æ°çæ¥è¯¢æ¥æ1
    B1OemAgingComponent.prototype.onAgingSelect = function (params) {
        var strAgingDate = this.dp.transform(params, 'yyyyMMdd');
        this.agingtimekey = strAgingDate;
        console.log('aginæ¥æ:' + strAgingDate);
        console.log('aginkey:' + this.agingtimekey);
    };
    //æ§è¡æ¥è¯¢
    B1OemAgingComponent.prototype.getAgingData = function () {
        var _this = this;
        this.bsrv.getAll('/report/aging/query?timekey=' + this.agingtimekey).subscribe(function (res) {
            _this.setData(res);
        }, function (error) {
            alert('ERROR:è·å' + _this.agingtimekey + 'æ°æ®å¤±è´¥!');
            _this.reslength = 0;
            console.log('getagingdataerror!');
        });
    };
    B1OemAgingComponent.prototype.setData = function (res1) {
        this.reslength = res1.length;
        for (var j = 0; j < res1.length; j++) {
            __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][0].header.items[0][1].header = res1[j]['modeltype']; //modeltype
            __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][0].header.items[1][1].header = res1[j]['fiout_qty']; //fiout_qty
            __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][0].header.items[2][1].header = res1[j]['grade_all_qty']; //grade_all_qty
            __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][4].header.items[0][0].header = (res1[j]['s+a'] * 100).toFixed(2) + '%'; //s+a  total
            __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][0].values.items[0][0].value = (res1[j]['fpy'] * 100).toFixed(2) + '%'; //fpy
            __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][1].values.items[0][0].value = (res1[j]['ratio_q'] * 100).toFixed(2) + '%'; //.ratio_q
            __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][3].header.items[0][0].header = (res1[j]['ratio_t'] * 100).toFixed(2) + '%'; //.ratio_t
            __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][2].header.items[0][2].header = res1[j]['grade_a_qty']; //a_qty
            __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][2].header.items[0][0].header = (res1[j]['ratio_a'] * 100).toFixed(2) + '%'; //.ratio_a
            if (res1[j]['rev_grade_a'] != null) {
                if (res1[j]['rev_grade_a']['AN'] != null) {
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][2].header.items[1][1].header = res1[j]['rev_grade_a']['AN']; //.an
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][2].header.items[1][2].header = (res1[j]['rev_grade_a']['ratio_N'] * 100).toFixed(2) + '%'; //.an
                }
                if (res1[j]['rev_grade_a']['AL'] != null) {
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][2].header.items[2][1].header = res1[j]['rev_grade_a']['AL']; //.an
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][2].header.items[1][2].header = (res1[j]['rev_grade_a']['ratio_L'] * 100).toFixed(2) + '%'; //.an
                }
                if (res1[j]['rev_grade_a']['A0'] != null) {
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][2].header.items[3][1].header = res1[j]['rev_grade_a']['A0']; //.an
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][2].header.items[1][2].header = (res1[j]['rev_grade_a']['ratio_0'] * 100).toFixed(2) + '%'; //.an
                }
                if (res1[j]['rev_grade_a']['AC'] != null) {
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][2].header.items[4][1].header = res1[j]['rev_grade_a']['AC']; //.an
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][2].header.items[1][2].header = (res1[j]['rev_grade_a']['ratio_C'] * 100).toFixed(2) + '%'; //.an
                }
            }
            //q_top5
            if (res1[j]['top5_qgrade'] != null) {
                __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][1].values.items[0][2].value = res1[j]['top5_qgrade']['desc'][0];
                __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][1].values.items[0][3].value = res1[j]['top5_qgrade']['qty'][0];
                __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][1].values.items[0][4].value = (res1[j]['top5_qgrade']['ratio'][0] * 100).toFixed(2) + '%';
                for (var i_1 = 1; i_1 < res1[j]['top5_qgrade']['desc'].length; i_1++) {
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][1].values.items[i_1][1].value = res1[j]['top5_qgrade']['desc'][i_1];
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][1].values.items[i_1][2].value = res1[j]['top5_qgrade']['qty'][i_1];
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][1].values.items[i_1][3].value = (res1[j]['top5_qgrade']['ratio'][i_1] * 100).toFixed(2) + '%';
                }
            }
            //fpy_top5
            if (res1[j]['top5_rwk'] != null) {
                __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][0].values.items[0][2].value = res1[j]['top5_rwk']['desc'][0]; //fpytop5_
                __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][0].values.items[0][3].value = res1[j]['top5_rwk']['qty'][0]; //fpytop5_
                __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][0].values.items[0][4].value = (res1[j]['top5_rwk']['ratio'][0] * 100).toFixed(2) + '%'; //fpytop5_
                for (var i = 1; i < res1[j]['top5_rwk']['desc'].length; i++) {
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][0].values.items[i][1].value = res1[j]['top5_rwk']['desc'][i]; //fpytop5_
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][0].values.items[i][2].value = res1[j]['top5_rwk']['qty'][i]; //fpytop5_
                    __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */][0].values.items[i][3].value = (res1[j]['top5_rwk']['ratio'][i] * 100).toFixed(2) + '%'; //fpytop5_
                }
            }
            this.agingValues[j] = __WEBPACK_IMPORTED_MODULE_3_jquery__["extend"](true, [], __WEBPACK_IMPORTED_MODULE_5__common_multigrid_B1_aging_oem__["b" /* gridValues3 */]);
        }
    };
    //1.ååå°æäº¤è¡¨åä¿¡æ¯
    B1OemAgingComponent.prototype.submit = function () {
        //this.submitData = agingSubmitData;
        //setsubmitdata
        for (var i = 0; i < this.reslength; i++) {
            this.submitData.timekey = this.agingtimekey; //timekey
            this.submitData.modeltype = this.agingValues[i][0].header.items[0][1]['header']; //modeltype
            this.submitData.day = this.agingValues[i][4].values.items[0][1]['value']; //day
            this.submitData.night = this.agingValues[i][4].values.items[8][1]['value']; //night
            this.submitDataList[i] = __WEBPACK_IMPORTED_MODULE_3_jquery__["extend"](true, {}, this.submitData);
        }
        for (var i = 0; i < this.submitDataList.length; i++) {
            console.log(this.submitDataList[i].modeltype);
        }
        var url = '/report/aging/post'; //åå°æäº¤æå¨è¾å¥æ°æ®
        this.bsrv.post(url, this.submitDataList).subscribe(function (res) { console.log(res + 'æäº¤æåï¼'); }, function (error) {
            console.log('error:' + error);
        });
    };
    //2.è·ååå°çexcelæ°æ®
    B1OemAgingComponent.prototype.xls = function () {
        window.location.href = __WEBPACK_IMPORTED_MODULE_1_environments_environment__["a" /* environment */].boePath + "/report/aging/excel/download?timekey=" + this.agingtimekey;
        this.bsrv.getAll('window.location.href');
    };
    B1OemAgingComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-b1-oem-aging',
            template: __webpack_require__("./src/app/outstandingcase/cannedFReport/b1-oem-aging/b1-oem-aging.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/cannedFReport/b1-oem-aging/b1-oem-aging.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__transparent_display_b1_pecvd_boe_service__["a" /* BoeService */], __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_common__["DatePipe"]])
    ], B1OemAgingComponent);
    return B1OemAgingComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/cannedFReport/b2-daily/b2-daily.component.css":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/outstandingcase/cannedFReport/b2-daily/b2-daily.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"ui-g\">\n  <h3>çç®¡æ¥æ¥</h3>\n  <div class=\"ui-g-12\">\n      <div class=\"ui-helper-clearfix\">\n          <div class=\"ui-g-12 ui-lg-12 layui-container\" style=\"border:1px solid lightgray; background-color:mintcream;height:41%;width:100%\">\n              <div class=\"ui-g-12 ui-md-4 ui-lg-2 ui-g-nopad\">\n                  <label>Date :</label>\n                  <p-calendar [(ngModel)]=\"date\" [style]=\"{'width':'95%'}\" [inputStyle]=\"{'width':'100%'}\" [showIcon]=\"true\" showButtonBar=\"true\"\n                      dateFormat=\"yy-mm-dd\" dataType=\"string\"> </p-calendar>\n              </div>\n              <div class=\"ui-g-12 ui-md-4 ui-lg-2 ui-g-nopad\">\n                  <label>Factory :</label>\n                  <p-multiSelect defaultLabel=\"AR01\" [style]=\"{'width':'95%'}\" [options]=\"Fabs\" [(ngModel)]=\"selectedFabs\" id=\"pmfactory\">\n                  </p-multiSelect>\n              </div>\n              <div class=\"ui-g-12 ui-md-4 ui-lg-8 ui-g-nopad\" style=\"text-align:right;position: relative; min-height: 40px;\">\n                  <div style=\"position:absolute;bottom: -2px;right: 14px;\">\n                          <button type=\"button\" pButton label=\"Query\" (click)=\"dataQuery()\" (onClick)=\"showDialog()\"></button>\n                          <button type=\"button\" pButton icon=\"fa fa-file-o\" iconPos=\"left\" label=\"ExcelDown\" (click)=\"exportTable()\"></button>\n                  </div>\n              </div>\n          </div>\n          <!-- <div class=\"ui-g-12 ui-g-nopad\" style=\"text-align: right;margin-bottom: 10px;\">\n          <button type=\"button\" pButton icon=\"fa fa-file-o\" iconPos=\"left\" label=\"ExcelDown\" (click)=\"exportTable()\"></button>\n      </div> -->\n          <p-dialog [(visible)]=\"modalVisible\" [modal]=\"true\" [responsive]=\"true\" [width]=\"460\">\n              <label>è¯·éæ©è¦æ¥è¯¢çæ¥æä¸å·¥åï¼</label>\n          </p-dialog>\n          <div class=\"ui-g-12 ui-g-nopad\" id=\"exportableTable\">\n                <app-boe-multigrid [values]=\"gridValues\"></app-boe-multigrid>  \n          </div>\n      </div>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/outstandingcase/cannedFReport/b2-daily/b2-daily.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return B2DailyComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common_http__ = __webpack_require__("./node_modules/@angular/common/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_app_common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var B2DailyComponent = /** @class */ (function () {
    function B2DailyComponent(http, apiService) {
        this.http = http;
        this.apiService = apiService;
        this.modalVisible = false;
        this.Fabs = [
            { label: 'AR01', value: { id: 1, name: 'AR01', code: 'AR01' } },
            { label: 'CF01', value: { id: 2, name: 'CF01', code: 'CF01' } },
            { label: 'CE01', value: { id: 3, name: 'CE01', code: 'CE01' } }
        ];
    }
    B2DailyComponent.prototype.ngOnInit = function () {
        this.selectByFactory();
    };
    B2DailyComponent.prototype.dataQuery = function () {
        var _this = this;
        if (this.selectedFabs == null || this.date == null || this.selectedFabs.length == null) {
            this.showDialog();
        }
        else {
            this.factory = [];
            this.selectedFabs.forEach(function (ss) {
                _this.factory.push(ss.name);
            });
            this.dateTime = this.date.toString().split("-").join("");
            console.log(this.factory);
            console.log(this.dateTime);
            this.selectByFactory();
        }
    };
    B2DailyComponent.prototype.showDialog = function () {
        this.modalVisible = true;
    };
    B2DailyComponent.prototype.selectByFactory = function () {
        var _this = this;
        var options = {
            params: {
                factoryName: this.factory,
                dateTime: this.dateTime
            }
        };
        this.apiService.testGet('/assets/demo/data/PmDailyReport.json').subscribe(// /assets/demo/data/PmDailyReport.json
        function (res) {
            _this.DailyReportByProductList = res;
            //console.log(JSON.stringify(this.DailyReportByProductList));
            _this.initGridValue();
        }, function (error) {
            console.log(error);
        });
    };
    B2DailyComponent.prototype.initGridValue = function () {
        this.gridValues = [
            {
                header: {
                    backgroundColor: '#ffc',
                    items: [
                        [
                            { header: 'Daily Issue', colspan: 24 }
                        ]
                    ]
                },
                values: {
                    items: [
                        [
                            { value: 'Issue KeyIn', colspan: 24, rowspan: 1, editable: true, color: 'red' }
                        ]
                    ]
                }
            },
            {
                header: {
                    backgroundColor: '#d1e9e9',
                    items: [
                        [
                            { header: 'Shop', rowspan: 3, colspan: 1 },
                            { header: 'Product', rowspan: 3, colspan: 7 },
                            { header: 'Input', colspan: 5 },
                            { header: 'Output', colspan: 5 },
                            { header: 'Scrap', colspan: 2 },
                            { header: 'FAB Yield', colspan: 2 },
                            { header: 'WIP', colspan: 2 }
                        ],
                        [
                            { header: 'Plan', colspan: 2 },
                            { header: 'Act', colspan: 2 },
                            { header: 'Bal.', colspan: 1 },
                            { header: 'Plan', colspan: 2 },
                            { header: 'Act', colspan: 2 },
                            { header: 'Bal.', colspan: 1 },
                            { header: 'Day', rowspan: 2 },
                            { header: 'Cum', rowspan: 2 },
                            { header: 'Day', rowspan: 2 },
                            { header: 'Cum', rowspan: 2 },
                            { header: 'åæWIP', colspan: 1 },
                            { header: 'æ«æWIP', colspan: 1 }
                        ],
                        [
                            { header: 'Month' },
                            { header: 'Cum' },
                            { header: 'Day' },
                            { header: 'Cum' },
                            { header: 'Cum' },
                            { header: 'Month' },
                            { header: 'Cum' },
                            { header: 'Day' },
                            { header: 'Cum' },
                            { header: 'Cum' },
                            { header: 'Glass' },
                            { header: 'Glass' },
                        ]
                    ]
                },
                values: {
                    items: JSON.parse(JSON.stringify(this.DailyReportByProductList)) //JSON.parse(JSON.stringify(this.DailyReportByProductList) ) //JSON.parse(this.DailyReportByProductList.toString())
                }
            }
        ];
    };
    B2DailyComponent.prototype.set = function () {
        console.log("seeeeeeeeeeeeeet");
        this.http.post("http://localhost:8080/param/set", { 'value': this.valParam }).subscribe(function (res) {
            console.log('res : ', res);
        }, function (error) {
            console.log(error);
        });
    };
    B2DailyComponent.prototype.setParam = function () {
        // console.log("api service set");
        var options = {
            value: this.valParam
        };
        this.apiService.post('/test/param/set', this.valParam).subscribe(function (res) {
            console.log("post ok");
        });
    };
    B2DailyComponent.prototype.exportTable = function () {
        var blob = new Blob([document.getElementById('exportableTable').innerHTML], {
            // type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8"
            type: "application/vnd.ms-excel;charset=utf-8"
        });
        // saveAs(blob, 'çç®¡æ¥æ¥.xls');
    };
    B2DailyComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-b2-daily',
            template: __webpack_require__("./src/app/outstandingcase/cannedFReport/b2-daily/b2-daily.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/cannedFReport/b2-daily/b2-daily.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_common_http__["b" /* HttpClient */],
            __WEBPACK_IMPORTED_MODULE_2_app_common_service_api_api_service__["a" /* ApiService */]])
    ], B2DailyComponent);
    return B2DailyComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/cannedFReport/b4-cst/b4-cst.component.css":
/***/ (function(module, exports) {

module.exports = "th {\r\n    font-weight: inherit !important;\r\n    padding: .625em 0em !important;\r\n    font-size: 1px !important;\r\n    border: 1px solid #455e9c !important;\r\n}\r\n\r\ntd {\r\n    font-weight: inherit !important;\r\n    padding: 0.625em 0em !important;\r\n    font-size: 1px !important;\r\n    border: 1px solid #455e9c !important;\r\n    background-color: rgba(0,0,0,0.1)!important;\r\n    color: #F2F6FA !important;\r\n    text-align: center !important;\r\n}\r\n\r\n.touming {\r\n    background-color:rgba(0,0,0,0.1)!important;\r\n    color: #F2F6FA!important;\r\n}\r\n\r\ninput::-webkit-outer-spin-button,input::-webkit-inner-spin-button{\r\n    -webkit-appearance: none !important;\r\n}\r\n\r\n.header1 {\r\n    background-color: rgba(0,0,0,0.1)!important;\r\n    color: whitesmoke !important;\r\n    font-weight: bold !important;\r\n}\r\n\r\n.header2 {\r\n    background-color: #20506F !important;\r\n    color: #F2F6FA !important;\r\n}\r\n\r\n.header3 {\r\n    background-color: #20506F !important;\r\n    color: #F2F6FA !important;\r\n    font-weight: bold !important;\r\n}\r\n\r\n.clickable:hover {\r\n    background-color: #314879 !important;\r\n    cursor: pointer !important;\r\n}\r\n\r\n.alarm {\r\n    background-color: rgb(231, 130, 130) !important;\r\n}\r\n"

/***/ }),

/***/ "./src/app/outstandingcase/cannedFReport/b4-cst/b4-cst.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"firstView\">\n  <div style=\"height:178px;background-color: RGB(1,31,58);background-image: url('assets/picture/background/b4/bg3_01.png');background-repeat:no-repeat; \n    background-size:100% 100%;-moz-background-size:100% 100%;\">\n    <div class=\"ui-g-12\">\n      <h2 style=\"color:#F2F6FA;margin-top: 15px;text-align: center\">B4çäº§çæ¿</h2>\n    </div>\n    <div class=\"ui-g-12\">\n      <div class=\"ui-g-7\" style=\"color:#F2F6FA; margin: 0 7%;font-size: 1.17em;font-weight: bold;margin-top: -10px\">CSTä¿¡æ¯ç®¡ç</div>\n      <div class=\"ui-float-label ui-g-1\" style=\"margin-top:20px;margin-left: -30px\">\n        <input id=\"float-input-start\" type=\"number\" [(ngModel)]=\"dateStart\" pInputText style=\"color:#F2F6FA;text-align: center;width: 80px\">\n        <label for=\"float-input-start\" style=\"color:#F2F6FA;\">&nbsp;&nbsp;å¼å§å¤©æ°</label>\n      </div>\n      <div class=\"ui-float-label ui-g-1\" style=\"margin-top:20px ;margin-left:-10px\">\n        <input id=\"float-input-end\" type=\"number\" [(ngModel)]=\"dateEnd\" pInputText style=\"color:#F2F6FA;text-align: center;width: 80px\">\n        <label for=\"float-input-end\" style=\"color:#F2F6FA;\">&nbsp;&nbsp;ç»æå¤©æ°</label>\n      </div>\n      <p-button class=\"ui-g-1\" label=\"æ¥è¯¢\" (click)=\"queryData()\" icon=\"fa fa-search\" style=\"padding:20px 0px 0px 0px; margin-left: -10px\"></p-button>\n      <p-button  label=\"å·æ°\" (click)=\"refresh()\" style=\"padding-top:20px;margin-left: -30px\"></p-button>\n    </div>\n  </div>\n  <div class=\"ui-g\" style=\"padding:0 3%;height:100%;background-image: url('assets/picture/background/b4/bg3_02.png');\n    background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;\">\n    <!-- First Table -->\n    <div class=\"ui-g-6\">\n      <p-table>\n        <ng-template pTemplate=\"header\">\n          <!-- ç¬¬ä¸è¡ -->\n          <tr>\n            <th class=\"header1\" rowspan=\"2\">å¡å¤¹ç±»å</th>\n            <th class=\"header1\" rowspan=\"2\">ä½ç½®</th>\n            <th class=\"header1\" rowspan=\"2\">åºæ¿å±æ§</th>\n            <th class=\"header1\" rowspan=\"2\">æ»æ°</th>\n            <th class=\"header1\" rowspan=\"2\">Ratio</th>\n            <th class=\"header1\" rowspan=\"2\">Pro</th>\n            <th class=\"header1\" rowspan=\"2\">E/D</th>\n            <th class=\"header1\" rowspan=\"2\">Dum</th>\n            <th class=\"header1\" colspan=\"7\">Empty</th>\n          </tr>\n          <!-- ç¬¬äºè¡ -->\n          <tr>\n            <th class=\"header1\">TTL</th>\n            <th class=\"header1\">Oneqp</th>\n            <th class=\"header1\">Move</th>\n            <th class=\"header1\">Istk</th>\n            <th class=\"header1\">Dirty</th>\n            <th class=\"header1\">Ostk</th>\n            <th class=\"header1\">Other</th>\n          </tr>\n          <!-- ç¬¬ä¸è¡ -->\n          <tr>\n            <th class=\"touming\" rowspan=\"3\">ACN</th>\n            <th class=\"touming\">Array</th>\n            <th class=\"touming\">TFT</th>\n            <th class=\"touming\" rowspan=\"2\">1141</th>\n\n            <th class=\"touming\" [ngClass]=\"{clickable:i > 0,alarm:(i==2 && edACNArraySort && qty !== '-')}\" *ngFor=\"let qty of ACNArrayTFT;let i = index\"\n              (click)=\"toSecondTable($event,'ACN','Array','TFT',i)\">{{qty}}</th>\n\n            <th class=\"touming\" *ngFor=\"let qty of ACNEMPTY;let i = index\" [ngClass]=\"{clickable:((i>0)&&(i<6)), alarm:(i == 4 && qty !== '-')}\"\n              (click)=\"toSecondTableEmpty($event,'ACN',i)\">{{qty}}</th>\n          </tr>\n          <!-- ç¬¬åè¡ -->\n          <tr>\n            <th class=\"touming\">Sort</th>\n            <th class=\"touming\">TFT</th>\n            <th class=\"touming\" *ngFor=\"let qty of ACNSortTFT;let i =index\" [ngClass]=\"{clickable:i > 0,alarm:(i == 1 && qty > 40 ) || (i==2 && edACNArraySort && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'ACN','Sort','TFT',i)\">{{qty}}</th>\n            <th class=\"touming\" rowspan=\"2\" colspan=\"7\">å ç¨æ åï¼\n              MP Arrayâ¥957ï¼MP Sortâ¤40ï¼EN/DV â¤50ï¼Dummyâ¤53ï¼Cellåç¨â¤3ï¼</th>\n          </tr>\n          <!-- ç¬¬äºè¡ -->\n          <tr>\n            <th class=\"touming\">Cell</th>\n            <th class=\"touming\">TFT</th>\n            <th class=\"touming\">3</th>\n            <th class=\"touming\" *ngFor=\"let qty of ACNCellTFT;let i = index\" [ngClass]=\"{clickable:i > 0,alarm:(i == 3 && qty > 3) || ((i >= 1 && i <= 2) && pedACNCell && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'ACN','Cell','TFT',i)\">{{qty}}</th>\n          </tr>\n          <!-- ç¬¬å­è¡ -->\n          <tr>\n            <th class=\"touming\" colspan=\"15\">&nbsp;</th>\n          </tr>\n          <!-- ç¬¬ä¸è¡ -->\n          <tr>\n            <th class=\"touming\" rowspan=\"5\">FCW</th>\n            <th class=\"touming\">CF</th>\n            <th class=\"touming\">CF</th>\n            <th class=\"touming\" rowspan=\"5\">908</th>\n\n            <th class=\"touming\" *ngFor=\"let qty of FCWCFCF;let i = index\" [ngClass]=\"{clickable:i > 0,alarm:(i==2 && edFCWCFScfStft && qty !== '-') || (i == 3 && dumFCWCFScfStft && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'FCW','CF','CF',i)\">{{qty}}</th>\n\n            <th class=\"touming\" rowspan=\"2\" *ngFor=\"let qty of FCWEMPTY;let i = index\" [ngClass]=\"{clickable:((i>0)&&(i<6)), alarm:(i == 4 && qty !== '-')}\"\n              (click)=\"toSecondTableEmpty($event,'FCW',i)\">{{qty}}</th>\n          </tr>\n          <!-- ç¬¬å«è¡ -->\n          <tr>\n            <th class=\"touming\">Sort</th>\n            <th class=\"touming\">CF</th>\n            <th class=\"touming\" *ngFor=\"let qty of FCWSortCF;let i = index\" [ngClass]=\"{clickable:i > 0,alarm:(i==2 && edFCWCFScfStft && qty !== '-') || (i == 3 && dumFCWCFScfStft && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'FCW','Sort','CF',i)\">{{qty}}</th>\n          </tr>\n          <!-- ç¬¬ä¹è¡ -->\n          <tr>\n            <th class=\"touming\">Sort</th>\n            <th class=\"touming\">TFT</th>\n            <th class=\"touming\" *ngFor=\"let qty of FCWSortTFT;let i = index\" [ngClass]=\"{clickable:i > 0,alarm:(i == 1&& qty > 151) || (i==2 && edFCWCFScfStft && qty !== '-') || (i == 3 && dumFCWCFScfStft && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'FCW','Sort','TFT',i)\">{{qty}}</th>\n            <th class=\"touming\" rowspan=\"3\" colspan=\"7\">å ç¨æ åï¼\n              MP CFâ¥630ï¼EN/DV â¤26ï¼Dummy â¤9ï¼\n              Sort TFTâ¤151ï¼Cellâ¤50ï¼Emptyâ¥30ï¼</th>\n          </tr>\n          <!-- ç¬¬åè¡ -->\n          <tr>\n            <th class=\"touming\">Cell</th>\n            <th class=\"touming\">TFT</th>\n            <th class=\"touming\" *ngFor=\"let qty of FCWCellTFT;let i = index\" [ngClass]=\"{clickable:i > 0,alarm:((i >= 1 && i <=3) && peddFCWCell && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'FCW','Cell','TFT',i)\">{{qty}}</th>\n          </tr>\n          <!-- ç¬¬åä¸è¡ -->\n          <tr>\n            <th class=\"touming\">Cell</th>\n            <th class=\"touming\">CF</th>\n            <th class=\"touming\" *ngFor=\"let qty of FCWCellCF;let i = index\" [ngClass]=\"{clickable:i > 0,alarm:((i >= 1 && i <=3) && peddFCWCell && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'FCW','Cell','CF',i)\">{{qty}}</th>\n          </tr>\n          <!-- ç¬¬åäºè¡ -->\n          <tr>\n            <th class=\"touming\" colspan=\"15\">&nbsp;</th>\n          </tr>\n          <!-- ç¬¬åä¸è¡ -->\n          <tr>\n            <th class=\"touming\" rowspan=\"4\">CCN</th>\n            <th class=\"touming\">Array</th>\n            <th class=\"touming\">-</th>\n            <th class=\"touming\" rowspan=\"4\">410</th>\n\n            <th class=\"touming\" *ngFor=\"let qty of CCNArray;let i = index\" [ngClass]=\"{clickable:i > 0,alarm:((i >= 1 && i <=3) && peddCCNArraySort && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'CCN','Array','-',i)\">{{qty}}</th>\n\n            <th class=\"touming\" rowspan=\"2\" *ngFor=\"let qty of CCNEMPTY;let i = index\" [ngClass]=\"{clickable:((i>0)&&(i<6)), alarm:(i == 4 && qty !== '-')}\"\n              (click)=\"toSecondTableEmpty($event,'CCN',i)\">{{qty}}</th>\n          </tr>\n          <!-- ç¬¬ååè¡ -->\n          <tr>\n            <th class=\"touming\">Sort</th>\n            <th class=\"touming\">-</th>\n            <th class=\"touming\" *ngFor=\"let qty of CCNSort;let i = index\" [ngClass]=\"{clickable:i > 0,alarm:((i >= 1 && i <=3) && peddCCNArraySort && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'CCN','Sort','-',i)\">{{qty}}</th>\n          </tr>\n          <!-- ç¬¬åäºè¡ -->\n          <tr>\n            <th class=\"touming\">PI/RW</th>\n            <th class=\"touming\">-</th>\n            <th class=\"touming\" *ngFor=\"let qty of CCNPIRW;let i = index\" [ngClass]=\"{clickable:i > 0,alarm:(i == 1 && qty > 19) || (i == 2 && edCCNPIOther && qty !== '-') || (i == 3 && dumCCNPIOther && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'CCN','PI/RW','-',i)\">{{qty}}</th>\n            <th class=\"touming\" rowspan=\"2\" colspan=\"7\">å ç¨æ åï¼\n              PI Rework â¤19ï¼Dummyâ¤38ï¼</th>\n          </tr>\n          <!-- ç¬¬åå­è¡ -->\n          <tr>\n            <th class=\"touming\">Other</th>\n            <th class=\"touming\">-</th>\n            <th class=\"touming\" *ngFor=\"let qty of CCNOther;let i = index\" [ngClass]=\"{clickable:i > 0,alarm:(i == 2 && edCCNPIOther && qty !== '-') || (i == 3 && dumCCNPIOther && qty !== '-')}\"\n              (click)=\"toSecondTable($event,'CCN','Other','-',i)\">{{qty}}</th>\n          </tr>\n          <!-- ç¬¬åä¸è¡ -->\n          <tr>\n            <th class=\"touming\" colspan=\"15\">&nbsp;</th>\n          </tr>\n          <!-- ç¬¬åå«è¡ -->\n          <tr>\n            <th class=\"touming\">MCW</th>\n            <th class=\"touming\">Cell</th>\n            <th class=\"touming\">-</th>\n            <th class=\"touming\">225</th>\n\n            <th class=\"touming\" *ngFor=\"let qty of MCWCell;let i = index\" [ngClass]=\"{clickable:i > 0}\" (click)=\"toSecondTable($event,'MCW','Cell','-',i)\">{{qty}}</th>\n\n            <th class=\"touming\" rowspan=\"2\" *ngFor=\"let qty of MCWEMPTY;let i = index\" [ngClass]=\"{clickable:((i>0)&&(i<6)), alarm:(i == 4 && qty !== '-')}\"\n              (click)=\"toSecondTableEmpty($event,'MCW',i)\">{{qty}}</th>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n\n    <!-- Second Table -->\n    <div class=\"ui-g-2\">\n      <p-table>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"header1\" colspan=\"4\">Stocker+EQP</th>\n          </tr>\n          <tr>\n            <th class=\"header1\">Stocker</th>\n            <th class=\"header1\">Max</th>\n            <th class=\"header1\">Current</th>\n            <th class=\"header1\">Ratio</th>\n          </tr>\n          <tr>\n            <th class=\"header3\">TFST01</th>\n            <th class=\"header2\" *ngFor=\"let name of TFST01;let i=index\" [ngClass]=\"{alarm:(i == 2 && tfst01)}\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of TFST1\">\n            <th class=\"touming\">{{obj.cst_spec}}</th>\n            <th class=\"touming\">{{obj.maxqty}}</th>\n            <th class=\"touming\">{{obj.currentqty}}</th>\n            <th class=\"touming\">{{obj.full_ratio}}</th>\n          </tr>\n          <tr>\n            <th class=\"header3\">TFST02</th>\n            <th class=\"header2\" *ngFor=\"let name of TFST02;let i=index\" [ngClass]=\"{alarm:(i == 2 && tfst02)}\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of TFST2\">\n            <th class=\"touming\">{{obj.cst_spec}}</th>\n            <th class=\"touming\">{{obj.maxqty}}</th>\n            <th class=\"touming\">{{obj.currentqty}}</th>\n            <th class=\"touming\">{{obj.full_ratio}}</th>\n          </tr>\n          <tr>\n            <th class=\"header3\">TFST03</th>\n            <th class=\"header2\" *ngFor=\"let name of TFST03;let i=index\" [ngClass]=\"{alarm:(i == 2 && tfst03)}\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of TFST3\">\n            <th class=\"touming\">{{obj.cst_spec}}</th>\n            <th class=\"touming\">{{obj.maxqty}}</th>\n            <th class=\"touming\">{{obj.currentqty}}</th>\n            <th class=\"touming\">{{obj.full_ratio}}</th>\n          </tr>\n          <tr>\n            <th class=\"header3\">TFST04</th>\n            <th class=\"header2\" *ngFor=\"let name of TFST04;let i=index\" [ngClass]=\"{alarm:(i == 2 && tfst04)}\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of TFST4\">\n            <th class=\"touming\">{{obj.cst_spec}}</th>\n            <th class=\"touming\">{{obj.maxqty}}</th>\n            <th class=\"touming\">{{obj.currentqty}}</th>\n            <th class=\"touming\">{{obj.full_ratio}}</th>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n\n    <!-- Third Table -->\n    <div class=\"ui-g-2\">\n      <p-table>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"header1\" colspan=\"3\">Stocker</th>\n          </tr>\n          <tr>\n            <th class=\"header1\">Max</th>\n            <th class=\"header1\">Current</th>\n            <th class=\"header1\">Ratio</th>\n          </tr>\n          <tr>\n            <th class=\"header2\" *ngFor=\"let name of TFST01S;let i=index\" [ngClass]=\"{alarm:(i == 2 && tfst01s)}\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of TFST1S\">\n            <th class=\"touming\">{{obj.maxqty}}</th>\n            <th class=\"touming\">{{obj.currentqty}}</th>\n            <th class=\"touming\">{{obj.full_ratio}}</th>\n          </tr>\n          <tr>\n            <th class=\"header2\" *ngFor=\"let name of TFST02S;let i=index\" [ngClass]=\"{alarm:(i == 2 && tfst02s)}\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of TFST2S\">\n            <th class=\"touming\">{{obj.maxqty}}</th>\n            <th class=\"touming\">{{obj.currentqty}}</th>\n            <th class=\"touming\">{{obj.full_ratio}}</th>\n          </tr>\n          <tr>\n            <th class=\"header2\" *ngFor=\"let name of TFST03S;let i=index\" [ngClass]=\"{alarm:(i == 2 && tfst03s)}\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of TFST3S\">\n            <th class=\"touming\">{{obj.maxqty}}</th>\n            <th class=\"touming\">{{obj.currentqty}}</th>\n            <th class=\"touming\">{{obj.full_ratio}}</th>\n          </tr>\n          <tr>\n            <th class=\"header2\" *ngFor=\"let name of TFST04S;let i=index\" [ngClass]=\"{alarm:(i == 2 && tfst04s)}\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of TFST4S\">\n            <th class=\"touming\">{{obj.maxqty}}</th>\n            <th class=\"touming\">{{obj.currentqty}}</th>\n            <th class=\"touming\">{{obj.full_ratio}}</th>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n    <div class=\"ui-g-2\">\n      <p-table>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"header1\" colspan=\"4\">Stocker+EQP CSTåå¸</th>\n          </tr>\n          <tr>\n            <th class=\"header1\">Pro</th>\n            <th class=\"header1\">E/D</th>\n            <th class=\"header1\">Dum</th>\n            <th class=\"header1\">Empty</th>\n          </tr>\n          <tr>\n            <th class=\"header2\" *ngFor=\"let name of SUM1\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of lastT01\">\n            <th class=\"touming\">{{obj.production}}</th>\n            <th class=\"touming\">{{obj.engdev}}</th>\n            <th class=\"touming\">{{obj.dummy}}</th>\n            <th class=\"touming\">{{obj.empty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header2\" *ngFor=\"let name of SUM2\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of lastT02\">\n            <th class=\"touming\">{{obj.production}}</th>\n            <th class=\"touming\">{{obj.engdev}}</th>\n            <th class=\"touming\">{{obj.dummy}}</th>\n            <th class=\"touming\">{{obj.empty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header2\" *ngFor=\"let name of SUM3\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of lastT03\">\n            <th class=\"touming\">{{obj.production}}</th>\n            <th class=\"touming\">{{obj.engdev}}</th>\n            <th class=\"touming\">{{obj.dummy}}</th>\n            <th class=\"touming\">{{obj.empty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header2\" *ngFor=\"let name of SUM4\">{{name}}</th>\n          </tr>\n          <tr *ngFor=\"let obj of lastT04\">\n            <th class=\"touming\">{{obj.production}}</th>\n            <th class=\"touming\">{{obj.engdev}}</th>\n            <th class=\"touming\">{{obj.dummy}}</th>\n            <th class=\"touming\">{{obj.empty}}</th>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n  </div>\n  <div style=\"height:45px;background-image: url('assets/picture/background/b4/bg3_03.png');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;\"></div>\n</div>\n<!-- ä¸é»çäºçº§è¡¨ -->\n<div *ngIf=\"secondView\">\n  <div class=\"ui-g\" style=\"padding:20px;height:100%;background-image: url('assets/picture/background/b4/6.png');background-repeat:no-repeat; \n  background-size:100% 100%;-moz-background-size:100% 100%;\">\n    <div class=\"ui-g-12\">\n      <p-button label=\"return\" icon=\"fa fa-home\" style=\"float: right;\" (click)=\"showFirstTable()\"></p-button>\n    </div>\n    <div class=\"ui-g-12\">\n      <p-table [resizableColumns]=\"true\" columnResizeMode=\"expand\">\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"header1\" pResizableColumn width=\"6%\">CST_ID</th>\n            <th class=\"header1\" pResizableColumn width=\"3%\">Day</th>\n            <th class=\"header1\" pResizableColumn width=\"5%\">Oper</th>\n            <th class=\"header1\" pResizableColumn width=\"5%\">EQP ID</th>\n            <th class=\"header1\" pResizableColumn width=\"10%\">Lot ID</th>\n            <th class=\"header1\" pResizableColumn width=\"10%\">Lot ProSpec</th>\n            <th class=\"header1\" pResizableColumn width=\"5%\">Pro Qty</th>\n            <th class=\"header1\" pResizableColumn width=\"3%\">Lot Hold State</th>\n            <th class=\"header1\" pResizableColumn width=\"14%\">Lot Last Event Comment</th>\n            <th class=\"header1\" pResizableColumn width=\"11%\">Lot Last Event Time</th>\n            <th class=\"header1\" pResizableColumn>Last Comment</th>\n            <th class=\"header1\" pResizableColumn width=\"11%\">Last Event Time</th>\n          </tr>\n          <tr *ngFor=\"let obj of SecondTableArray\">\n            <td>{{obj.cst_id}}</td>\n            <td>{{obj.days}}</td>\n            <td>{{obj.operation}}</td>\n            <td>{{obj.eqp}}</td>\n            <td>{{obj.lot_id}}</td>\n            <td>{{obj.product}}</td>\n            <td>{{obj.qty}}</td>\n            <td>{{obj.holdstate}}</td>\n            <td>{{obj.lot_comment}}</td>\n            <td>{{obj.lot_time}}</td>\n            <td>{{obj.cst_comment}}</td>\n            <td>{{obj.cst_time}}</td>\n          </tr>\n        </ng-template>\n\n      </p-table>\n    </div>\n  </div>\n</div>\n<!-- ä¸é»çäºçº§è¡¨åºåç»æ -->"

/***/ }),

/***/ "./src/app/outstandingcase/cannedFReport/b4-cst/b4-cst.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return B4CstComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__ = __webpack_require__("./src/app/outstandingcase/cannedFReport/b4-cst/model/cst_stocker_info.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var B4CstComponent = /** @class */ (function () {
    function B4CstComponent(apiService) {
        this.apiService = apiService;
        this.SecondTableArray = [];
        // å£°æä¸¤ä¸ªåéç¨æ¥å­ä¸ä¸æ¬¡æ§è¡queryDataæ¹æ³çå¼å§æ¶é´åç»ææ¶é´
        this.predateStart = -1;
        this.predateEnd = -1;
        this.finalArray = []; // ç¨æ¥å­å¤çå»éåçæ°ç»åç´ ï¼å¯ä»¥ç´æ¥ä¼ è¿getCstInfoArrayæ¹æ³ä¸­
        this.finalEmptyArray = [];
        this.ArrayFirst = []; // ç¨æ¥å­ä¸é¢çåä¸ä¸ªæ°ç»
        // ç¨æ¥å­å·¦è¾¹ç¬¬ä¸ä¸ªè¡¨RatioãproãE/DãDumååæ°æ®
        this.ACNArrayTFT = ['-', '-', '-', '-'];
        this.ACNSortTFT = ['-', '-', '-', '-'];
        this.ACNCellTFT = ['-', '-', '-', '-'];
        this.FCWCFCF = ['-', '-', '-', '-'];
        this.FCWSortCF = ['-', '-', '-', '-'];
        this.FCWSortTFT = ['-', '-', '-', '-'];
        this.FCWCellTFT = ['-', '-', '-', '-'];
        this.FCWCellCF = ['-', '-', '-', '-'];
        this.CCNArray = ['-', '-', '-', '-'];
        this.CCNSort = ['-', '-', '-', '-'];
        this.CCNPIRW = ['-', '-', '-', '-'];
        this.CCNOther = ['-', '-', '-', '-'];
        this.MCWCell = ['-', '-', '-', '-'];
        // æ§å¶æ¯å¦æ¥è­¦ï¼å¤æ­å ä¸ªååæ ¼çæ°å¼åæ¯å¦å¤§äºæä¸ä¸ªå¼ã
        this.edACNArraySort = false;
        this.pedACNCell = false;
        this.edFCWCFScfStft = false;
        this.dumFCWCFScfStft = false;
        this.peddFCWCell = false;
        this.peddCCNArraySort = false;
        this.edCCNPIOther = false;
        this.dumCCNPIOther = false;
        // å®ä¹ä¸ä¸ªæ°ç»ç¨æ¥ä¿å­æ¥è­¦çåå¼ã
        this.alarmArray = [50, 0, 26, 9, 50, 0, 0, 38];
        this.ArraySecond = []; // ç¨æ¥å­ä¸é¢çåä¸ªæ°ç»
        // ç¨æ¥å·¦è¾¹ç¬¬ä¸ä¸ªè¡¨emptyä¸åçæ°æ®
        this.ACNEMPTY = ['-', '-', '-', '-', '-', '-', '-'];
        this.FCWEMPTY = ['-', '-', '-', '-', '-', '-', '-'];
        this.CCNEMPTY = ['-', '-', '-', '-', '-', '-', '-'];
        this.MCWEMPTY = ['-', '-', '-', '-', '-', '-', '-'];
        // ç¨æ¥å­ç¬¬äºä¸ªè¡¨stockeræ¯TFSTç­å è¡çæ°æ®
        this.TFST01 = ['-', '-', '-'];
        this.TFST02 = ['-', '-', '-'];
        this.TFST03 = ['-', '-', '-'];
        this.TFST04 = ['-', '-', '-'];
        // ç¨æ¥å­ç¬¬äºä¸ªè¡¨ACNãFCWãCCNä¸è¡çæ°æ®
        this.TFST1 = [
            new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */]('-', '-', '-', '-'),
            new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */]('-', '-', '-', '-'),
            new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */]('-', '-', '-', '-')
        ];
        this.TFST2 = this.TFST1;
        this.TFST3 = this.TFST1;
        this.TFST4 = this.TFST1;
        // å¤æ­ç¬¬äºä¸ªè¡¨çratioæ¯å¦è¶è¿90%
        this.tfst01 = false;
        this.tfst02 = false;
        this.tfst03 = false;
        this.tfst04 = false;
        // æåä¸ä¸ªè¡¨çstockeræ¯TFSTç­å è¡çæ°æ®
        this.SUM1 = ['-', '-', '-', '-'];
        this.SUM2 = ['-', '-', '-', '-'];
        this.SUM3 = ['-', '-', '-', '-'];
        this.SUM4 = ['-', '-', '-', '-'];
        // æåä¸ä¸ªè¡¨çACNãFCWãCCNä¸è¡çæ°æ®
        this.lastT01 = [
            new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */]('-', '-', '-', '-'),
            new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */]('-', '-', '-', '-'),
            new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */]('-', '-', '-', '-')
        ];
        this.lastT02 = this.lastT01;
        this.lastT03 = this.lastT01;
        this.lastT04 = this.lastT01;
        this.firstView = false;
        this.secondView = false;
    }
    B4CstComponent.prototype.ngOnInit = function () {
        var _this = this;
        var url = '/assets/demo/data/B4/cstinfo.json';
        this.apiService.testGet(url).subscribe(function (res) {
            _this.getCstInfoArray(res);
            _this.getAlarm();
        });
        var url1 = '/assets/demo/data/B4/cstinfoempty.json';
        this.apiService.testGet(url1).subscribe(function (res) {
            _this.getCstInfoEmptyArray(res);
        });
        var url2 = '/assets/demo/data/B4/cststockereqpinfo.json';
        this.apiService.testGet(url2).subscribe(function (res) {
            _this.getCstStockerInfoArray(res);
        });
        var url3 = '/assets/demo/data/B4/cststockerinfo.json';
        this.apiService.testGet(url3).subscribe(function (res) {
            _this.getCstStockerInfoArray(res);
        });
        var url4 = '/assets/demo/data/B4/cstinfo4vo.json';
        this.apiService.testGet(url4).subscribe(function (res) {
            _this.getCstInfo4VOArray(res);
        });
        this.firstView = true;
    };
    // è·åç¬¬äºä¸ªè¡¨çæ°ç»æ°æ®
    B4CstComponent.prototype.getCstStockerInfoArray = function (data) {
        this.TFST01 = [];
        this.TFST02 = [];
        this.TFST03 = [];
        this.TFST04 = [];
        this.TFST1 = [];
        this.TFST2 = [];
        this.TFST3 = [];
        this.TFST4 = [];
        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
            var obj = data_1[_i];
            if (obj.stocker === 'TFST01') {
                if (obj.cst_spec === 'TFST01') {
                    this.TFST01.push(obj.maxqty, obj.currentqty, obj.full_ratio);
                }
                if (obj.cst_spec === 'ACN') {
                    this.TFST1.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
                if (obj.cst_spec === 'FCW') {
                    this.TFST1.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
                if (obj.cst_spec === 'CCN') {
                    this.TFST1.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
            }
            if (obj.stocker === 'TFST02') {
                if (obj.cst_spec === 'TFST02') {
                    this.TFST02.push(obj.maxqty, obj.currentqty, obj.full_ratio);
                }
                if (obj.cst_spec === 'ACN') {
                    this.TFST2.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
                if (obj.cst_spec === 'FCW') {
                    this.TFST2.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
                if (obj.cst_spec === 'CCN') {
                    this.TFST2.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
            }
            if (obj.stocker === 'TFST03') {
                if (obj.cst_spec === 'TFST03') {
                    this.TFST03.push(obj.maxqty, obj.currentqty, obj.full_ratio);
                }
                if (obj.cst_spec === 'ACN') {
                    this.TFST3.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
                if (obj.cst_spec === 'FCW') {
                    this.TFST3.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
                if (obj.cst_spec === 'CCN') {
                    this.TFST3.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
            }
            if (obj.stocker === 'TFST04') {
                if (obj.cst_spec === 'TFST04') {
                    this.TFST04.push(obj.maxqty, obj.currentqty, obj.full_ratio);
                }
                if (obj.cst_spec === 'ACN') {
                    this.TFST4.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
                if (obj.cst_spec === 'FCW') {
                    this.TFST4.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
                if (obj.cst_spec === 'CCN') {
                    this.TFST4.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["d" /* CstStockerInfo */](obj.cst_spec, obj.maxqty, obj.currentqty, obj.full_ratio));
                }
            }
        }
        if (parseInt(this.TFST01[2], 10) >= 90) {
            this.tfst01 = true;
        }
        if (parseInt(this.TFST02[2], 10) >= 90) {
            this.tfst02 = true;
        }
        if (parseInt(this.TFST03[2], 10) >= 90) {
            this.tfst03 = true;
        }
        if (parseInt(this.TFST04[2], 10) >= 90) {
            this.tfst04 = true;
        }
        this.getChange(this.TFST01);
        this.getChange(this.TFST02);
        this.getChange(this.TFST03);
        this.getChange(this.TFST04);
        this.getChangeObj(this.TFST1);
        this.getChangeObj(this.TFST2);
        this.getChangeObj(this.TFST3);
        this.getChangeObj(this.TFST4);
    };
    // è·åç¬¬åä¸ªè¡¨çæ°ç»æ°æ®
    B4CstComponent.prototype.getCstInfo4VOArray = function (data) {
        this.SUM1 = [];
        this.SUM2 = [];
        this.SUM3 = [];
        this.SUM4 = [];
        this.lastT01 = [];
        this.lastT02 = [];
        this.lastT03 = [];
        this.lastT04 = [];
        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {
            var obj = data_2[_i];
            if (obj.stocker === 'TFST01') {
                if (obj.cst_spec === 'TFST01') {
                    this.SUM1.push(obj.production, obj.engdev, obj.dummy, obj.empty);
                }
                if (obj.cst_spec === 'ACN') {
                    this.lastT01.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
                if (obj.cst_spec === 'FCW') {
                    this.lastT01.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
                if (obj.cst_spec === 'CCN') {
                    this.lastT01.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
            }
            if (obj.stocker === 'TFST02') {
                if (obj.cst_spec === 'TFST02') {
                    this.SUM2.push(obj.production, obj.engdev, obj.dummy, obj.empty);
                }
                if (obj.cst_spec === 'ACN') {
                    this.lastT02.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
                if (obj.cst_spec === 'FCW') {
                    this.lastT02.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
                if (obj.cst_spec === 'CCN') {
                    this.lastT02.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
            }
            if (obj.stocker === 'TFST03') {
                if (obj.cst_spec === 'TFST03') {
                    this.SUM3.push(obj.production, obj.engdev, obj.dummy, obj.empty);
                }
                if (obj.cst_spec === 'ACN') {
                    this.lastT03.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
                if (obj.cst_spec === 'FCW') {
                    this.lastT03.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
                if (obj.cst_spec === 'CCN') {
                    this.lastT03.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
            }
            if (obj.stocker === 'TFST04') {
                if (obj.cst_spec === 'TFST04') {
                    this.SUM4.push(obj.production, obj.engdev, obj.dummy, obj.empty);
                }
                if (obj.cst_spec === 'ACN') {
                    this.lastT04.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
                if (obj.cst_spec === 'FCW') {
                    this.lastT04.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
                if (obj.cst_spec === 'CCN') {
                    this.lastT04.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["a" /* CstInfo4VO */](obj.production, obj.engdev, obj.dummy, obj.empty));
                }
            }
        }
        this.getChange(this.SUM1);
        this.getChange(this.SUM2);
        this.getChange(this.SUM3);
        this.getChange(this.SUM4);
        this.getChangeObj(this.lastT01);
        this.getChangeObj(this.lastT02);
        this.getChangeObj(this.lastT03);
        this.getChangeObj(this.lastT04);
    };
    // ç¹å»æ¥è¯¢æé®è°ç¨çæ¹æ³
    B4CstComponent.prototype.queryData = function () {
        var _this = this;
        if (this.dateStart != null && this.dateEnd != null) {
            this.predateStart = -1;
            this.predateEnd = -1;
            var option = {
                params: {
                    start: this.dateStart,
                    end: this.dateEnd
                }
            };
            var url = '/assets/demo/data/B4/querycstinfo.json';
            this.apiService.get(url, option).subscribe(function (res) {
                _this.getReduce(res); // ææ°ç»å¤çæåç´ cst_specãfactoryãtypeå±æ§æ²¡æéå¤çæ°ç»ï¼å¦ææéå¤æ±åï¼ratioæ±å¹³å
                _this.getCstInfoArray(_this.finalArray);
                _this.getAlarm();
            });
            var url1 = '/assets/demo/data/B4/queryempty.json';
            this.apiService.get(url1, option).subscribe(function (res) {
                _this.getReduceEmpty(res);
                _this.getCstInfoEmptyArray(_this.finalEmptyArray);
            });
            // æ¹æ³æ§è¡ç»æåï¼è®°å½æ¥è¯¢æ¶é´ï¼ä»¥ä¾¿ä¸é»æ¶è°ç¨
            this.predateStart = this.dateStart;
            this.predateEnd = this.dateEnd;
        }
    };
    // ææ°ç»å¤çæåç´ cst_specãfactoryãtypeå±æ§æ²¡æéå¤çæ°ç»ï¼å¦ææéå¤æ±åï¼ratioæ±å¹³å
    B4CstComponent.prototype.getReduce = function (data) {
        this.finalArray = [];
        var tempArray = [];
        // å»ææ°ç»ä¸­cst_specãfactoryãtypeå±æ§ä¸æ ·çåç´ 
        for (var _i = 0, data_3 = data; _i < data_3.length; _i++) {
            var obj = data_3[_i];
            var flag = true;
            if (tempArray.length !== 0) {
                for (var _a = 0, tempArray_1 = tempArray; _a < tempArray_1.length; _a++) {
                    var obj1 = tempArray_1[_a];
                    if (obj.cst_spec === obj1.cst_spec && obj.factory === obj1.factory && obj.type === obj1.type) {
                        flag = false;
                    }
                }
                if (flag) {
                    tempArray.push(obj);
                }
            }
            else {
                tempArray.push(obj);
            }
        }
        for (var _b = 0, tempArray_2 = tempArray; _b < tempArray_2.length; _b++) {
            var obj = tempArray_2[_b];
            var full_ratioArray = [];
            var proArray = [];
            var engArray = [];
            var devArray = [];
            var dumArray = [];
            for (var _c = 0, data_4 = data; _c < data_4.length; _c++) {
                var obj1 = data_4[_c];
                if (obj1.cst_spec === obj.cst_spec && obj1.factory === obj.factory && obj1.type === obj.type) {
                    full_ratioArray.push(obj1.full_ratio);
                    proArray.push(obj1.pro);
                    engArray.push(obj1.eng);
                    devArray.push(obj1.dev);
                    dumArray.push(obj1.dum);
                }
            }
            var sumFullRatio = 0;
            var avgFullRatio = 0;
            var avgFullRatioStr = '';
            var sumPro = 0;
            var sumEng = 0;
            var sumDev = 0;
            var sumDum = 0;
            // æ°ç»æ±å¹³åãæ°ç»æ±å
            sumFullRatio = this.getArraySum(full_ratioArray);
            avgFullRatio = parseFloat((sumFullRatio / full_ratioArray.length).toFixed(1));
            avgFullRatioStr = avgFullRatio + '%';
            sumPro = this.getArraySum(proArray);
            sumEng = this.getArraySum(engArray);
            sumDev = this.getArraySum(devArray);
            sumDum = this.getArraySum(dumArray);
            this.finalArray.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["b" /* CstInfoRes */](obj.cst_spec, obj.factory, obj.type, avgFullRatioStr, sumPro, sumEng, sumDev, sumDum));
        }
    };
    // æ°ç»èµå¼
    B4CstComponent.prototype.getCstInfoArray = function (data) {
        this.ArrayFirst = [];
        this.ACNArrayTFT = [];
        this.ACNSortTFT = [];
        this.ACNCellTFT = [];
        this.FCWCFCF = [];
        this.FCWSortCF = [];
        this.FCWSortTFT = [];
        this.FCWCellTFT = [];
        this.FCWCellCF = [];
        this.CCNArray = [];
        this.CCNSort = [];
        this.CCNPIRW = [];
        this.CCNOther = [];
        this.MCWCell = [];
        for (var _i = 0, data_5 = data; _i < data_5.length; _i++) {
            var obj = data_5[_i];
            if (obj.cst_spec === 'ACN') {
                if (obj.factory === 'Array') {
                    this.ACNArrayTFT.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                }
                if (obj.factory === 'Sort') {
                    this.ACNSortTFT.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                }
                if (obj.factory === 'Cell') {
                    this.ACNCellTFT.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                }
            }
            if (obj.cst_spec === 'FCW') {
                if (obj.factory === 'CF') {
                    this.FCWCFCF.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                }
                if (obj.factory === 'Sort') {
                    if (obj.type === 'CF') {
                        this.FCWSortCF.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                    }
                    if (obj.type === 'TFT') {
                        this.FCWSortTFT.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                    }
                }
                if (obj.factory === 'Cell') {
                    if (obj.type === 'CF') {
                        this.FCWCellCF.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                    }
                    if (obj.type === 'TFT') {
                        this.FCWCellTFT.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                    }
                }
            }
            if (obj.cst_spec === 'CCN') {
                if (obj.factory === 'Array') {
                    this.CCNArray.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                }
                if (obj.factory === 'Sort') {
                    this.CCNSort.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                }
                if (obj.factory === 'PI/RW') {
                    this.CCNPIRW.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                }
                if (obj.factory === 'Other') {
                    this.CCNOther.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
                }
            }
            if (obj.cst_spec === 'MCW') {
                this.MCWCell.push(obj.full_ratio, obj.pro, obj.eng + obj.dev, obj.dum);
            }
        }
        this.ArrayFirst.push(this.ACNArrayTFT, this.ACNSortTFT, this.ACNCellTFT, this.FCWCFCF, this.FCWSortCF, this.FCWSortTFT, this.FCWCellTFT, this.FCWCellCF, this.CCNArray, this.CCNSort, this.CCNPIRW, this.CCNOther, this.MCWCell);
        // éåæ°ç»ï¼å¦æArrayFirstä¸­çæ°ç»åç´ æä¸ºç©ºçå°±èµé»è®¤å¼â-â
        for (var _a = 0, _b = this.ArrayFirst; _a < _b.length; _a++) {
            var array = _b[_a];
            if (array.length === 0) {
                array.push('-', '-', '-', '-');
            }
        }
        this.getChange(this.ACNArrayTFT);
        this.getChange(this.ACNSortTFT);
        this.getChange(this.ACNCellTFT);
        this.getChange(this.FCWCFCF);
        this.getChange(this.FCWSortCF);
        this.getChange(this.FCWSortTFT);
        this.getChange(this.FCWCellTFT);
        this.getChange(this.FCWCellCF);
        this.getChange(this.CCNArray);
        this.getChange(this.CCNSort);
        this.getChange(this.CCNPIRW);
        this.getChange(this.CCNOther);
        this.getChange(this.MCWCell);
    };
    // å¤æ­ååæ ¼å¼çåæ¯å¦è¶è¿åå¼ã
    B4CstComponent.prototype.getAlarm = function () {
        this.edACNArraySort = false;
        this.pedACNCell = false;
        this.edFCWCFScfStft = false;
        this.dumFCWCFScfStft = false;
        this.peddFCWCell = false;
        this.peddCCNArraySort = false;
        this.edCCNPIOther = false;
        this.dumCCNPIOther = false;
        if ((this.getReverseChange(this.ACNArrayTFT[2]) + this.getReverseChange(this.ACNSortTFT[2])) > this.alarmArray[0]) {
            this.edACNArraySort = true;
        }
        if ((this.getReverseChange(this.ACNCellTFT[1]) + this.getReverseChange(this.ACNCellTFT[2])) > this.alarmArray[1]) {
            this.pedACNCell = true;
        }
        if ((this.getReverseChange(this.FCWCFCF[2]) + this.getReverseChange(this.FCWSortCF[2]) +
            this.getReverseChange(this.FCWSortTFT[2])) > this.alarmArray[2]) {
            this.edFCWCFScfStft = true;
        }
        if ((this.getReverseChange(this.FCWCFCF[3]) + this.getReverseChange(this.FCWSortCF[3]) +
            this.getReverseChange(this.FCWSortTFT[3])) > this.alarmArray[3]) {
            this.dumFCWCFScfStft = true;
        }
        if ((this.getReverseChange(this.FCWCellTFT[1]) + this.getReverseChange(this.FCWCellTFT[2]) +
            this.getReverseChange(this.FCWCellTFT[3]) + this.getReverseChange(this.FCWCellCF[1]) +
            this.getReverseChange(this.FCWCellCF[2]) + this.getReverseChange(this.FCWCellCF[3])) > this.alarmArray[4]) {
            this.peddFCWCell = true;
        }
        if ((this.getReverseChange(this.CCNArray[1]) + this.getReverseChange(this.CCNArray[2]) +
            this.getReverseChange(this.CCNArray[3]) + this.getReverseChange(this.CCNSort[1]) +
            this.getReverseChange(this.CCNSort[2]) + this.getReverseChange(this.CCNSort[3])) > this.alarmArray[5]) {
            this.peddCCNArraySort = true;
        }
        if ((this.getReverseChange(this.CCNPIRW[2]) + this.getReverseChange(this.CCNOther[2])) > this.alarmArray[6]) {
            this.edCCNPIOther = true;
        }
        if ((this.getReverseChange(this.CCNPIRW[3]) + this.getReverseChange(this.CCNOther[3])) > this.alarmArray[7]) {
            this.dumCCNPIOther = true;
        }
    };
    B4CstComponent.prototype.getReduceEmpty = function (data) {
        this.finalEmptyArray = [];
        var tempArray = [];
        for (var _i = 0, data_6 = data; _i < data_6.length; _i++) {
            var obj = data_6[_i];
            if (tempArray.length === 0) {
                tempArray.push(obj.cst_spec);
            }
            else {
                if (tempArray.indexOf(obj.cst_spec) < 0) {
                    tempArray.push(obj.cst_spec);
                }
            }
        }
        for (var _a = 0, tempArray_3 = tempArray; _a < tempArray_3.length; _a++) {
            var cstSpec = tempArray_3[_a];
            var ttlArray = [];
            var oneqpArray = [];
            var moveArray = [];
            var instkArray = [];
            var dirtyArray = [];
            var outstkArray = [];
            var othersArray = [];
            for (var _b = 0, data_7 = data; _b < data_7.length; _b++) {
                var obj = data_7[_b];
                if (obj.cst_spec === cstSpec) {
                    ttlArray.push(obj.ttl);
                    oneqpArray.push(obj.oneqp);
                    moveArray.push(obj.move);
                    instkArray.push(obj.instk);
                    dirtyArray.push(obj.dirty);
                    outstkArray.push(obj.outstk);
                    othersArray.push(obj.others);
                }
            }
            var sumTtl = this.getArraySum(ttlArray);
            var sumOneqp = this.getArraySum(oneqpArray);
            var sumMove = this.getArraySum(moveArray);
            var sumInstk = this.getArraySum(instkArray);
            var sumDirty = this.getArraySum(dirtyArray);
            var sumOutstk = this.getArraySum(outstkArray);
            var sumOthers = this.getArraySum(othersArray);
            this.finalEmptyArray.push(new __WEBPACK_IMPORTED_MODULE_2__model_cst_stocker_info__["c" /* CstInfoResEmpty */](cstSpec, sumTtl, sumOneqp, sumMove, sumInstk, sumDirty, sumOutstk, sumOthers));
        }
    };
    // Emptyé¨åæ°ç»èµå¼
    B4CstComponent.prototype.getCstInfoEmptyArray = function (data) {
        this.ArraySecond = [];
        this.ACNEMPTY = [];
        this.FCWEMPTY = [];
        this.CCNEMPTY = [];
        this.MCWEMPTY = [];
        for (var _i = 0, data_8 = data; _i < data_8.length; _i++) {
            var obj = data_8[_i];
            if (obj.cst_spec === 'ACN') {
                this.ACNEMPTY.push(obj.ttl, obj.oneqp, obj.move, obj.instk, obj.dirty, obj.outstk, obj.others);
            }
            if (obj.cst_spec === 'FCW') {
                this.FCWEMPTY.push(obj.ttl, obj.oneqp, obj.move, obj.instk, obj.dirty, obj.outstk, obj.others);
            }
            if (obj.cst_spec === 'CCN') {
                this.CCNEMPTY.push(obj.ttl, obj.oneqp, obj.move, obj.instk, obj.dirty, obj.outstk, obj.others);
            }
            if (obj.cst_spec === 'MCW') {
                this.MCWEMPTY.push(obj.ttl, obj.oneqp, obj.move, obj.instk, obj.dirty, obj.outstk, obj.others);
            }
        }
        this.ArraySecond.push(this.ACNEMPTY, this.FCWEMPTY, this.CCNEMPTY, this.MCWEMPTY);
        for (var _a = 0, _b = this.ArraySecond; _a < _b.length; _a++) {
            var array = _b[_a];
            if (array.length === 0) {
                array.push('-', '-', '-', '-', '-', '-', '-');
            }
        }
        this.getChange(this.ACNEMPTY);
        this.getChange(this.FCWEMPTY);
        this.getChange(this.CCNEMPTY);
        this.getChange(this.MCWEMPTY);
    };
    // numberç±»åæ°ç»ææåç´ æ±å
    B4CstComponent.prototype.getArraySum = function (array) {
        var sum = 0;
        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {
            var item = array_1[_i];
            sum += item;
        }
        return sum;
    };
    // éåæ°ç»ï¼å¦ææ°ç»ä¸­æåç´ ä¸º'0'ï¼åæ¿æ¢ä¸º'-'
    B4CstComponent.prototype.getChange = function (array) {
        for (var i in array) {
            if (array[i] == '0') {
                array[i] = '-';
            }
        }
    };
    B4CstComponent.prototype.getReverseChange = function (item) {
        if (item == '-') {
            return 0;
        }
        else {
            return parseInt(item, 10);
        }
    };
    B4CstComponent.prototype.refresh = function () {
        this.predateStart = -1;
        this.predateEnd = -1;
        this.dateStart = null;
        this.dateEnd = null;
        this.ngOnInit();
    };
    // ä¸é»å·¦è¾¹ä¸åçç¹å»æ¹æ³
    B4CstComponent.prototype.toSecondTable = function (event, cst_specS, factoryS, typeS, indexS) {
        var _this = this;
        if (event.target.innerHTML !== '-' && indexS !== 0) {
            this.SecondTableArray = [];
            var productiontypeArray = [];
            if (indexS === 1) {
                productiontypeArray = ['Production'];
            }
            else if (indexS === 2) {
                productiontypeArray = ['Engineer', 'Develop'];
            }
            else if (indexS === 3) {
                productiontypeArray = ['Dummy'];
            }
            if (this.predateStart === -1 && this.predateEnd === -1) {
                var option = {
                    params: {
                        cst_spec: cst_specS,
                        factory: factoryS,
                        type: typeS,
                        productiontypes: productiontypeArray
                    }
                };
                var url = '/assets/demo/data/B4/cstinfosecond.json';
                this.apiService.testGet(url).subscribe(function (res) {
                    _this.SecondTableArray = res;
                });
            }
            else {
                var option = {
                    params: {
                        cst_spec: cst_specS,
                        factory: factoryS,
                        type: typeS,
                        productiontypes: productiontypeArray,
                        start: this.predateStart,
                        end: this.predateEnd
                    }
                };
                var url2 = '/assets/demo/data/B4/cstinfosecondQ.json';
                this.apiService.testGet(url2).subscribe(function (res) {
                    _this.SecondTableArray = res;
                });
            }
            this.firstView = false;
            this.secondView = true;
        }
    };
    // ä¸é»å³è¾¹äºåçæ¹æ³ï¼æ ¹æ®*ngForçç´¢å¼å¤æ­ç¹å»çæ¯å¦æ¯Dirtyï¼å¹¶æ ¹æ®å®éç¹å»çåä¼ ä¸åçåæ°
    B4CstComponent.prototype.toSecondTableEmpty = function (event, cst_specE, indexE) {
        var _this = this;
        if (event.target.innerHTML !== '-' && indexE !== 0 && indexE !== 6) {
            this.SecondTableArray = [];
            if (this.predateStart === -1 && this.predateEnd === -1) {
                if (indexE === 4) {
                    var option = {
                        params: {
                            cst_spec: cst_specE
                        }
                    };
                    var url = '/assets/demo/data/B4/cstemptydirty.json';
                    this.apiService.testGet(url).subscribe(function (res) {
                        _this.SecondTableArray = res;
                    });
                }
                else {
                    var transferstateE = '';
                    if (indexE === 1) {
                        transferstateE = 'ONEQP';
                    }
                    else if (indexE === 2) {
                        transferstateE = 'MOVING';
                    }
                    else if (indexE === 3) {
                        transferstateE = 'INSTK';
                    }
                    else if (indexE === 5) {
                        transferstateE = 'OUTSTK';
                    }
                    var option = {
                        params: {
                            cst_spec: cst_specE,
                            transferstate: transferstateE
                        }
                    };
                    var url2 = '/assets/demo/data/B4/cstemptyclean.json';
                    this.apiService.testGet(url2).subscribe(function (res) {
                        _this.SecondTableArray = res;
                    });
                }
            }
            else {
                if (indexE === 4) {
                    var option = {
                        params: {
                            cst_spec: cst_specE,
                            start: this.predateStart,
                            end: this.predateEnd
                        }
                    };
                    var url3 = '/assets/demo/data/B4/cstemptydirtyQ.json';
                    this.apiService.testGet(url3).subscribe(function (res) {
                        _this.SecondTableArray = res;
                    });
                }
                else {
                    var transferstateE = '';
                    if (indexE === 1) {
                        transferstateE = 'ONEQP';
                    }
                    else if (indexE === 2) {
                        transferstateE = 'MOVING';
                    }
                    else if (indexE === 3) {
                        transferstateE = 'INSTK';
                    }
                    else if (indexE === 5) {
                        transferstateE = 'OUTSTK';
                    }
                    var option = {
                        params: {
                            cst_spec: cst_specE,
                            transferstate: transferstateE,
                            start: this.predateStart,
                            end: this.predateEnd
                        }
                    };
                    var url4 = '/assets/demo/data/B4/cstemptycleanQ.json';
                    this.apiService.testGet(url4).subscribe(function (res) {
                        _this.SecondTableArray = res;
                    });
                }
            }
            this.firstView = false;
            this.secondView = true;
        }
    };
    B4CstComponent.prototype.showFirstTable = function () {
        this.firstView = true;
        this.secondView = false;
    };
    // éåå¯¹è±¡æ°ç»ï¼å¦ææ°ç»ä¸­æå¯¹è±¡çå±æ§ä¸º'0'ï¼åæ¿æ¢ä¸º'-'
    B4CstComponent.prototype.getChangeObj = function (array) {
        for (var _i = 0, array_2 = array; _i < array_2.length; _i++) {
            var obj = array_2[_i];
            for (var key in obj) {
                if (obj.hasOwnProperty(key)) {
                    if (obj[key] == '0') {
                        obj[key] = '-';
                    }
                }
            }
        }
    };
    B4CstComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-b4-cst',
            template: __webpack_require__("./src/app/outstandingcase/cannedFReport/b4-cst/b4-cst.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/cannedFReport/b4-cst/b4-cst.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__["a" /* ApiService */]])
    ], B4CstComponent);
    return B4CstComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/cannedFReport/b4-cst/model/cst_stocker_info.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return CstStockerInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CstInfo4VO; });
/* unused harmony export CstInfo */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return CstInfoRes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return CstInfoResEmpty; });
/* unused harmony export CstInfoSecond */
var CstStockerInfo = /** @class */ (function () {
    function CstStockerInfo(cst_spec, maxqty, currentqty, full_ratio) {
        this.cst_spec = cst_spec;
        this.maxqty = maxqty;
        this.currentqty = currentqty;
        this.full_ratio = full_ratio;
    }
    return CstStockerInfo;
}());

var CstInfo4VO = /** @class */ (function () {
    function CstInfo4VO(production, engdev, dummy, empty) {
        this.production = production;
        this.engdev = engdev;
        this.dummy = dummy;
        this.empty = empty;
    }
    return CstInfo4VO;
}());

var CstInfo = /** @class */ (function () {
    function CstInfo(cst_spec, factory, type, full_ratio, pro, eng, dev, dum) {
        this.cst_spec = cst_spec;
        this.factory = factory;
        this.type = type;
        this.full_ratio = full_ratio;
        this.pro = pro;
        this.eng = eng;
        this.dev = dev;
        this.dum = dum;
    }
    return CstInfo;
}());

var CstInfoRes = /** @class */ (function () {
    function CstInfoRes(cst_spec, factory, type, full_ratio, pro, eng, dev, dum) {
        this.cst_spec = cst_spec;
        this.factory = factory;
        this.type = type;
        this.full_ratio = full_ratio;
        this.pro = pro;
        this.eng = eng;
        this.dev = dev;
        this.dum = dum;
    }
    return CstInfoRes;
}());

var CstInfoResEmpty = /** @class */ (function () {
    function CstInfoResEmpty(cst_spec, ttl, oneqp, move, instk, dirty, outstk, others) {
        this.cst_spec = cst_spec;
        this.ttl = ttl;
        this.oneqp = oneqp;
        this.move = move;
        this.instk = instk;
        this.dirty = dirty;
        this.outstk = outstk;
        this.others = others;
    }
    return CstInfoResEmpty;
}());

var CstInfoSecond = /** @class */ (function () {
    function CstInfoSecond(cst_id, days, operation, eqp, lot_id, product, qty, holdstate, lot_comment, lot_time, cst_comment, cst_time) {
        this.cst_id = cst_id;
        this.days = days;
        this.operation = operation;
        this.eqp = eqp;
        this.lot_id = lot_id;
        this.product = product;
        this.qty = qty;
        this.holdstate = holdstate;
        this.lot_comment = lot_comment;
        this.lot_time = lot_time;
        this.cst_comment = cst_comment;
        this.cst_time = cst_time;
    }
    return CstInfoSecond;
}());



/***/ }),

/***/ "./src/app/outstandingcase/outstandingcase-routing.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OutstandingcaseRoutingModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pmkanban_b6_dashboard_b6_dashboard_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/b6-dashboard/b6-dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pmkanban_b8_dashboard_b8_dashboard_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/b8-dashboard/b8-dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__cannedFReport_b4_cst_b4_cst_component__ = __webpack_require__("./src/app/outstandingcase/cannedFReport/b4-cst/b4-cst.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_app_outstandingcase_pmkanban_module_watchboard_module_watchboard_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/module-watchboard/module-watchboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__transparent_display_b4_wip_b4_wip_component__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b4-wip/b4-wip.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_app_outstandingcase_transparent_display_inspection_inspection_component__ = __webpack_require__("./src/app/outstandingcase/transparent-display/inspection/inspection.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__transparent_display_b1_pecvd_b1_pecvd_component__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b1-pecvd/b1-pecvd.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_app_outstandingcase_cannedFReport_b2_daily_b2_daily_component__ = __webpack_require__("./src/app/outstandingcase/cannedFReport/b2-daily/b2-daily.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pmkanban_b3_array_dashboard_b3_array_dashboard_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/b3-array-dashboard/b3-array-dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__cannedFReport_b1_oem_aging_b1_oem_aging_component__ = __webpack_require__("./src/app/outstandingcase/cannedFReport/b1-oem-aging/b1-oem-aging.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pmkanban_tm1kanban_tm1kanban_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/tm1kanban/tm1kanban.component.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};













var routes = [
    {
        path: 'pmkanban/module-watchboard',
        component: __WEBPACK_IMPORTED_MODULE_5_app_outstandingcase_pmkanban_module_watchboard_module_watchboard_component__["a" /* ModuleWatchboardComponent */],
        data: {
            tabLabel: 'B3 MDLååçæ¿',
            destroy: true
        }
    },
    {
        path: 'pmkanban/b6-dashboard',
        component: __WEBPACK_IMPORTED_MODULE_2__pmkanban_b6_dashboard_b6_dashboard_component__["a" /* B6DashboardComponent */],
        data: {
            tabLabel: 'B6-çç®¡çæ¿',
            destroy: true
        }
    },
    {
        path: 'pmkanban/B8-dashboard',
        component: __WEBPACK_IMPORTED_MODULE_3__pmkanban_b8_dashboard_b8_dashboard_component__["a" /* B8DashboardComponent */],
        data: {
            tabLabel: 'B8-çç®¡çæ¿',
            destroy: true
        }
    },
    {
        path: 'pmkanban/b3-array-dashboard',
        component: __WEBPACK_IMPORTED_MODULE_10__pmkanban_b3_array_dashboard_b3_array_dashboard_component__["a" /* B3ArrayDashboardComponent */],
        data: {
            tabLabel: 'B3-Arrayçäº§çæ¿',
            destroy: true
        }
    },
    {
        path: 'pmkanban/tm1kanban',
        component: __WEBPACK_IMPORTED_MODULE_12__pmkanban_tm1kanban_tm1kanban_component__["a" /* Tm1kanbanComponent */],
        data: {
            tabLabel: 'TM1å®æ¶çæçæ¿',
            destroy: true
        }
    },
    {
        path: 'cannedFReport/b4-cst',
        component: __WEBPACK_IMPORTED_MODULE_4__cannedFReport_b4_cst_b4_cst_component__["a" /* B4CstComponent */],
        data: {
            tabLabel: 'B4-CSTä¿¡æ¯ç®¡ç',
            destroy: true
        }
    },
    {
        path: 'cannedFReport/b2-daily',
        component: __WEBPACK_IMPORTED_MODULE_9_app_outstandingcase_cannedFReport_b2_daily_b2_daily_component__["a" /* B2DailyComponent */],
        data: {
            tabLabel: 'B2-çç®¡æ¥æ¥',
            destroy: true
        }
    },
    {
        path: 'cannedFReport/b1-oem-aging',
        component: __WEBPACK_IMPORTED_MODULE_11__cannedFReport_b1_oem_aging_b1_oem_aging_component__["a" /* B1OemAgingComponent */],
        data: {
            tabLabel: 'B1-OEM-Aging',
            destroy: true
        }
    },
    {
        path: 'transparent-display/b1-pecvd',
        component: __WEBPACK_IMPORTED_MODULE_8__transparent_display_b1_pecvd_b1_pecvd_component__["a" /* B1PecvdComponent */],
        data: {
            tabLabel: 'B1-PECVD',
            destroy: true
        }
    },
    {
        path: 'transparent-display/b4-wip',
        component: __WEBPACK_IMPORTED_MODULE_6__transparent_display_b4_wip_b4_wip_component__["a" /* B4WipComponent */],
        data: {
            tabLabel: 'B4-WIP',
            destroy: true
        }
    },
    {
        path: 'transparent-display/inspection',
        component: __WEBPACK_IMPORTED_MODULE_7_app_outstandingcase_transparent_display_inspection_inspection_component__["a" /* InspectionComponent */],
        data: {
            tabLabel: 'B3 MODæ£æ¥å²éæå',
            destroy: true
        }
    },
];
var OutstandingcaseRoutingModule = /** @class */ (function () {
    function OutstandingcaseRoutingModule() {
    }
    OutstandingcaseRoutingModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [__WEBPACK_IMPORTED_MODULE_1__angular_router__["RouterModule"].forChild(routes)],
            exports: [__WEBPACK_IMPORTED_MODULE_1__angular_router__["RouterModule"]]
        })
    ], OutstandingcaseRoutingModule);
    return OutstandingcaseRoutingModule;
}());



/***/ }),

/***/ "./src/app/outstandingcase/outstandingcase.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OutstandingcaseModule", function() { return OutstandingcaseModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__("./node_modules/@angular/common/esm5/common.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__outstandingcase_routing_module__ = __webpack_require__("./src/app/outstandingcase/outstandingcase-routing.module.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_app_common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__("./node_modules/@angular/forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_primeng_table__ = __webpack_require__("./node_modules/primeng/table.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_primeng_table___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_primeng_table__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_primeng_dialog__ = __webpack_require__("./node_modules/primeng/dialog.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_primeng_dialog___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_primeng_dialog__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__ = __webpack_require__("./node_modules/primeng/primeng.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_primeng_primeng___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_primeng_primeng__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__ = __webpack_require__("./node_modules/@ngx-translate/core/@ngx-translate/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__pmkanban_b6_dashboard_b6_dashboard_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/b6-dashboard/b6-dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pmkanban_b8_dashboard_b8_dashboard_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/b8-dashboard/b8-dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__node_modules_ngx_echarts__ = __webpack_require__("./node_modules/ngx-echarts/ngx-echarts.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__report_ui_service_report_ui_common_service__ = __webpack_require__("./src/app/report-ui/service/report-ui-common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__cannedFReport_b4_cst_b4_cst_component__ = __webpack_require__("./src/app/outstandingcase/cannedFReport/b4-cst/b4-cst.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__pmkanban_module_watchboard_module_watchboard_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/module-watchboard/module-watchboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_app_outstandingcase_pmkanban_module_watchboard_mod_wip_mod_wip_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/module-watchboard/mod-wip/mod-wip.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_app_outstandingcase_pmkanban_module_watchboard_pol_machine_status_pol_machine_status_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/module-watchboard/pol-machine-status/pol-machine-status.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__pmkanban_b3_array_dashboard_b3_array_dashboard_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/b3-array-dashboard/b3-array-dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__transparent_display_b4_wip_b4_wip_component__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b4-wip/b4-wip.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_app_outstandingcase_transparent_display_inspection_inspection_component__ = __webpack_require__("./src/app/outstandingcase/transparent-display/inspection/inspection.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_app_outstandingcase_transparent_display_b1_pecvd_b1_pecvd_component__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b1-pecvd/b1-pecvd.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_app_outstandingcase_transparent_display_b1_pecvd_boe_service__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b1-pecvd/boe.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__cannedFReport_b2_daily_b2_daily_component__ = __webpack_require__("./src/app/outstandingcase/cannedFReport/b2-daily/b2-daily.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__cannedFReport_b1_oem_aging_b1_oem_aging_component__ = __webpack_require__("./src/app/outstandingcase/cannedFReport/b1-oem-aging/b1-oem-aging.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24_app_outstandingcase_pmkanban_tm1kanban_tm1kanban_component__ = __webpack_require__("./src/app/outstandingcase/pmkanban/tm1kanban/tm1kanban.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25_countup_js_angular2__ = __webpack_require__("./node_modules/countup.js-angular2/fesm5/countup.js-angular2.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26_app_boe_components_components_module__ = __webpack_require__("./src/app/boe/components/components.module.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



























var OutstandingcaseModule = /** @class */ (function () {
    function OutstandingcaseModule() {
    }
    OutstandingcaseModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"],
                __WEBPACK_IMPORTED_MODULE_2__outstandingcase_routing_module__["a" /* OutstandingcaseRoutingModule */],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["ChartModule"],
                __WEBPACK_IMPORTED_MODULE_11__node_modules_ngx_echarts__["a" /* NgxEchartsModule */],
                __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormsModule"],
                __WEBPACK_IMPORTED_MODULE_5_primeng_table__["TableModule"],
                __WEBPACK_IMPORTED_MODULE_6_primeng_dialog__["DialogModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["InputTextModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["ButtonModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["DataTableModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["SharedModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["PickListModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["ListboxModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["SelectButtonModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["InputSwitchModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["DropdownModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["KeyFilterModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["MessageModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["MessagesModule"],
                __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__["b" /* TranslateModule */],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["TreeModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["PanelModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["ConfirmDialogModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["PaginatorModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["CardModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["TabViewModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["CarouselModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["GalleriaModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["MultiSelectModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["ToolbarModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["CalendarModule"],
                __WEBPACK_IMPORTED_MODULE_25_countup_js_angular2__["a" /* CountUpModule */],
                __WEBPACK_IMPORTED_MODULE_26_app_boe_components_components_module__["a" /* ComponentsModule */]
            ],
            declarations: [__WEBPACK_IMPORTED_MODULE_9__pmkanban_b6_dashboard_b6_dashboard_component__["a" /* B6DashboardComponent */], __WEBPACK_IMPORTED_MODULE_10__pmkanban_b8_dashboard_b8_dashboard_component__["a" /* B8DashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_13__cannedFReport_b4_cst_b4_cst_component__["a" /* B4CstComponent */], __WEBPACK_IMPORTED_MODULE_14__pmkanban_module_watchboard_module_watchboard_component__["a" /* ModuleWatchboardComponent */], __WEBPACK_IMPORTED_MODULE_15_app_outstandingcase_pmkanban_module_watchboard_mod_wip_mod_wip_component__["a" /* ModWipComponent */], __WEBPACK_IMPORTED_MODULE_16_app_outstandingcase_pmkanban_module_watchboard_pol_machine_status_pol_machine_status_component__["a" /* PolMachineStatusComponent */],
                __WEBPACK_IMPORTED_MODULE_18__transparent_display_b4_wip_b4_wip_component__["a" /* B4WipComponent */], __WEBPACK_IMPORTED_MODULE_17__pmkanban_b3_array_dashboard_b3_array_dashboard_component__["a" /* B3ArrayDashboardComponent */], __WEBPACK_IMPORTED_MODULE_19_app_outstandingcase_transparent_display_inspection_inspection_component__["a" /* InspectionComponent */], __WEBPACK_IMPORTED_MODULE_20_app_outstandingcase_transparent_display_b1_pecvd_b1_pecvd_component__["a" /* B1PecvdComponent */], __WEBPACK_IMPORTED_MODULE_22__cannedFReport_b2_daily_b2_daily_component__["a" /* B2DailyComponent */], __WEBPACK_IMPORTED_MODULE_23__cannedFReport_b1_oem_aging_b1_oem_aging_component__["a" /* B1OemAgingComponent */], __WEBPACK_IMPORTED_MODULE_24_app_outstandingcase_pmkanban_tm1kanban_tm1kanban_component__["a" /* Tm1kanbanComponent */]],
            providers: [__WEBPACK_IMPORTED_MODULE_3_app_common_service_api_api_service__["a" /* ApiService */], __WEBPACK_IMPORTED_MODULE_12__report_ui_service_report_ui_common_service__["a" /* ReportUiCommonService */], __WEBPACK_IMPORTED_MODULE_1__angular_common__["DatePipe"], __WEBPACK_IMPORTED_MODULE_21_app_outstandingcase_transparent_display_b1_pecvd_boe_service__["a" /* BoeService */]]
        })
    ], OutstandingcaseModule);
    return OutstandingcaseModule;
}());



/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/b3-array-dashboard/b3-array-dashboard.component.css":
/***/ (function(module, exports) {

module.exports = ".pageContent{\r\n    height:100vh;\r\n    background-image: url(/assets/picture/watchboard/back.jpg);\r\n    background-size:100% 100%;\r\n}\r\n\r\n#title{\r\n    height:7vh;\r\n}\r\n\r\n#title > div{\r\n    height:100%;\r\n}\r\n\r\n#title > .left{\r\n    width:40%;\r\n    background-image:url(/assets/picture/watchboard/left.png);\r\n    background-size:100% 100%;\r\n    float:left;\r\n}\r\n\r\n#title > .middle{\r\n    width:20%;\r\n    text-align: center;\r\n    float:left;\r\n    margin:0;\r\n    padding:0;\r\n}\r\n\r\n#title p{\r\n    font-size: 2vw;\r\n    color:#fff;\r\n    margin:0;\r\n    padding:3% 0 0 0;\r\n}\r\n\r\n#title > .right{\r\n    width:40%;\r\n    background-image:url(/assets/picture/watchboard/right.png);\r\n    background-size:100% 100%;\r\n    float:left;\r\n}\r\n\r\n#middle *{\r\n    height:100%;\r\n}\r\n\r\n.vertical{\r\n    height:31vh;\r\n}\r\n\r\n.chartDiv{\r\n    background-image:url(/assets/picture/watchboard/border.png);\r\n    background-size:100% 100%;\r\n    width:100%;\r\n    height:100%;\r\n}\r\n\r\n#mleft{\r\n    padding:0 2.5px 0 0;\r\n}\r\n\r\n#mcenter{\r\n    padding:0 2.5px 0 2.5px;\r\n}\r\n\r\n#mright{\r\n    padding:0 0 0 2.5px;\r\n}"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/b3-array-dashboard/b3-array-dashboard.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"ui-g\" class=\"pageContent\">\n    <div id=\"title\">\n        <div class=\"left\"></div>\n        <div class=\"middle\">\n            <p>B3 Arrayååçæ¿</p>\n        </div>\n        <div class=\"right\"></div>\n    </div>\n    <div class=\"ui-g-12 vertical\" id=\"top\">\n        <div class=\"chartDiv\">\n            <div id=\"input\" style=\"height:50%;width:100%;\" echarts theme=\"edark\" [options]=\"inputOption\"></div>\n            <div id=\"output\" style=\"height:50%;width:100%;\" echarts theme=\"edark\" [options]=\"outputOption\"></div>\n        </div>\n    </div>\n    <div class=\"ui-g-12 vertical\" id=\"middle\">\n        <div class=\"ui-g-4\" id=\"mleft\">\n            <div class=\"chartDiv\" id=\"yield\" echarts theme=\"edark\" [options]=\"yieldOption\"></div>\n        </div>\n        <div class=\"ui-g-4\" id=\"mcenter\">\n            <div class=\"chartDiv\">\n                <!-- <div class=\"ui-g-12\" style=\"height:10%;\">\n                    <p-dropdown [options]=\"taktEqpGroups\" [(ngModel)]=\"taktEqpGroup\" (onChange)=\"refreshTaktEqpName()\"></p-dropdown>\n                    <p-dropdown [options]=\"taktEqpNames\" [(ngModel)]=\"taktEqpName\" (onChange)=\"refreshTaktUnit()\"></p-dropdown>\n                    <p-dropdown [options]=\"taktUnits\" [(ngModel)]=\"taktUnit\" (onChange)=\"refreshTaktData()\"></p-dropdown>\n                </div> -->\n                <div class=\"ui-g-12\" style=\"height:100%;\">\n                    <div id=\"takt\" echarts theme=\"edark\" [options]=\"taktOption\" [merge]=\"updateTaktOption\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"ui-g-4\" id=\"mright\">\n            <div class=\"chartDiv\">\n                <!-- <div class=\"ui-g-12\" style=\"height:10%;text-align:center;\">\n                    <p-dropdown [options]=\"machineGroups\" [(ngModel)]=\"machineGroup\" (onChange)=\"setMachineOptions()\"></p-dropdown>\n                </div> -->\n                <div class=\"ui-g-12\" style=\"height:100%;\">\n                    <div id=\"machine\" echarts theme=\"edark\" [options]=\"machineOption\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"ui-g-12 vertical\" id=\"bottom\">\n        <div class=\"chartDiv\" id=\"wip-move\" echarts theme=\"edark\" [options]=\"wipMoveOption\"></div>\n    </div>\n  </div>"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/b3-array-dashboard/b3-array-dashboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return B3ArrayDashboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_common_http__ = __webpack_require__("./node_modules/@angular/common/esm5/http.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var B3ArrayDashboardComponent = /** @class */ (function () {
    function B3ArrayDashboardComponent(apiService, http) {
        this.apiService = apiService;
        this.http = http;
        this.taktEqpGroups = new Array();
        this.taktEqpNames = new Array();
        this.taktUnits = new Array();
        this.factoryName = "ARRAY";
        this.machineGroups = new Array();
        this.machineGroup = 'EXPO_SYSTEM';
    }
    B3ArrayDashboardComponent.prototype.ngOnInit = function () {
        this.initTakt();
        this.getWipMoveData();
        this.initInOut();
        this.initMachine();
        this.initYield();
    };
    B3ArrayDashboardComponent.prototype.ngAfterViewInit = function () {
    };
    B3ArrayDashboardComponent.prototype.ngOnDestroy = function () {
        clearInterval(this.taktTimer);
    };
    // Array Wip Moveå¾ç¸å³æä½
    B3ArrayDashboardComponent.prototype.getWipMoveData = function () {
        var _this = this;
        var url = "assets/b3-array/array.json";
        var options = {
            params: { factoryName: 'ARRAY' }
        };
        this.http.get(url).subscribe(function (response) {
            var res = response['wip'];
            var dataStringList = res;
            var dataList = new Array();
            for (var i = 0; i < dataStringList.length; i++) {
                dataList.push(dataStringList[i]);
            }
            _this.setWipMoveData(dataList);
        }, function (error) {
            console.log("Error:Get wip data failed!");
        });
    };
    B3ArrayDashboardComponent.prototype.setWipMoveData = function (list) {
        var xAxis = new Array();
        for (var i = 0; i < list[0]['operName'].split(',').length; i++) {
            xAxis.push(list[0]['operName'].split(',')[i].substring(1, list[0]['operName'].split(',')[i].length - 1));
        }
        this.wipMoveOption = {
            title: {
                text: 'Wip Moveæ°æ®å¾',
                left: 'center',
                textStyle: {
                    color: '#FFFFFF'
                }
            },
            xAxis: [{
                    type: 'category',
                    data: xAxis,
                    axisLabel: {
                        rotate: 45,
                        textStyle: {
                            fontSize: '10',
                            color: '#FFFFFF'
                        }
                    },
                    crosshair: false
                }],
            yAxis: [
                {
                    type: 'value',
                    name: 'Wip/Lot',
                    min: 0,
                    axisLabel: {
                        formatter: '{value}',
                        textStyle: {
                            fontSize: '10',
                            color: '#FFFFFF'
                        }
                    },
                    splitLine: {
                        show: false,
                    }
                },
                {
                    type: 'value',
                    name: 'Move/Lot',
                    min: 0,
                    axisLabel: {
                        formatter: '{value}',
                        textStyle: {
                            fontSize: '10',
                            color: '#FFFFFF'
                        }
                    },
                    splitLine: {
                        show: false,
                    }
                }
            ],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'cross',
                    crossStyle: {
                        color: '#999'
                    }
                }
            },
            series: this.createWipMoveSeries(list)
        };
    };
    B3ArrayDashboardComponent.prototype.createWipMoveSeries = function (list) {
        var series = new Array();
        for (var i = 0; i < list.length - 1; i++) {
            var type = 'bar';
            var s = {
                type: type,
                yAxisIndex: 0,
                stack: 'WIP',
                name: list[i]['productSpec'],
                label: {
                    normal: {
                        show: true,
                        position: 'insideRight',
                        formatter: function (params) {
                            if (params.value > 0) {
                                return params.value;
                            }
                            else {
                                return '';
                            }
                        }
                    }
                },
                data: list[i]['lotQty'].split(',')
            };
            series.push(s);
        }
        series.push({
            type: 'line',
            yAxisIndex: 1,
            stack: 'MOVE',
            name: list[list.length - 1]['productSpec'],
            symbolSize: 5,
            smooth: false,
            itemStyle: {
                normal: {
                    borderWidth: 1
                }
            },
            label: {
                normal: {
                    show: true,
                    position: 'insideRight'
                }
            },
            data: list[list.length - 1]['lotQty'].split(',')
        });
        return series;
    };
    // Array Takttimeç¸å³å½æ°
    B3ArrayDashboardComponent.prototype.initTakt = function () {
        // this.taktEqpGroups=[
        //   {label:'TRACK',value:'TRACK'},
        //   {label:'DRY_ETCHER',value:'DRY_ETCHER'},
        //   {label:'WET_ETCHER',value:'WET_ETCHER'},
        //   {label:'PECVD',value:'PECVD'},
        //   {label:'SPUTTER_G_SD',value:'SPUTTER_G_SD'},
        //   {label:'SPUTTER_ITO',value:'SPUTTER_ITO'},
        //   {label:'WET_STRIPPER',value:'WET_STRIPPER'}
        // ];
        // this.taktEqpGroup=this.taktEqpGroups[0]['value'];
        this.refreshTaktEqpName();
    };
    B3ArrayDashboardComponent.prototype.refreshTaktEqpName = function () {
        /* const url = `/watchboard/takt/eqpName`;
        const options = {
          params:{"eqpGroup":this.taktEqpGroup,"factoryName":this.factoryName}
        };
            this.apiService.get(url,options).subscribe(
                (res) => {
                  this.taktEqpNames=new Array<SelectItem>();
                    for(let i=0;i<res.length;i++){
                      this.taktEqpNames.push({label:res[i],value:res[i]});
                    }
                    this.taktEqpName=this.taktEqpNames[0]['value']; */
        this.refreshTaktUnit();
        /*  },
         (error) => {
             console.log(`Error:Get takttime equipment name failed !`);
         }
     ); */
    };
    B3ArrayDashboardComponent.prototype.refreshTaktUnit = function () {
        /* const url = `/watchboard/takt/eqpUnit`;
        const options = {
          params:{"eqpGroup":this.taktEqpGroup,"eqpName":this.taktEqpName,"factoryName":this.factoryName}
        };
            this.apiService.get(url,options).subscribe(
                (res) => {
                  this.taktUnits=new Array<SelectItem>();
                  for(let i=0;i<res.length;i++){
                    this.taktUnits.push({label:res[i],value:res[i]});
                  }
                  this.taktUnit=this.taktUnits[0]['value']; */
        this.refreshTaktData();
        /* },
        (error) => {
            console.log(`Error:Get takttime equipment unit failed !`);
        }
    ); */
    };
    B3ArrayDashboardComponent.prototype.refreshTaktData = function () {
        var _this = this;
        var url = "assets/b3-array/array.json";
        var options = {
            params: { "eqpGroup": this.taktEqpGroup, "eqpName": this.taktEqpName, "eqpUnit": this.taktUnit, "factoryName": this.factoryName }
        };
        this.http.get(url).subscribe(function (response) {
            var res = response['takt'];
            _this.taktOption = {
                title: {
                    left: 'center',
                    text: 'Array Takt Time',
                    textStyle: {
                        fontSize: '12',
                        color: '#FFFFFF'
                    }
                },
                xAxis: {
                    type: 'category',
                    data: res['glassId'],
                    axisLabel: {
                        rotate: 45,
                        interval: 0,
                        textStyle: {
                            fontSize: '8',
                            color: '#FFFFFF'
                        }
                    }
                },
                yAxis: {
                    type: 'value',
                    name: 'TaktTime',
                    min: 0,
                    axisLabel: {
                        formatter: '{value}',
                        textStyle: {
                            color: '#FFFFFF'
                        }
                    },
                    splitLine: {
                        show: false,
                    }
                },
                grid: {
                    right: 0,
                    top: 15
                },
                dataZoom: [
                    {
                        type: 'slider',
                        show: false,
                        realtime: true,
                        xAxisIndex: [0],
                        start: 0,
                        end: 30
                    }
                ],
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [
                    {
                        name: 'Takt Time',
                        type: 'line',
                        symbol: '',
                        symbolSize: 5,
                        color: 'blue',
                        itemStyle: {
                            normal: {
                                borderWidth: 1
                            }
                        },
                        data: res['taktTime']
                    },
                    {
                        name: 'Average',
                        type: 'line',
                        color: 'red',
                        smooth: false,
                        data: res['average']
                    }
                ]
            };
            _this.changeTaktOption();
        });
    };
    B3ArrayDashboardComponent.prototype.changeTaktOption = function () {
        var _this = this;
        var interval = 1;
        clearInterval(this.taktTimer);
        this.taktTimer = setInterval(function () {
            if (_this.taktOption.dataZoom[0].end === 100) {
                _this.taktOption.dataZoom[0].start = 69;
                _this.taktOption.dataZoom[0].end = 99;
                interval = -1;
            }
            else if (_this.taktOption.dataZoom[0].start === 0) {
                _this.taktOption.dataZoom[0].start = 1;
                _this.taktOption.dataZoom[0].end = 31;
                interval = 1;
            }
            else {
                _this.taktOption.dataZoom[0].start += interval;
                _this.taktOption.dataZoom[0].end += interval;
            }
            _this.updateTaktOption = {
                dataZoom: [
                    {
                        type: 'slider',
                        show: false,
                        realtime: true,
                        xAxisIndex: [0],
                        start: _this.taktOption.dataZoom[0].start,
                        end: _this.taktOption.dataZoom[0].end
                    }
                ]
            };
        }, 1000);
    };
    // Arrayæå¥äº§åºç¸å³å½æ°
    B3ArrayDashboardComponent.prototype.initInOut = function () {
        this.setInOutData();
    };
    B3ArrayDashboardComponent.prototype.setInOutData = function () {
        var _this = this;
        var url = "assets/b3-array/array.json";
        var options = {
            params: { 'factoryName': this.factoryName }
        };
        this.http.get(url).subscribe(function (response) {
            var res = response['inputOutput'];
            var inDate = new Array();
            var dailyInput = new Array();
            var monthlyInput = new Array();
            var date = new Date();
            var monthDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();
            var index = 0;
            for (var i = 0; i < monthDay; i++) {
                var d = (i + 1) < 10 ? '0' + (i + 1) : i + 1 + '';
                if (i < res['inDate'].length) {
                    if (res['inDate'][i - index] !== d) {
                        dailyInput.push(0);
                        if (i - index - 1 < 0) {
                            monthlyInput.push(0);
                        }
                        else {
                            monthlyInput.push(res['monthlyInput'][i - index - 1]);
                        }
                        index++;
                    }
                    else {
                        monthlyInput.push(res['monthlyInput'][i - index]);
                        dailyInput.push(res['dailyInput'][i - index]);
                    }
                    inDate.push(d);
                }
                else {
                    inDate.push(d);
                    dailyInput.push(null);
                    monthlyInput.push(null);
                }
            }
            var outDate = new Array();
            var dailyOutput = new Array();
            var monthlyOutput = new Array();
            index = 0;
            for (var i = 0; i < monthDay; i++) {
                var d = (i + 1) < 10 ? '0' + (i + 1) : i + 1 + '';
                if (i < res['outDate'].length) {
                    if (res['outDate'][i - index] !== d) {
                        dailyOutput.push(0);
                        if (i - index - 1 < 0) {
                            monthlyOutput.push(0);
                        }
                        else {
                            monthlyOutput.push(res['monthlyOutput'][i - index - 1]);
                        }
                        index++;
                    }
                    else {
                        monthlyOutput.push(res['monthlyOutput'][i - index]);
                        dailyOutput.push(res['dailyOutput'][i - index]);
                    }
                    outDate.push(d);
                }
                else {
                    outDate.push(d);
                    dailyOutput.push(null);
                    monthlyOutput.push(null);
                }
            }
            _this.inputOption = {
                title: {
                    text: 'Arrayææå¥',
                    left: 'center',
                    textStyle: {
                        fontSize: '12',
                        color: '#FFFFFF'
                    }
                },
                xAxis: {
                    type: 'category',
                    data: inDate,
                    axisLabel: {
                        interval: 0,
                        textStyle: {
                            fontSize: '7',
                            color: '#FFFFFF'
                        }
                    }
                },
                yAxis: {
                    type: 'value',
                    name: 'æ°é',
                    min: 0,
                    axisLabel: {
                        formatter: function (value) {
                            return value / 1000 + 'K';
                        },
                        textStyle: {
                            color: '#FFFFFF'
                        }
                    },
                    splitLine: {
                        show: false,
                    },
                },
                grid: {
                    right: 0,
                    bottom: 20,
                    top: 10,
                    left: 50
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    },
                },
                series: [
                    {
                        name: 'ç´¯è®¡æå¥',
                        type: 'bar',
                        stack: 'æå¥',
                        color: '#518df0',
                        label: {
                            show: true,
                            position: 'inside',
                            fontSize: '7',
                            formatter: function (params) {
                                var val = params.value / 1000;
                                return val.toFixed(1) + 'K';
                            }
                        },
                        data: monthlyInput
                    },
                    {
                        name: 'å½å¤©æå¥',
                        type: 'bar',
                        stack: 'æå¥',
                        color: '#ff3300',
                        label: {
                            show: true,
                            position: 'inside',
                            fontSize: '7',
                            formatter: function (params) {
                                var val = params.value / 1000;
                                return val.toFixed(1) + 'K';
                            }
                        },
                        data: dailyInput
                    }
                ]
            };
            _this.outputOption = {
                title: {
                    text: 'Arrayæäº§åº',
                    left: 'center',
                    textStyle: {
                        fontSize: '12',
                        color: '#FFFFFF'
                    }
                },
                xAxis: {
                    type: 'category',
                    data: outDate,
                    axisLabel: {
                        interval: 0,
                        textStyle: {
                            fontSize: '7',
                            color: '#FFFFFF'
                        }
                    }
                },
                yAxis: {
                    type: 'value',
                    name: 'æ°é',
                    min: 0,
                    axisLabel: {
                        formatter: function (value) {
                            return value / 1000 + 'K';
                        },
                        textStyle: {
                            color: '#FFFFFF'
                        }
                    },
                    splitLine: {
                        show: false,
                    },
                },
                grid: {
                    right: 0,
                    bottom: 20,
                    top: 10,
                    left: 50
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [
                    {
                        name: 'ç´¯è®¡äº§åº',
                        type: 'bar',
                        stack: 'äº§åº',
                        color: '#518df0',
                        label: {
                            show: true,
                            position: 'inside',
                            fontSize: '7',
                            formatter: function (params) {
                                var val = params.value / 1000;
                                return val.toFixed(1) + 'K';
                            }
                        },
                        data: monthlyOutput
                    },
                    {
                        name: 'å½å¤©äº§åº',
                        type: 'bar',
                        stack: 'äº§åº',
                        color: '#ff3300',
                        label: {
                            show: true,
                            position: 'inside',
                            fontSize: '7',
                            formatter: function (params) {
                                var val = params.value / 1000;
                                return val.toFixed(1) + 'K';
                            }
                        },
                        data: dailyOutput
                    }
                ]
            };
        }, function (error) {
            console.log("Error: Get Array Input & Output data failed !");
        });
    };
    // Array è®¾å¤ç¨¼å¨çç¸å³å½æ°
    B3ArrayDashboardComponent.prototype.initMachine = function () {
        /* this.machineGroups=[
          {label:'GLASS_UNPACKING',value:'GLASS_UNPACKING'},
          {label:'SPUTTER',value:'SPUTTER_ITO,SPUTTER_G_SD'},
          {label:'PECVD',value:'PECVD'},
          {label:'TRACK',value:'TRACK'},
          {label:'CLEAN_S',value:'CLEAN_S'},
          {label:'EXPO_SYSTEM',value:'EXPO_SYSTEM'},
          {label:'DRY_ETCHER',value:'DRY_ETCHER'},
          {label:'WET_ETCHER',value:'WET_ETCHER'},
          {label:'WET_STRIPPER',value:'WET_STRIPPER'},
          {label:'ANNEAL_MC_FINAL',value:'ANNEAL_MC_FINAL'}
        ]; */
        this.setMachineOptions();
    };
    B3ArrayDashboardComponent.prototype.setMachineOptions = function () {
        var _this = this;
        var url = "assets/b3-array/array.json";
        var options = {
            params: { "machineGroup": this.machineGroup, "factoryName": this.factoryName }
        };
        this.http.get(url).subscribe(function (response) {
            var res = response['machineActive'];
            _this.machineOption = {
                title: {
                    text: 'Arrayè®¾å¤ç¨¼å¨',
                    left: 'center',
                    textStyle: {
                        fontSize: 12,
                        color: '#FFFFFF'
                    }
                },
                grid: {
                    top: 30,
                    bottom: 30
                },
                xAxis: {
                    type: 'category',
                    data: res['eqpId'],
                    axisLabel: {
                        rotate: 45,
                        interval: 0,
                        textStyle: {
                            fontSize: '7',
                            color: '#FFFFFF'
                        }
                    }
                },
                yAxis: [
                    {
                        type: 'value',
                        name: 'åä½(H)',
                        min: 0,
                        axisLabel: {
                            formatter: '{value}',
                            textStyle: {
                                color: '#FFFFFF'
                            }
                        },
                        splitLine: {
                            show: false,
                        }
                    },
                    {
                        type: 'value',
                        name: 'ç¨¼å¨ç',
                        min: 0,
                        max: 100,
                        axisLabel: {
                            formatter: '{value}%',
                            fontSize: 8,
                            textStyle: {
                                color: '#FFFFFF'
                            }
                        },
                        splitLine: {
                            show: false,
                        }
                    }
                ],
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [
                    {
                        type: 'bar',
                        color: '#FF8000',
                        name: 'MAINT',
                        yAxisIndex: 0,
                        stack: 'y1',
                        label: {
                            show: true,
                            position: 'inside',
                            fontSize: '7',
                            formatter: function (params) {
                                var str = params.value > 0.5 ? params.value : '';
                                return str;
                            }
                        },
                        data: res['maintTime']
                    },
                    {
                        type: 'bar',
                        color: '#ADADAD',
                        name: 'IDLE',
                        yAxisIndex: 0,
                        stack: 'y1',
                        label: {
                            show: true,
                            position: 'inside',
                            fontSize: '7',
                            formatter: function (params) {
                                var str = params.value > 0.5 ? params.value : '';
                                return str;
                            }
                        },
                        data: res['idleTime']
                    },
                    {
                        type: 'bar',
                        color: '#4F9D9D',
                        name: 'ETIME',
                        yAxisIndex: 0,
                        stack: 'y1',
                        label: {
                            show: true,
                            position: 'inside',
                            fontSize: '7',
                            formatter: function (params) {
                                var str = params.value > 0.5 ? params.value : '';
                                return str;
                            }
                        },
                        data: res['eTime']
                    }, {
                        type: 'bar',
                        color: '#518df0',
                        name: 'ETC',
                        yAxisIndex: 0,
                        stack: 'y1',
                        label: {
                            show: true,
                            position: 'inside',
                            fontSize: '7',
                            formatter: function (params) {
                                var str = params.value > 0.5 ? params.value : '';
                                return str;
                            }
                        },
                        data: res['etcTime']
                    },
                    {
                        type: 'bar',
                        color: '#FF2D2D',
                        name: 'DOWN',
                        yAxisIndex: 0,
                        stack: 'y1',
                        label: {
                            show: true,
                            position: 'inside',
                            fontSize: '7',
                            formatter: function (params) {
                                var str = params.value > 0.5 ? params.value : '';
                                return str;
                            }
                        },
                        data: res['downTime']
                    },
                    {
                        type: 'line',
                        color: '#009100',
                        name: 'RUN',
                        yAxisIndex: 1,
                        symbolSize: 5,
                        smooth: false,
                        itemStyle: {
                            normal: {
                                borderWidth: 1
                            }
                        },
                        label: {
                            show: true,
                            position: 'inside',
                            fontSize: '10',
                            formatter: function (params) {
                                return params.value + '%';
                            }
                        },
                        data: res['runRatio']
                    }
                ]
            };
        });
    };
    // è¯çç¸å³
    B3ArrayDashboardComponent.prototype.initYield = function () {
        this.setYieldOptions();
    };
    B3ArrayDashboardComponent.prototype.setYieldOptions = function () {
        var _this = this;
        var url = "assets/b3-array/array.json";
        this.http.get(url).subscribe(function (response) {
            var res = response['yield'];
            _this.yieldOption = {
                title: {
                    text: 'Arrayè¯çä¿¡æ¯',
                    left: 'center',
                    textStyle: {
                        fontSize: 12,
                        color: '#FFFFFF'
                    }
                },
                xAxis: {
                    type: 'category',
                    data: res['product'],
                    axisLabel: {
                        rotate: 45,
                        interval: 0,
                        textStyle: {
                            fontSize: '8',
                            color: '#FFFFFF'
                        }
                    },
                },
                yAxis: [
                    {
                        type: 'value',
                        data: res['qty'],
                        min: 0,
                        axisLabel: {
                            formatter: '{value}',
                            textStyle: {
                                color: '#FFFFFF'
                            }
                        },
                        splitLine: {
                            show: false,
                        }
                    },
                    {
                        type: 'value',
                        data: res['ratio'],
                        min: 0,
                        max: 100,
                        axisLabel: {
                            formatter: '{value}%',
                            textStyle: {
                                color: '#FFFFFF'
                            }
                        },
                        splitLine: {
                            show: false,
                        }
                    },
                ],
                grid: {
                    bottom: 60
                },
                legend: {
                    data: [{ name: 'åºè´§æ°', textStyle: { color: "#FFFFFF" } },
                        { name: 'è¯ç', textStyle: { color: "#FFFFFF" } }],
                    left: '70%',
                    top: '10%'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [
                    {
                        type: 'bar',
                        color: '#8c6ac4',
                        name: 'åºè´§æ°',
                        label: {
                            show: true,
                            position: 'inside',
                            formatter: function (params) {
                                return params.value;
                            }
                        },
                        data: res['qty']
                    },
                    {
                        type: 'line',
                        color: '#c23531',
                        name: 'è¯ç',
                        yAxisIndex: 1,
                        symbolSize: 5,
                        smooth: false,
                        itemStyle: {
                            normal: {
                                borderWidth: 1
                            }
                        },
                        label: {
                            show: true,
                            position: 'inside',
                            formatter: function (params) {
                                return params.value + '%';
                            }
                        },
                        data: res['ratio']
                    }
                ]
            };
        });
    };
    B3ArrayDashboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-b3-array-dashboard',
            template: __webpack_require__("./src/app/outstandingcase/pmkanban/b3-array-dashboard/b3-array-dashboard.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/pmkanban/b3-array-dashboard/b3-array-dashboard.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__["a" /* ApiService */], __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_common_http__["b" /* HttpClient */]])
    ], B3ArrayDashboardComponent);
    return B3ArrayDashboardComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/b6-dashboard/b6-dashboard.component.css":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/b6-dashboard/b6-dashboard.component.html":
/***/ (function(module, exports) {

module.exports = "<div class='ui-g waterMarkHome' style=\"margin:0px;padding: 0px;background-color: RGB(1,31,58);\"[ngStyle]=\"{height: this.screenHight}\" ng-repeat=\"i in ::waterHomeData\">\n    <div style=\"height:8%; width:100%;margin-top: 0px;padding:0px\">\n      <h2 style=\"text-align: center;height: 100%;line-height: 65px; width:100%;margin-top: 0px;padding:0px;background-image: url('assets/picture/title.png');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;color: aliceblue\">\n        B6ä¼ä¸æ°æ®å¹³å°</h2>\n  </div>\n  <div id =\"time\"style=\"height:2%;background-color: #0b1c38;width: 100%;color:#fff;font-size:12px;font-weight:bold;font-family:å¾®è½¯éé»\">\n    </div>\n  <div class='ui-g-12'style=\"height:30%;margin:0px;padding: 0px\">\n      <div class=\"ui-g-4 ui-lg-4\" style=\"padding: 0px;height:100% ;border: 1px solid\" echarts [options]=\"chartOptionInout\" ></div>\n      <div class=\"ui-g-4 ui-lg-4\" style=\"padding: 0px;height:100% ;border: 1px solid\" echarts [options]=\"chartOptionYield\" ></div>\n      <div class=\"ui-g-4 ui-lg-4\" style=\"margin:0px;padding:0px;height:100%\">\n        <div class=\"ui-g\" style=\"border: 1px solid;height: 100%;width: 100%\" >\n          <div class=\"ui-g-12 ui-lg-1\" style=\"background-color: RGB(1,31,58);width: 12%\"> \n              <label style=\"color:#fff;font-size: 12px ;font-family: å¾®è½¯éé»;\">TOTAL</label>&nbsp;<br />\n              <label style=\"color:gold;font-size: 14px;font-family: å¾®è½¯éé»;\">2193</label> \n              <br /><br />\n              <label style=\"color:#fff;font-size: 12px;font-family: å¾®è½¯éé»;\">FULL</label>&nbsp;<br />\n              <label style=\"color:gold;font-size: 14px;font-family: å¾®è½¯éé»;\">1943</label> \n              <br /><br />\n              <label  style=\"color:#fff;font-size: 12px;margin-left: -4px;font-family: å¾®è½¯éé»;\">EMPTY</label>&nbsp;<br />\n              <label style=\"color:gold;font-size: 14px;font-family: å¾®è½¯éé»;\">408</label>\n            </div>\n            <div echarts [options]=\"chartOptionCST\"  class=\"ui-g-12 ui-lg-11\" style=\"height: 100%;padding: 0px;width: 88%\">\n                 \n            </div> \n      </div>\n      </div>\n  </div>\n  <div class=\"ui-g-12\" style=\"margin:0px;padding: 0px;height:30%;\" >\n      <div class=\"ui-g-4 ui-lg-6\" style=\"padding: 0px;height:100% ;border: 1px solid\" echarts [options]=\"chartOptionPh1Run\" ></div>\n      <div class=\"ui-g-4 ui-lg-6\" style=\"padding: 0px;height:100% ;border: 1px solid\" echarts [options]=\"chartOptionPh2Run\" ></div>\n  </div>\n  <div class=\"ui-g-12\" style=\"margin:0px;padding: 0px;height:30%;\" >\n      <div class=\"ui-g-4 ui-lg-6\" style=\"padding: 0px;height:100% ;border: 1px solid\" echarts [options]=\"chartOptionPh1WIP\" ></div>\n      <div class=\"ui-g-4 ui-lg-6\" style=\"padding: 0px;height:100% ;border: 1px solid\" echarts [options]=\"chartOptionPh2WIP\" ></div> \n  </div>\n</div>\n"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/b6-dashboard/b6-dashboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return B6DashboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__breadcrumb_service_breadcrumb_service__ = __webpack_require__("./src/core/layout/breadcrumb/service/breadcrumb.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__node_modules_angular_common__ = __webpack_require__("./node_modules/@angular/common/esm5/common.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_layout_retab_service_tab_service__ = __webpack_require__("./src/core/layout/retab/service/tab.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var B6DashboardComponent = /** @class */ (function () {
    function B6DashboardComponent(apiService, datePipe, breadcrumbService, tService) {
        this.apiService = apiService;
        this.datePipe = datePipe;
        this.breadcrumbService = breadcrumbService;
        this.tService = tService;
        this.m = new Date();
    }
    B6DashboardComponent.prototype.ngOnInit = function () {
        this.initalpage();
        this.searchDate = new Date(this.m.getTime() - 24 * 60 * 60 * 1000);
        this.screenHight = window.screen.height + 'px'; //è·åå½åå±å¹é«åº¦
    };
    B6DashboardComponent.prototype.initalpage = function () {
        this.onSearch();
    };
    B6DashboardComponent.prototype.onSearch = function () {
        this.dataListInoutPut(); //ç¬¬ä¸è¡æ°æ®å¾
        this.dataListYield(); //ç¬¬ä¸è¡æ°æ®å¾
        this.dataListCst(); //ç¬¬ä¸è¡æ°æ®å¾
        this.dataListRunRate(); //ç¬¬äºè¡æ°æ®å¾
        this.dataListWip();
    };
    B6DashboardComponent.prototype.dataListInoutPut = function () {
        var _this = this;
        var url1 = '/assets/demo/data/B6/b6Inoutput.json';
        this.apiService.testGet(url1).subscribe(function (res) {
            _this.setEchartInout(res);
        }, function (error) { console.log(error); });
    };
    B6DashboardComponent.prototype.dataListYield = function () {
        var _this = this;
        var url2 = '/assets/demo/data/B6/b6yield.json';
        var options2 = {
            params: {
                searchDate: this.datePipe.transform(this.searchDate, 'yyyyMMdd'),
            }
        };
        console.log(this.searchDate);
        this.apiService.testGet(url2).subscribe(function (res) {
            console.log(res);
            _this.setEchartYiled(res);
        }, function (error) { console.log(error); });
    };
    B6DashboardComponent.prototype.setEchartInout = function (data) {
        var actIn = new Array();
        var actOut = new Array();
        var sucessIn = new Array();
        var sucessOut = new Array();
        for (var i = 0; i < data.length; i++) {
            actIn.push(data[i].ACTIN);
            actOut.push(data[i].ACTOUT);
            sucessIn.push(data[i].SUCESSIN);
            sucessOut.push(data[i].SUCESSOUT);
        }
        this.chartOptionInout = {
            title: {
                x: 'center',
                text: 'æå¥äº§åºæåµ',
                textStyle: {
                    fontSize: 15,
                    fontWeight: 'bold',
                    fontFamily: 'Microsoft YaHei',
                    color: '#fff'
                }
            },
            tooltip: {
                trigger: 'axis'
            },
            color: ['#0073FF', '#1FE9BA', '#FF7F50', '#8A2BE2'],
            legend: {
                data: ['In', 'Out', 'æå¥è¾¾æç', 'äº§åºè¾¾æç'],
                orient: 'horizontal',
                x: 'center',
                y: 'bottom',
                textStyle: {
                    fontSize: 10,
                    color: '#fff',
                    fontFamily: 'Microsoft YaHei',
                },
                itemWidth: 9,
                itemHeight: 7
            },
            grid: {
                left: '8%',
                right: '7%',
                bottom: '18%',
                top: '10%',
                height: "65%"
                //containLabel: true
            },
            calculable: true,
            xAxis: [
                {
                    type: 'category',
                    data: ['ARRAY I/O', 'CF I/O', 'CELL I/O'],
                    axisLabel: {
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    }
                }
            ],
            yAxis: [
                {
                    // name:'æå¥äº§åº(K)',
                    nameTextStyle: {
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                    type: 'value',
                    axisLabel: {
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10,
                        formatter: function (value, index) {
                            if (value >= 10000 && value < 10000000) {
                                value = value / 10000 + "ä¸";
                            }
                            else if (value >= 10000000) {
                                value = value / 10000000 + "åä¸";
                            }
                            return value;
                        }
                    },
                    splitLine: {
                        show: false
                    },
                },
                {
                    //name:'è¾¾æç(%)',
                    nameTextStyle: {
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                    type: 'value',
                    axisLabel: {
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    splitLine: {
                        show: false
                    }
                }
            ],
            series: [
                {
                    name: 'In',
                    type: 'bar',
                    data: actIn,
                    barWidth: 30
                },
                {
                    name: 'Out',
                    type: 'bar',
                    data: actOut,
                    barWidth: 30
                },
                {
                    yAxisIndex: 1,
                    symbol: 'circle',
                    symbolSize: 10,
                    // color:'black',
                    name: 'æå¥è¾¾æç',
                    type: 'line',
                    label: {
                        normal: {
                            formatter: '{c}%',
                            show: true,
                            color: '#fff'
                        }
                    },
                    data: sucessIn
                },
                {
                    yAxisIndex: 1,
                    symbol: 'circle',
                    symbolSize: 10,
                    // color:'black',
                    name: 'äº§åºè¾¾æç',
                    type: 'line',
                    label: {
                        normal: {
                            formatter: '{c}%',
                            show: true,
                            color: '#fff'
                        }
                    },
                    data: sucessOut
                }
            ]
        };
    };
    B6DashboardComponent.prototype.setEchartYiled = function (data) {
        this.chartOptionYield = {
            title: {
                text: 'å·¥åè¯ç',
                textStyle: {
                    color: '#fff',
                    fontSize: 15,
                    fontWeight: 'bold',
                    fontFamily: 'Microsoft YaHei'
                },
                x: 'center'
            },
            tooltip: {
                trigger: 'item',
                formatter: "{a} <br/>{b}: {c}"
            },
            color: ['#0073FF', '#1FE9BA', '#B206FF'],
            series: [
                {
                    name: 'å·¥åè¯ç',
                    type: 'pie',
                    radius: ['45%', '65%'],
                    avoidLabelOverlap: false,
                    label: {
                        normal: {
                            formatter: '{b}ï¼{c}%  ',
                            textStyle: {
                                color: '#fff',
                                lineHeight: 10,
                                align: 'center',
                                fontSize: 12,
                                fontFamily: 'Microsoft Yahei'
                            }
                        }
                    },
                    labelLine: {
                        normal: {
                            show: true,
                            lineStyle: {
                                width: 2
                            }
                        }
                    },
                    data: [
                        { value: data[0].YIELD_MONTH, name: 'ARRAY', itemStyle: { normal: { color: '#0073FF' } } },
                        { value: data[1].YIELD_MONTH, name: 'CF', itemStyle: { normal: { color: '#1FE9BA' } } },
                        { value: data[2].YIELD_MONTH, name: 'CELL', itemStyle: { normal: { color: '#B206FF' } } }
                    ]
                },
                {
                    name: 'ç»¼åè¯ç',
                    type: 'pie',
                    radius: ['0%', '40%'],
                    avoidLabelOverlap: false,
                    label: {
                        normal: {
                            formatter: '{b}\n{c}%  ',
                            textStyle: {
                                color: 'RGB(0,0,0)',
                                lineHeight: 16,
                                align: 'center',
                                fontSize: 12,
                                fontWeight: 'bold',
                                fontFamily: 'Microsoft Yahei'
                            },
                            position: 'center'
                        }
                    },
                    data: [
                        { value: (data[0].YIELD_MONTH * data[2].YIELD_MONTH / 100).toFixed(2), name: 'ç»¼åè¯ç', itemStyle: { normal: { color: 'RGB(255,255,0)' } } },
                    ]
                }
            ]
        };
    };
    //
    B6DashboardComponent.prototype.dataListCst = function () {
        this.chartOptionCST = {
            color: ['#1FE9BA', '#FFF932', '#B2FF06'],
            legend: {
                data: ['Production', 'Develop', 'Engineer'],
                orient: 'horizontal',
                show: true,
                x: 'center',
                y: 'bottom',
                textStyle: {
                    fontSize: 10,
                    color: '#fff',
                    fontFamily: 'Microsoft YaHei',
                },
                type: 'scroll',
                itemWidth: 9,
                itemHeight: 7
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'|'cross'
                    // color:''
                },
                showDelay: 20,
                hideDelay: 100,
                transitionDuration: 0.4,
                backgroundColor: 'rgba(0,0,0,0.8)',
            },
            grid: {
                left: '10%',
                right: '1%',
                bottom: '18%',
                top: '10%',
                height: '65%'
            },
            title: {
                text: 'CSTå ç¨æåµ',
                textStyle: {
                    color: '#fff',
                    fontSize: 15,
                    fontWeight: 'bold',
                    fontFamily: 'Microsoft YaHei',
                },
                x: 'center'
            },
            xAxis: {
                type: 'category',
                data: ['AC', 'FC', 'CC'],
                axisLine: {
                    lineStyle: {
                        type: 'solid',
                        color: '#fff',
                        width: '2',
                    }
                },
                axisLabel: {
                    fontFamily: 'Microsoft YaHei',
                    fontSize: 10
                }
            },
            yAxis: [
                {
                    type: 'value',
                    axisLabel: {
                        formatter: '{value}',
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                },
            ],
            series: [
                {
                    name: 'Production',
                    data: [841, 366, 140],
                    type: 'bar',
                    barWidth: 30,
                    itemStyle: {
                        fontSize: 8,
                    }
                },
                {
                    name: 'Develop',
                    data: [76, 62, 116],
                    type: 'bar',
                    barWidth: 30,
                    itemStyle: {
                        fontSize: 8,
                    }
                },
                {
                    name: 'Engineer',
                    data: [30, 150, 310],
                    type: 'bar',
                    barWidth: 30,
                    itemStyle: {
                        fontSize: 8,
                    }
                }
            ]
        };
    };
    //ç¬¬äºè¡æ°æ®-start
    B6DashboardComponent.prototype.dataListRunRate = function () {
        var _this = this;
        var url = '/assets/demo/data/B6/b6machineRunrate.json';
        this.apiService.testGet(url).subscribe(function (res) {
            console.log(res);
            _this.setEchartMachineRunrate(res);
        }, function (error) { console.log(error); });
    };
    B6DashboardComponent.prototype.setEchartMachineRunrate = function (data) {
        var xEqp1 = new Array();
        var yRun1 = new Array();
        var yIdle1 = new Array();
        var yEtime1 = new Array();
        var yDown1 = new Array();
        var yMaint1 = new Array();
        var yEtc1 = new Array();
        var yJc1 = new Array();
        var xEqp2 = new Array();
        var yRun2 = new Array();
        var yIdle2 = new Array();
        var yEtime2 = new Array();
        var yDown2 = new Array();
        var yMaint2 = new Array();
        var yEtc2 = new Array();
        var yJc2 = new Array();
        console.log(data.length);
        for (var i = 0; i < data.length - 15; i++) {
            xEqp1.push(data[i].EQP);
            yRun1.push(data[i].RUN);
            yIdle1.push(data[i].IDLE);
            yEtime1.push(data[i].ETIME);
            yDown1.push(data[i].DOWN);
            yMaint1.push(data[i].MAINT);
            yEtc1.push(data[i].ETC);
            yJc1.push(data[i].JC);
        }
        for (var i = data.length - 15; i < data.length; i++) {
            xEqp2.push(data[i].EQP);
            yRun2.push(data[i].RUN);
            yIdle2.push(data[i].IDLE);
            yEtime2.push(data[i].ETIME);
            yDown2.push(data[i].DOWN);
            yMaint2.push(data[i].MAINT);
            yEtc2.push(data[i].ETC);
            yJc2.push(data[i].JC);
        }
        console.log(xEqp1);
        this.chartOptionPh1Run = {
            //   graphic: [
            //     {
            //         type: 'group',
            //         rotation: Math.PI / 4,
            //         bounding: 'raw',
            //         opacity:0.5,
            //         right:220,
            //         bottom:110,
            //         z: 10,              
            //         zlevel:10,
            //         children: [
            //             {
            //                 type: 'text',
            //                 left: 'center',
            //                 top: 'center',
            //                 z: 100,
            //                 style: {
            //                     fill: 'rgba(0,0,0,0.3)',
            //                     // text: this.currentUser,
            //                     font: 'bold 18px Microsoft YaHei'
            //                 }
            //             }
            //         ]
            //     }
            // ],
            title: {
                text: 'PH1å³é®è®¾å¤ç¨¼å¨',
                textStyle: {
                    color: '#fff',
                    fontSize: 15,
                    fontWeight: 'bold',
                    fontFamily: 'Microsoft YaHei'
                },
                x: 'center'
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
                },
            },
            color: ['#1FE9BA', '#FFF932', '#B2FF06', '#E60412', '#B206FF', '#5241D8', '#FFAE05'],
            //color:['#17fdda','#fd9f0a','#00b8d6','#ed7cd7','#5411e2','#d9ff2f','#f2f3ed'],
            legend: {
                data: ['RUN', 'IDLE', 'ETIME', 'DOWN', 'MAINT', 'ETC', 'JC'],
                orient: 'horizontal',
                show: true,
                x: 'center',
                y: 'bottom',
                textStyle: {
                    fontSize: 10,
                    color: '#fff',
                    fontFamily: 'Microsoft YaHei',
                },
                itemWidth: 9,
                itemHeight: 7
            },
            grid: {
                left: '7%',
                right: '1%',
                bottom: '18%',
                top: '10%',
                height: "65%"
                //containLabel: true
            },
            xAxis: [
                {
                    type: 'category',
                    data: xEqp1,
                    axisLabel: {
                        interval: 0,
                        rotate: 0,
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    axisLabel: {
                        formatter: '{value}%',
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    min: 0,
                    max: 100,
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                }
            ],
            series: [
                {
                    name: 'RUN',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yRun1
                },
                {
                    name: 'IDLE',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yIdle1
                },
                {
                    name: 'ETIME',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yEtime1
                },
                {
                    name: 'DOWN',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yDown1
                },
                {
                    name: 'MAINT',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yMaint1
                },
                {
                    name: 'ETC',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yEtc1
                },
                {
                    name: 'JC',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yJc1
                }
            ]
        };
        this.chartOptionPh2Run = {
            title: {
                text: 'PH2å³é®è®¾å¤ç¨¼å¨',
                textStyle: {
                    color: '#fff',
                    fontSize: 15,
                    fontWeight: 'bold',
                    fontFamily: 'Microsoft YaHei',
                },
                x: 'center'
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
                },
            },
            color: ['#1FE9BA', '#FFF932', '#B2FF06', '#E60412', '#B206FF', '#5241D8', '#FFAE05'],
            legend: {
                data: ['RUN', 'IDLE', 'ETIME', 'DOWN', 'MAINT', 'ETC', 'JC'],
                orient: 'horizontal',
                show: true,
                x: 'center',
                y: 'bottom',
                textStyle: {
                    fontSize: 10,
                    color: '#fff',
                    fontFamily: 'Microsoft YaHei',
                },
                itemWidth: 9,
                itemHeight: 7
            },
            grid: {
                left: '7%',
                right: '1%',
                bottom: '18%',
                top: '10%',
                height: "65%"
                //containLabel: true
            },
            xAxis: [
                {
                    type: 'category',
                    data: xEqp2,
                    axisLabel: {
                        interval: 0,
                        rotate: 0,
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    axisLabel: {
                        formatter: '{value}%',
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    min: 0,
                    max: 100,
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                }
            ],
            series: [
                {
                    name: 'RUN',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yRun2
                },
                {
                    name: 'IDLE',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yIdle2
                },
                {
                    name: 'ETIME',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yEtime2
                },
                {
                    name: 'DOWN',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yDown2
                },
                {
                    name: 'MAINT',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yMaint2
                },
                {
                    name: 'ETC',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yEtc2
                },
                {
                    name: 'JC',
                    type: 'bar',
                    stack: 'ç¨¼å¨',
                    data: yJc2
                }
            ]
        };
    };
    //ç¬¬äºè¡æ°æ®-end
    //ç¬¬ä¸è¡æ°æ®-start
    B6DashboardComponent.prototype.dataListWip = function () {
        var _this = this;
        var url4 = '/assets/demo/data/B6/b6WIP.json';
        this.apiService.testGet(url4).subscribe(function (res) {
            console.log('PMWIP');
            console.log(res);
            _this.setEchartWIP(res);
        }, function (error) { console.log(error); });
    };
    B6DashboardComponent.prototype.setEchartWIP = function (data) {
        var xOper1 = new Array();
        var yCount1 = new Array();
        var xOper2 = new Array();
        var yCount2 = new Array();
        console.log(data.length);
        for (var i = 0; i < data.length / 2; i++) {
            xOper1.push(data[i].PROCESSOPERATIONNAME);
            yCount1.push(data[i].LOTCOUNT);
        }
        for (var i = data.length / 2; i < data.length; i++) {
            xOper2.push(data[i].PROCESSOPERATIONNAME);
            yCount2.push(data[i].LOTCOUNT);
        }
        console.log(xOper1);
        this.chartOptionPh1WIP = {
            title: {
                text: 'PH1å³é®å·¥åºWIP&BANK',
                textStyle: {
                    color: '#fff',
                    fontSize: 15,
                    fontWeight: 'bold',
                    fontFamily: 'Microsoft YaHei',
                },
                x: 'center'
            },
            color: ['#0073FF'],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
                },
            },
            grid: {
                left: '6%',
                right: '1%',
                bottom: '15%',
                top: '10%'
                //containLabel: true
            },
            xAxis: [
                {
                    type: 'category',
                    data: xOper1,
                    axisLabel: {
                        interval: 0,
                        rotate: 45,
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    axisLabel: {
                        formatter: '{value}',
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    max: 100,
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                }
            ],
            series: [
                {
                    type: 'bar',
                    label: {
                        normal: {
                            show: true,
                            position: 'top',
                            color: '#fff'
                        }
                    },
                    data: yCount1,
                }
            ]
        };
        this.chartOptionPh2WIP = {
            title: {
                text: 'PH2å³é®å·¥åºWIP&BANK',
                textStyle: {
                    color: '#fff',
                    fontSize: 15,
                    fontWeight: 'bold',
                    fontFamily: 'Microsoft YaHei',
                },
                x: 'center'
            },
            color: ['#0073FF'],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
                },
            },
            grid: {
                left: '6%',
                right: '1%',
                bottom: '15%',
                top: '10%'
                //containLabel: true
            },
            xAxis: [
                {
                    type: 'category',
                    data: xOper2,
                    axisLabel: {
                        interval: 0,
                        rotate: 45,
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    axisLabel: {
                        formatter: '{value}',
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 10
                    },
                    max: 100,
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color: '#fff',
                            width: '2' //åæ çº¿çå®½åº¦
                        }
                    },
                }
            ],
            series: [
                {
                    type: 'bar',
                    label: {
                        normal: {
                            show: true,
                            position: 'top',
                            color: '#fff'
                        }
                    },
                    data: yCount2,
                }
            ]
        };
    };
    B6DashboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-b6-dashboard',
            template: __webpack_require__("./src/app/outstandingcase/pmkanban/b6-dashboard/b6-dashboard.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/pmkanban/b6-dashboard/b6-dashboard.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__common_service_api_api_service__["a" /* ApiService */], __WEBPACK_IMPORTED_MODULE_3__node_modules_angular_common__["DatePipe"], __WEBPACK_IMPORTED_MODULE_1__breadcrumb_service_breadcrumb_service__["a" /* BreadcrumbService */], __WEBPACK_IMPORTED_MODULE_4__core_layout_retab_service_tab_service__["a" /* TabService */]])
    ], B6DashboardComponent);
    return B6DashboardComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/b8-dashboard/b8-dashboard.component.css":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/b8-dashboard/b8-dashboard.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"ui-g\" style=\"height:100vh;background-color: RGB(1,31,58); background-image: url('assets/picture/background/b8/screen_bg9_scroll-2.png');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;color: aliceblue\">\n\n  <!-- <div class=\"ui-g-12\" style=\"position:relative;width:100%;height: 8vh;background-image: url('assets/picture/background/title.png');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;color: #7FFFD4;font-size:25px;\"> -->\n<div class=\"ui-g-12\" style=\"position:relative;width:100%;height: 8vh;color: #7FFFD4;font-size:25px;\">\n  <div class=\"ui-g-12\" style=\"position: relative;text-align: center;top:-1%;\"></div>\n  <div style=\"text-align:right;vertical-align: middle; float:right;position: absolute;z-index: 100; top:1.5vh;right: 0;width: 100px;height: 5vh;font-size: 12px;\">\n      <!-- <button pButton type=\"button\" (click)=\"onFullThis(fullScreenTarget)\"  label=\"aaa\" icon=\"fa fa-window-maximize\"><i class=\"material-icons retab-menu-icons\" style=\"float: right; color: #3D4D66; cursor: pointer; font-size: 15px; margin-top: 17px;\">zoom_out_map</i></button> -->\n      <!-- <i class=\"material-icons retab-menu-icons\" (click)=\"onFullThis(fullScreenTarget)\" style=\"float: right; color: #3D4D66; cursor: pointer; font-size: 15px; margin-top: 8px;margin-right: 15px;\">zoom_out_map</i> -->\n  </div>\n</div>\n<div class=\"ui-g-12\" style=\"height:52vh\">\n  <div class=\"ui-g-3\" style=\"height:52vh;\">\n          <div class=\"ui-g-12\" style=\"position:relative;text-align: center;height: 26vh;color: aliceblue\">\n              <div echarts class=\"ui-g-12\" style=\"height: 100%;position: absolute;left: 0;top: 0\" [options]=\"PmTATOption\"></div>\n          </div>\n          <div class=\"ui-g-12\" style=\"text-align: center;height:26px;color: aliceblue\">\n              <div class=\"ui-g-12\" style=\"height: 26vh;\">\n                          <p-table [value]=\"PmMTTR\" >\n                                  <ng-template pTemplate=\"header\">\n                                      <tr >\n                                          <th colspan=\"2\" style=\"background-color:darkseagreen\">Array</th>\n                                          <th colspan=\"2\" style=\"background-color:darkseagreen\">Cell</th>\n                                          <th colspan=\"2\" style=\"background-color:darkseagreen\">Cf</th>\n                                      </tr>\n                                  </ng-template>\n                                  <ng-template pTemplate=\"body\" let-PmMTTR>\n                                      <tr >\n                                          <td style=\"background-color: \tDarkBlue;width: 70%\">{{PmMTTR.ARRAY_EQP_ID}}</td>\n                                          <td style=\"background-color: \tDarkBlue;width: 70%\">{{PmMTTR.ARRAY_MTTR}}</td>\n                                          <td style=\"background-color: \tDarkBlue;width: 70%\">{{PmMTTR.CELL_EQP_ID}}</td>\n                                          <td style=\"background-color: \tDarkBlue;width: 70%\">{{PmMTTR.CELL_MTTR}}</td>\n                                          <td style=\"background-color: \tDarkBlue;width: 70%\">{{PmMTTR.CF_EQP_ID}}</td>\n                                          <td style=\"background-color: \tDarkBlue;width: 70%\">{{PmMTTR.CF_MTTR}}</td>\n                                      </tr>\n                                  </ng-template>\n                  </p-table>\n              </div>\n          </div>\n  </div>\n  <div class=\"ui-g-6\" style=\"height:52vh\">\n          <div class=\"ui-g-12\" style=\"text-align: center;height: 90%;color: aliceblue\">\n              <div class=\"ui-g-12\" style=\"position:relative;top:2%;height: 10%;font-size: 10px;text-align: center;color: #7FFFD4;\">\n                <div class=\"ui-g-4\" style=\"height:100%;font-size: 10px;text-align: center;color: #7FFFD4;\"><br/>æ»æå¥ï¼{{total_in}}</div>\n                <div class=\"ui-g-4\" style=\"height:100%;font-size: 10px;text-align: center;color: #7FFFD4;\"><br/>æ»äº§åºï¼{{total_out}}</div>\n                <div class=\"ui-g-4\" style=\"height:100%;font-size: 10px;text-align: center;color: #7FFFD4;\"><br/>ç»¼åè¯çï¼{{Cum_Yiled}}</div>\n              </div>\n              <div class=\"ui-g-6\" style=\"position:relative;top:20%;height: 80%;\" >\n                  <div class=\"ui-g-12\" style=\"position: absolute;left:0;top:0;width:30%;height: 15%;font-size: 10px;text-align: center;display: inline-block;color: #7FFFD4;\">Cum In/Out</div> \n                  <div echarts class=\"ui-g-12\" style=\"height: 100%;position: absolute;left: 3%;top: 0\"  [options]=\"PmInOutOption\" [theme]=\"echartstheme\"></div>\n              </div>\n              <div class=\"ui-g-6\" style=\"position:relative;top:20%;height: 80%;\"  >\n                <div echarts class=\"ui-g-12\" style=\"height: 100%;\" [options]=\"PmFactoryYieldOption\" [theme]=\"echartstheme\"></div>\n              </div>\n            </div>\n  </div>\n  <div class=\"ui-g-3\" style=\"height:52vh\">\n          <div class=\"ui-g-12\" style=\"text-align: center;height: 26vh;color: aliceblue\">\n              <div class=\"ui-g-12\" style=\"position:relative;top:10%;height: 10%;\">\n                  <p-dropdown [options]=\"FactoryList\" [(ngModel)]=\"Selectfactory\" [style]=\"{'font-size':'12px'}\" (onChange)=\"onFactoryChange($event)\" [placeholder]=\"SelectaFactory\"></p-dropdown>\n                  <p-dropdown [options]=\"EQPGroupList\" [(ngModel)]=\"Selecteqpgroup\" [style]=\"{'font-size':'12px'}\" (onChange)=\"getPmCapaMonthWeekSearch($event)\" [style]=\"{'width':'10px'}\"\n                      [placeholder]=\"SelectaEQPGroup\">\n                      <ng-template let-group pTemplate=\"group\">\n                          <!-- <img src=\"assets/showcase/images/demo/flag/{{group.value}}\" style=\"width:20px;vertical-align:middle\" /> -->\n                          <span style=\"margin-left:.25em\">{{group.label}}</span>\n                      </ng-template>\n                  </p-dropdown>\n              </div>\n              <div echarts class=\"ui-g-12\" style=\"position:relative;top:10%;height: 78%;\" [options]=\"PmCapaMonthWeekOption\"></div>\n          </div>\n          <!-- background-image: url('assets/picture/background/screen_bg6-1.jpg');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%; -->\n          <div class=\"ui-g-12\" style=\"position:relative;text-align: center;height: 26vh;color: aliceblue\">\n              <!-- <div class=\"ui-g-12\" style=\"position: absolute;left:0;top:0;width:25%;padding:0.3%;height: 12%;font-size: 10px;text-align: center;display: inline-block;color: #7FFFD4;\">ç©æµåº¦</div> -->\n                <div echarts class=\"ui-g-12\" style=\"position:absolute;top:0%;height:100%\" [options]=\"PmMcsOption\"></div>\n          </div>\n  </div>\n\n</div>\n<div class=\"ui-g-12\" style=\"height:40vh\">\n      <div echarts class=\"ui-g-12\" style=\"height: 95%;\" [options]=\"PmWipMoveChartOption\"></div>\n</div>\n</div>"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/b8-dashboard/b8-dashboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return B8DashboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var B8DashboardComponent = /** @class */ (function () {
    function B8DashboardComponent(apiService) {
        this.apiService = apiService;
    }
    B8DashboardComponent.prototype.ngOnInit = function () {
        this.getPmTAT();
        this.getPmMTTR();
        this.getPmInoUT(); //é¡µé¢1-2
        this.getPmFactoryYield(); //é¡µé¢1-2
        this.getPmCumYield();
        this.getPmFactory(); //1-3
        this.getPmCapaMonthWeek(); //1-3
        this.getPmMcs(); //1-3-2
        this.getPmWipMove(); //2
    };
    B8DashboardComponent.prototype.getPmWipMove = function () {
        var _this = this;
        var url = '/assets/demo/data/B8/PmWipMove.json';
        this.apiService.testGet(url).subscribe(function (res) {
            _this.PmWipMove = res;
            // console.log(this.PmWipMove);
            _this.SetPmWipMoveData(_this.PmWipMove);
        }, function (error) { console.log(error); });
    };
    B8DashboardComponent.prototype.SetPmWipMoveData = function (data) {
        this.PmWipMoveChartOption = {
            title: {
                //   text: 'Arrayæå¥çæ¿',
                y: 50,
                x: 'center'
                //   subtext: 'Plan&Act'
            },
            grid: {
                x: 100,
                y: 45,
                x2: 70,
                y2: 110
            },
            color: ['#F0F8FF', '#006400', '#B8860B', '008B8B', '#DC143C', '#6495ED', '#FF7F50', '#7FFF00', '#A52A2A', '#8A2BE2', '#7FFFD4', '#CCFF00', '#CC66FF', '#CC00FF', '#99FF66', '#336666', '#CC6600'],
            tooltip: {
                trigger: 'axis',
                formatter: function (params) {
                    // console.log(params);
                    var res = params[0]['axisValue'] + '</br>';
                    for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {
                        var value = params_1[_i];
                        if (value['value'] !== 0) {
                            res += value['seriesName'] + ':' + value['value'] + '</br>';
                        }
                    }
                    return res;
                }
            },
            calculable: true,
            legend: {
                data: this.setLegend(data, 'PRODUCTSPECNAME', 'MOVE_QTY'),
                textStyle: {
                    color: '#00CED1',
                    fontSize: 10
                },
                y: 'bottom',
                padding: 2,
                itemGap: 2,
            },
            xAxis: [
                {
                    type: 'category',
                    min: 0,
                    data: this.setEchartsData_multi_x(data, 'DESCRIPTION'),
                    // axisLabel: {rotate: 40},
                    // textStyle: {fontSize: 6}// è®©å­ä½åå¤§
                    axisLabel: {
                        rotate: 30,
                        show: true,
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    textStyle: { fontSize: 10, color: 'white' },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    name: 'Wip(sh)',
                    axisLabel: {
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                },
                {
                    type: 'value',
                    name: 'Move(sh)',
                    position: 'right',
                    // offset: 80,
                    show: true,
                    axisLabel: {
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                }
            ],
            series: this.setPmWipMoveSeries(data, 'DESCRIPTION', 'PRODUCTSPECNAME', 'WIP_QTY', 'MOVE_QTY')
        };
    };
    B8DashboardComponent.prototype.getPmMcs = function () {
        var _this = this;
        var url = '/assets/demo/data/B8/PmMcs.json';
        this.apiService.testGet(url).subscribe(function (res) {
            _this.PmMcs = res;
            // console.log(this.PmMcs);
            _this.SetPmMcsData(_this.PmMcs);
        }, function (error) { console.log(error); });
    };
    B8DashboardComponent.prototype.SetPmMcsData = function (data) {
        //   console.log(data);
        this.PmMcsOption = {
            title: {
                show: false,
                text: 'åºç¡é·è¾¾å¾'
            },
            tooltip: {},
            legend: {
                show: false,
                data: ['array']
            },
            grid: {
                x: 0,
                y: 200,
                x2: 0,
                y2: 140
            },
            radar: {
                // shape: 'circle',
                indicator: this.setradarEchartsxData(data, 'OPER_CODE')
            },
            series: [{
                    name: 'array',
                    type: 'radar',
                    radius: '20%',
                    // areaStyle: {normal: {}},
                    data: [
                        {
                            value: this.setEchartsData(data, 'RATIO'),
                            name: 'array'
                        }
                    ]
                }]
        };
    };
    B8DashboardComponent.prototype.getPmCapaMonthWeek = function () {
        var _this = this;
        var url = '/assets/demo/data/B8/PmCapaMonthWeek.json';
        this.apiService.testGet(url).subscribe(function (res) {
            _this.PmCapaMonthWeek = res;
            _this.SetPmCapaMonthWeekData(_this.PmCapaMonthWeek);
        }, function (error) { console.log(error); });
    };
    B8DashboardComponent.prototype.getPmCapaMonthWeekSearch = function () {
        var _this = this;
        var options = {
            params: { EQP_GROUP1: this.Selecteqpgroup, FACTORY: this.Selectfactory }
        };
        var url = '/assets/demo/data/B8/PmCapaMonthWeek.json';
        this.apiService.getOne(url, options).subscribe(function (res) {
            _this.PmCapaMonthWeek = res;
            _this.SetPmCapaMonthWeekData(_this.PmCapaMonthWeek);
        }, function (error) { console.log(error); });
    };
    B8DashboardComponent.prototype.SetPmCapaMonthWeekData = function (data) {
        this.PmCapaMonthWeekOption = {
            //    backgroundColor: 'white',
            title: {
                //   text: 'Arrayæå¥çæ¿',
                y: 50,
                x: 'center'
                //   subtext: 'Plan&Act'
            },
            grid: {
                x: 35,
                y: 10,
                x2: 20,
                y2: 50
            },
            tooltip: {
                trigger: 'axis',
                formatter: function (params) {
                    // console.log(params);
                    var res = params[0]['axisValue'] + '</br>';
                    for (var _i = 0, params_2 = params; _i < params_2.length; _i++) {
                        var value = params_2[_i];
                        if (value['value'] !== 0) {
                            res += value['seriesName'] + ':' + value['value'] + '</br>';
                        }
                    }
                    return res;
                }
            },
            calculable: true,
            legend: {
                data: this.setLegend(data, 'EQP_STATE', 'R_RATIO'),
                textStyle: {
                    color: '#00CED1',
                    fontSize: 10
                },
                y: 'bottom',
                padding: 1,
                itemGap: 1,
                itemWidth: 10,
                itemHeight: 5
                // orient: 'vertical',
                // align: 'right',
            },
            xAxis: [
                {
                    type: 'category',
                    min: 0,
                    data: this.setEchartsData_multi_x(data, 'PERIOD'),
                    // axisLabel: {rotate: 40},
                    // textStyle: {fontSize: 6}// è®©å­ä½åå¤§
                    axisLabel: {
                        //   rotate: 30,
                        show: true,
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    textStyle: { fontSize: 10, color: 'white' },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    name: 'Wip(sh)',
                    axisLabel: {
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                },
                {
                    type: 'value',
                    name: 'Move(sh)',
                    position: 'right',
                    // offset: 80,
                    show: false,
                    axisLabel: {
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                }
            ],
            series: this.setPmCapaMonthWeekSeries(data, 'PERIOD', 'EQP_STATE', 'O_RATIO', 'R_RATIO')
        };
    };
    B8DashboardComponent.prototype.getPmFactory = function () {
        var _this = this;
        var url = '/assets/demo/data/B8/Factory.json';
        this.apiService.testGet(url).subscribe(function (res) {
            _this.Factory = res;
            // console.log(this.Factory);
            _this.SetPmFactoryData(_this.Factory);
        }, function (error) { console.log(error); });
    };
    B8DashboardComponent.prototype.SetPmFactoryData = function (data) {
        var fac = new Array();
        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
            var a = data_1[_i];
            fac.push({ label: a['FACTORY'], value: a['FACTORY'] });
        }
        //   console.log(fac);
        this.FactoryList = fac;
        this.Selectfactory = fac[0]['value'];
        //   console.log(this.Selectfactory);
        this.onFactoryChange(this.Selectfactory);
    };
    B8DashboardComponent.prototype.onFactoryChange = function (data) {
        var _this = this;
        var options = {
            params: { FACTORY: data }
        };
        //   console.log(data);
        var url3 = '/assets/demo/data/B8/EQPGroup.json';
        this.apiService.testGet(url3).subscribe(function (res) {
            _this.EQPGroup = res;
            // console.log(this.EQPGroup);
            _this.SetPmEQPGroupData(_this.EQPGroup, 'EQP_GROUP1');
        }, function (error) { console.log(error); });
    };
    B8DashboardComponent.prototype.SetPmEQPGroupData = function (obj, item) {
        var EQPGroupData = new Array();
        for (var _i = 0, obj_1 = obj; _i < obj_1.length; _i++) {
            var a = obj_1[_i];
            for (var _a = 0, obj_2 = obj; _a < obj_2.length; _a++) {
                var b = obj_2[_a];
                EQPGroupData.push({ label: b[item], value: b[item] });
            }
        }
        this.EQPGroupList = EQPGroupData;
        this.Selecteqpgroup = EQPGroupData[0]['value'];
    };
    B8DashboardComponent.prototype.getPmTAT = function () {
        var _this = this;
        var url = '/assets/demo/data/B8/TAT.json';
        this.apiService.testGet(url).subscribe(function (res) {
            _this.PmTAT = res;
            _this.SetPmTATData(_this.PmTAT);
            // console.log(this.PmTAT);
        }, function (error) { console.log(error); });
    };
    B8DashboardComponent.prototype.SetPmTATData = function (data) {
        this.PmTATOption = {
            title: {},
            tooltip: {
                trigger: 'axis'
                // formatter: '{a} <br/>{b} : {c}'
            },
            legend: {
                data: ['STATIC', 'DYNAMIC'],
                x: 'right',
                y: 18,
                textStyle: {
                    color: '#00CED1',
                    fontSize: 10
                }
            },
            color: ['#CC99FF', '#99CC99'],
            grid: {
                x: 10,
                y: 30,
                x2: 5,
                y2: 34
            },
            calculable: false,
            xAxis: [
                {
                    type: 'category',
                    boundaryGap: true,
                    data: this.setEchartsData(data, 'FACTORY'),
                    axisLabel: {
                        //   rotate: 30,
                        show: true,
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    textStyle: { fontSize: 10, color: 'white' },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    show: 0,
                    axisLabel: {
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                }
            ],
            series: [
                {
                    name: 'STATIC',
                    type: 'bar',
                    smooth: true,
                    barWidth: 25,
                    itemStyle: { normal: { areaStyle: { type: 'default' }, label: {
                                show: true,
                                position: 'inside',
                                formatter: '{c}',
                                textStyle: {
                                    // fontWeight: 'bolder',
                                    fontSize: '12',
                                    fontFamily: 'å¾®è½¯éé»',
                                    show: true,
                                    color: 'white'
                                }
                            } } },
                    data: this.setEchartsData(data, 'STATIC_TAT')
                },
                {
                    name: 'DYNAMIC',
                    type: 'bar',
                    smooth: true,
                    barWidth: 25,
                    itemStyle: { normal: { areaStyle: { type: 'default' }, label: {
                                show: true,
                                position: 'inside',
                                formatter: '{c}',
                                textStyle: {
                                    // fontWeight: 'bolder',
                                    fontSize: '12',
                                    fontFamily: 'å¾®è½¯éé»',
                                    show: true,
                                    color: 'white'
                                }
                            } } },
                    data: this.setEchartsData(data, 'DYNAMIC_TAT')
                }
            ]
        };
    };
    //TAT-end
    //MTTR-START
    B8DashboardComponent.prototype.getPmMTTR = function () {
        var _this = this;
        var url2 = '/assets/demo/data/B8/PmMTTR.json';
        this.apiService.testGet(url2).subscribe(function (res) {
            _this.PmMTTR = res;
        }, function (error) { console.log(error); });
    };
    // End ArrayTAT
    // ä»¥ä¸å½æ°å¯ä»¥å¬ç¨,è¯·å¿éææ¹å¨
    // è®¾ç½®Echartsåæ åæ°æ®(å¯è®¾ç½®æ¨ªåæ å¼)
    B8DashboardComponent.prototype.setEchartsData = function (obj, item) {
        var dataArray = new Array();
        for (var value in obj) {
            if (obj.hasOwnProperty(value)) {
                var axisdata = obj[value];
                for (var b in axisdata) {
                    if (b === item) {
                        var EchartsData = axisdata[b];
                        dataArray.push(EchartsData);
                    }
                }
            }
        }
        return dataArray;
    };
    // è·åpMInoUTåå§å¼
    B8DashboardComponent.prototype.getPmInoUT = function () {
        var _this = this;
        var url = '/assets/demo/data/B8/PmInOut.json';
        this.apiService.testGet(url).subscribe(function (res) {
            _this.PmInOut = res;
            _this.SetPmInOutData(_this.PmInOut);
            _this.total_in = _this.getOneData(_this.PmInOut, 'A/I', 'ACT').toFixed(1) + 'K';
            _this.total_out = _this.getOneData(_this.PmInOut, 'MDL/O', 'ACT').toFixed(1) + 'K';
        }, function (error) { console.log(error); });
    };
    B8DashboardComponent.prototype.SetPmInOutData = function (data) {
        this.PmInOutOption = {
            title: {},
            grid: {
                x: 10,
                y: 40,
                x2: 10,
                y2: 25
            },
            tooltip: {
                trigger: 'axis'
            },
            legend: {
                data: ['ACT', 'PLAN', 'Ratio'],
                y: 'top',
                x: 'right',
                textStyle: {
                    color: '#00CED1'
                },
                itemWidth: 20,
                itemHeight: 10,
                itemGap: 10,
            },
            calculable: false,
            xAxis: [
                {
                    splitLine: { show: false },
                    type: 'category',
                    data: this.setEchartsData(data, 'FACTORY'),
                    axisLabel: {
                        //   rotate: 30,
                        show: true,
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    textStyle: { fontSize: 10, color: 'white' },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    show: 0,
                    max: function (value) {
                        // console.log(value);
                        return value.max * 2;
                    },
                    name: 'gls_qty',
                    axisLabel: {
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                },
                {
                    type: 'value',
                    name: 'Ratio',
                    show: 0,
                    axisLabel: {
                        formatter: '{value}%',
                        textStyle: {
                            color: '#00CED1'
                        }
                    },
                    min: '50',
                    splitLine: {
                        show: false
                    },
                    axisLine: {
                        lineStyle: {
                            color: '#0087ED',
                            width: 1,
                        }
                    }
                }
            ],
            series: [
                {
                    name: 'ACT',
                    type: 'bar',
                    smooth: true,
                    barWidth: 20,
                    color: '#0000CD',
                    itemStyle: { normal: { areaStyle: { type: 'default' }, label: {
                                show: true,
                                position: 'inside',
                                formatter: '{c}K',
                                textStyle: {
                                    // fontWeight: 'bolder',
                                    fontSize: '12',
                                    fontFamily: 'å¾®è½¯éé»',
                                    show: true,
                                    color: 'white'
                                }
                            } } },
                    data: this.setEchartsData(data, 'ACT')
                },
                {
                    name: 'PLAN',
                    type: 'line',
                    color: 'Lime',
                    // barGap: '-100%',
                    silent: false,
                    z: 10,
                    symbolSize: ['20', '2'],
                    symbol: ['arrow', 'arrow'],
                    lineStyle: {
                        normal: {
                            color: 'green',
                            width: 0,
                            type: 'dashed'
                        }
                    },
                    itemStyle: {
                        normal: {
                            borderWidth: 0,
                            borderColor: 'DeepSkyBlue',
                            color: 'red'
                            // color: 'rgba(0,0,0, 0)'
                        }
                    },
                    data: this.setEchartsData(data, 'PLAN')
                },
                {
                    name: 'Ratio',
                    type: 'line',
                    smooth: false,
                    color: '#7FFFD4',
                    yAxisIndex: 1,
                    itemStyle: { normal: { label: {
                                show: true,
                                position: 'top',
                                formatter: function (params) {
                                    // console.log(params);
                                    if (params.value < 100) {
                                        return '{a|' + params.value + '%' + '}';
                                    }
                                    else {
                                        return '{b|' + params.value + '%' + '}';
                                    }
                                },
                                rich: {
                                    a: { color: 'OrangeRed' },
                                    b: { color: 'white' }
                                },
                                textStyle: {
                                    // fontWeight: 'bolder',
                                    fontSize: '12',
                                    fontFamily: 'å¾®è½¯éé»',
                                    show: true,
                                    color: 'white'
                                }
                            } } },
                    data: this.setEchartsData(data, 'RATIO')
                }
            ]
        };
    };
    // åç»æä¸­çæä¸ä¸ªæ°,item1è¡¨ç¤ºæé¡¹çå¼ï¼å¦FACTORYä¸çarrayï¼item1=array,item2æ¯æä¸æ°æ®çè¡¨å¤´åï¼å¦in_qty,item=in_qty
    B8DashboardComponent.prototype.getOneData = function (obj, item1, item2) {
        var dataArray;
        for (var value in obj) {
            if (obj.hasOwnProperty(value)) {
                var axisdata = obj[value];
                for (var b in axisdata) {
                    if (axisdata[b] === item1) {
                        dataArray = axisdata[item2];
                        // console.log(dataArray);
                    }
                }
            }
        }
        return dataArray;
    };
    B8DashboardComponent.prototype.getPmCumYield = function () {
        var _this = this;
        var url = '/assets/demo/data/B8/PmCumYield.json';
        this.apiService.testGet(url).subscribe(function (res) {
            _this.PmCumYield = res;
            _this.Cum_Yiled = _this.PmCumYield[0].CUM_YIELD + '%';
            // console.log(this.PmCumYield);
            // console.log(this.Cum_Yiled);
            // console.log('1');
        }, function (error) { console.log(error); });
    };
    B8DashboardComponent.prototype.getPmFactoryYield = function () {
        var _this = this;
        var url = '/assets/demo/data/B8/PmFactoryYield.json';
        this.apiService.testGet(url).subscribe(function (res) {
            _this.PmFactoryYield = res;
            _this.SetPmFactoryYieldData(_this.PmFactoryYield);
            // console.log(this.PmFactoryYield);
        }, function (error) { console.log(error); });
    };
    B8DashboardComponent.prototype.SetPmFactoryYieldData = function (data) {
        //    console.log(data);
        this.PmFactoryYieldOption = {
            tooltip: {
                formatter: "{a}ï¼{c}%"
            },
            grid: { y: 25 },
            //    backgroundColor: "rgba(200,250,250,0.5)",
            series: [
                {
                    name: 'CUM Yield',
                    type: 'gauge',
                    center: ['50%', '52%'],
                    radius: '46%',
                    min: 95,
                    max: 100,
                    startAngle: 240,
                    endAngle: -60,
                    splitNumber: 5,
                    animation: 0,
                    pointer: {
                        show: true,
                        length: '95%',
                        width: 4
                    },
                    itemStyle: {
                        normal: {
                            color: '#109A39',
                            shadowColor: 'rgba(0, 0, 0, 0.5)',
                            shadowBlur: 10,
                            shadowOffsetX: 2,
                            shadowOffsetY: 2
                        }
                    },
                    axisLine: {
                        lineStyle: {
                            color: [
                                [(this.getOneData_rep(data, 'MONTH', 'CUM', 'YIELD') - 95) / 5,
                                    this.setgaugecolor(data, 'MONTH', 'CUM', 'YIELD')],
                                [1, 'DarkGray']
                            ],
                            width: 15
                        }
                    },
                    splitLine: {
                        length: 15,
                        lineStyle: {
                            color: 'white',
                            width: 2
                        }
                    },
                    axisTick: {
                        show: 1,
                        splitNumber: 5,
                        length: 5,
                        lineStyle: {
                            color: ['#fff']
                        }
                    },
                    axisLabel: {
                        show: 1,
                        color: 'white',
                        distance: 1,
                        textStyle: {
                            fontWeight: 'bold',
                            fontSize: 10
                        },
                        formatter: function (t) {
                            switch (t + '') {
                                case '95':
                                    return '95%';
                                case '96':
                                    return '96%';
                                case '97':
                                    return '97%';
                                case '98':
                                    return '98%';
                                case '99':
                                    return '99%';
                                case '100':
                                    return '100%';
                            }
                        }
                    },
                    title: {
                        show: true,
                        offsetCenter: ['0', '155%'],
                        textStyle: {
                            color: 'auto',
                            fontSize: 16,
                            fontWeight: 'bold',
                            fontFamily: 'Arial'
                        }
                    },
                    detail: {
                        show: 1,
                        formatter: function (params) {
                            return params + '%';
                        },
                        //  color: 'blue',
                        borderColor: 'DarkGreen',
                        borderWidth: 2,
                        backgroundColor: 'DarkGray',
                        padding: 1,
                        fontWeight: 'bold',
                        textStyle: {
                            fontSize: 16,
                            color: 'auto'
                        },
                        offsetCenter: ['0', '120%']
                    },
                    data: [{ name: 'Cum Yield', value: this.getOneData_rep(data, 'MONTH', 'CUM', 'YIELD') }]
                },
                {
                    name: 'æä»½',
                    type: 'gauge',
                    center: ['50%', '52%'],
                    radius: '59%',
                    min: 95,
                    max: 100,
                    startAngle: 240,
                    endAngle: -60,
                    splitNumber: 5,
                    animation: 0,
                    pointer: {
                        show: 0,
                        length: '90%',
                        width: 1
                    },
                    itemStyle: {
                        normal: {
                            color: '#00b0b0',
                            shadowColor: 'rgba(0, 0, 0, 0.5)',
                            shadowBlur: 10,
                            shadowOffsetX: 2,
                            shadowOffsetY: 2
                        }
                    },
                    axisLine: {
                        lineStyle: {
                            color: [
                                [(this.getOneData_rep(data, 'MONTH', 'MODULE', 'YIELD') - 95) / 5,
                                    this.setgaugecolor(data, 'MONTH', 'MODULE', 'YIELD')],
                                [1, 'DarkGray']
                            ],
                            width: 15
                        }
                    },
                    splitLine: {
                        show: 0,
                        length: 6,
                        lineStyle: {
                            width: 1
                        }
                    },
                    axisTick: {
                        show: 0
                    },
                    axisLabel: {
                        show: 0,
                        distance: 1,
                        textStyle: {
                            color: '#0000ff',
                            fontFamily: 'å®ä½'
                        },
                        formatter: function (t) {
                            switch (t + '') {
                                case '0':
                                    return '0%';
                                case '20':
                                    return '20%';
                                case '40':
                                    return '40%';
                                case '60':
                                    return '60%';
                                case '80':
                                    return '80%';
                                case '100':
                                    return '100%';
                            }
                        }
                    },
                    title: {
                        show: true,
                        offsetCenter: ['-12', '-93%'],
                        textStyle: {
                            color: 'blue',
                            fontSize: 12,
                            fontWeight: 'bold',
                            fontFamily: 'Arial'
                        }
                    },
                    detail: {
                        show: 1,
                        formatter: function (params) {
                            return params + '%';
                        },
                        color: 'blue',
                        textStyle: {
                            fontWeight: 'bold',
                            fontSize: 12
                        },
                        offsetCenter: ['15', '-93%']
                    },
                    data: [{ name: 'M:', value: this.getOneData_rep(data, 'MONTH', 'MODULE', 'YIELD') }]
                },
                {
                    name: 'æä»½',
                    type: 'gauge',
                    center: ['50%', '52%'],
                    radius: '72%',
                    min: 95,
                    max: 100,
                    startAngle: 240,
                    endAngle: -60,
                    splitNumber: 5,
                    animation: 0,
                    pointer: {
                        show: 0,
                        length: '90%',
                        width: 1
                    },
                    itemStyle: {
                        normal: {
                            color: '#00b0b0',
                            shadowColor: 'rgba(0, 0, 0, 0.5)',
                            shadowBlur: 10,
                            shadowOffsetX: 2,
                            shadowOffsetY: 2
                        }
                    },
                    axisLine: {
                        lineStyle: {
                            color: [
                                [(this.getOneData_rep(data, 'MONTH', 'CF', 'YIELD') - 95) / 5,
                                    this.setgaugecolor(data, 'MONTH', 'CF', 'YIELD')],
                                [1, 'DarkGray']
                            ],
                            width: 15
                        }
                    },
                    splitLine: {
                        show: 0,
                        length: 6,
                        lineStyle: {
                            width: 1
                        }
                    },
                    axisTick: {
                        show: 0
                    },
                    axisLabel: {
                        show: 0,
                        distance: 1,
                        textStyle: {
                            color: '#0000ff',
                            fontFamily: 'å®ä½'
                        },
                        formatter: function (t) {
                            switch (t + '') {
                                case '0':
                                    return '0%';
                                case '20':
                                    return '20%';
                                case '40':
                                    return '40%';
                                case '60':
                                    return '60%';
                                case '80':
                                    return '80%';
                                case '100':
                                    return '100%';
                            }
                        }
                    },
                    title: {
                        show: true,
                        offsetCenter: ['-12', '-92%'],
                        textStyle: {
                            color: 'blue',
                            fontSize: 12,
                            fontWeight: 'bold',
                            fontFamily: 'Arial'
                        }
                    },
                    detail: {
                        show: 1,
                        formatter: function (params) {
                            return params + '%';
                        },
                        color: 'blue',
                        fontWeight: 'bold',
                        textStyle: {
                            fontSize: 12
                        },
                        offsetCenter: ['17', '-92%']
                    },
                    data: [{
                            name: 'Cf:',
                            value: this.getOneData_rep(data, 'MONTH', 'CF', 'YIELD')
                        }]
                },
                {
                    name: 'ææ',
                    type: 'gauge',
                    center: ['50%', '52%'],
                    radius: '85%',
                    min: 95,
                    max: 100,
                    startAngle: 240,
                    endAngle: -60,
                    splitNumber: 5,
                    animation: 0,
                    pointer: {
                        show: 0,
                        length: '80%',
                        width: 3
                    },
                    itemStyle: {
                        normal: {
                            color: '#00b0b0',
                            shadowColor: 'rgba(0, 0, 0, 0.5)',
                            shadowBlur: 10,
                            shadowOffsetX: 2,
                            shadowOffsetY: 2
                        }
                    },
                    axisLine: {
                        lineStyle: {
                            color: [
                                [(this.getOneData_rep(data, 'MONTH', 'CELL', 'YIELD') - 95) / 5,
                                    this.setgaugecolor(data, 'MONTH', 'CELL', 'YIELD')],
                                [1, 'DarkGray']
                            ],
                            width: 15
                        }
                    },
                    splitLine: {
                        show: 0,
                        length: 18,
                        lineStyle: {
                            width: 1
                        }
                    },
                    axisTick: {
                        show: 0
                    },
                    axisLabel: {
                        show: 0,
                        distance: -15,
                        textStyle: {
                            color: '#ffffff'
                        },
                        formatter: function (t) {
                            switch (t + '') {
                                case '0':
                                    return '0%';
                                case '20':
                                    return '20%';
                                case '40':
                                    return '40%';
                                case '60':
                                    return '60%';
                                case '80':
                                    return '80%';
                                case '100':
                                    return '100%';
                            }
                        }
                    },
                    title: {
                        show: true,
                        offsetCenter: ['-17', '-95%'],
                        textStyle: {
                            color: 'blue',
                            fontSize: 12,
                            fontWeight: 'bold',
                            fontFamily: 'Arial'
                        }
                    },
                    detail: {
                        show: 1,
                        formatter: function (params) {
                            return params + '%';
                        },
                        color: 'blue',
                        textStyle: {
                            fontWeight: 'bold',
                            fontSize: 12
                        },
                        offsetCenter: ['15', '-95%']
                    },
                    data: [{
                            name: 'Ce:',
                            value: this.getOneData_rep(data, 'MONTH', 'CELL', 'YIELD')
                        }]
                },
                {
                    name: 'å°æ¶',
                    type: 'gauge',
                    // radius: ['50%', '70%'],
                    center: ['50%', '52%'],
                    radius: '98%',
                    min: 95,
                    max: 100,
                    startAngle: 240,
                    endAngle: -60,
                    // 60 * 95 + 240 - 60 * this.getOneData_rep(this.PmFactoryYield, 'MONTH', 'ARRAY', 'YIELD'),
                    splitNumber: 5,
                    animation: 0,
                    pointer: {
                        show: 0,
                        length: '100%',
                        width: 1
                    },
                    itemStyle: {
                        normal: {
                            color: '#00b0b0',
                            shadowColor: 'rgba(0, 0, 0, 0.5)',
                            shadowBlur: 10,
                            shadowOffsetX: 2,
                            shadowOffsetY: 2
                        },
                        emphasis: {
                            shadowBlur: 200,
                            shadowColor: 'rgba(0, 0, 0, 0.5)'
                        }
                    },
                    axisLine: {
                        lineStyle: {
                            color: [
                                [(this.getOneData_rep(data, 'MONTH', 'ARRAY', 'YIELD') - 95) / 5,
                                    this.setgaugecolor(data, 'MONTH', 'ARRAY', 'YIELD')],
                                [1, 'DarkGray']
                            ],
                            width: 15
                        }
                    },
                    splitLine: {
                        show: 0,
                        length: 6,
                        lineStyle: {
                            width: 1
                        }
                    },
                    axisTick: {
                        show: 0,
                        splitNumber: 5,
                        length: 5,
                        lineStyle: {
                            color: ['#ffffff']
                        }
                    },
                    axisLabel: {
                        show: 0,
                        distance: 2,
                        textStyle: {
                            color: '#0000ff',
                            fontFamily: 'å®ä½'
                        },
                        formatter: function (t) {
                            switch (t + '') {
                                case '0':
                                    return '0%';
                                case '20':
                                    return '20%';
                                case '40':
                                    return '40%';
                                case '60':
                                    return '60%';
                                case '90':
                                    return '80%';
                                case '100':
                                    return '100%';
                            }
                        }
                    },
                    title: {
                        show: true,
                        offsetCenter: ['-12', '-95%'],
                        textStyle: {
                            color: 'blue',
                            fontSize: 12,
                            fontWeight: 'bold',
                            fontFamily: 'Arial'
                        }
                    },
                    detail: {
                        show: 1,
                        formatter: function (params) {
                            return params + '%';
                        },
                        color: 'blue',
                        textStyle: {
                            fontWeight: 'bold',
                            fontSize: 12
                        },
                        offsetCenter: ['17', '-95%']
                    },
                    data: [{
                            name: 'A:',
                            value: this.getOneData_rep(data, 'MONTH', 'ARRAY', 'YIELD')
                        }
                    ]
                }
            ]
        };
    };
    // åç»æä¸­æä¸¤åç¬¦åæ¡ä»¶çç¬¬ä¸åçå¼,item1è¡¨ç¤ºæé¡¹çå¼ï¼å¦item1=Monthï¼item2=array,item3æ¯æä¸æ°æ®çè¡¨å¤´åï¼å¦in_qty,item=in_qty
    B8DashboardComponent.prototype.getOneData_rep = function (obj, item1, item2, item3) {
        var dataArray;
        for (var value in obj) {
            if (obj.hasOwnProperty(value)) {
                var axisdata = obj[value];
                for (var b in axisdata) {
                    if (axisdata[item1] === this.DateToString() && axisdata[b] === item2) {
                        dataArray = axisdata[item3];
                        console.log(dataArray);
                    }
                }
            }
        }
        return dataArray;
    };
    // è·åå½åæ¥æçæä»½ï¼01 02 03.ãã
    B8DashboardComponent.prototype.DateToString = function () {
        var dateString;
        var DateTo = new Date();
        dateString = String(((DateTo.getMonth() + 1) < 10 ?
            '0' + (DateTo.getMonth() + 1) : (DateTo.getMonth() + 1)));
        return dateString;
    };
    B8DashboardComponent.prototype.setgaugecolor = function (obj, item1, item2, item3) {
        var gaugecolor;
        if (this.getOneData_rep(obj, item1, item2, item3) >= this.getOneData_Prerep(obj, item1, item2, item3)) {
            gaugecolor = ['DarkBlue'];
        }
        else {
            gaugecolor = '#8B0000';
        }
        return gaugecolor;
    };
    // åç»æä¸­æä¸¤åç¬¦åæ¡ä»¶çç¬¬ä¸åçå¼,item1è¡¨ç¤ºæé¡¹çå¼ï¼å¦item1=Monthï¼item2=array,item3æ¯æä¸æ°æ®çè¡¨å¤´åï¼å¦in_qty,item=in_qty
    B8DashboardComponent.prototype.getOneData_Prerep = function (obj, item1, item2, item3) {
        var dataArray;
        for (var value in obj) {
            if (obj.hasOwnProperty(value)) {
                var axisdata = obj[value];
                for (var b in axisdata) {
                    if (axisdata[item1] === this.PreDateToString() && axisdata[b] === item2) {
                        dataArray = axisdata[item3];
                        //   console.log(dataArray);
                    }
                }
            }
        }
        //  console.log(dataArray);
        return dataArray;
    };
    B8DashboardComponent.prototype.PreDateToString = function () {
        var dateString;
        var DateTo = new Date();
        dateString = String((DateTo.getMonth()) < 10 ?
            '0' + (DateTo.getMonth()) : (DateTo.getMonth()));
        if (DateTo.getMonth() === 0) {
            dateString = '12';
        }
        else if (DateTo.getMonth() > 0 && DateTo.getMonth() < 10) {
            dateString = String('0' + DateTo.getMonth());
        }
        else {
            DateTo.getMonth();
        }
        return dateString;
    };
    B8DashboardComponent.prototype.setLegend = function (obj, item1, item2) {
        var legend = new Array();
        var item1_data;
        item1_data = this.setEchartsData_multi_x(obj, item1);
        for (var _i = 0, item1_data_1 = item1_data; _i < item1_data_1.length; _i++) {
            var n = item1_data_1[_i];
            legend.push(n);
        }
        legend.push(item2);
        return legend;
    };
    // å½y-axisä¸ªæ°ä¸åºå®æ¶çxè½´åå¼
    B8DashboardComponent.prototype.setEchartsData_multi_x = function (obj, item) {
        var dataArray = new Array();
        for (var value in obj) {
            if (obj.hasOwnProperty(value)) {
                var axisdata = obj[value];
                for (var b in axisdata) {
                    if (b === item) {
                        var EchartsData = axisdata[b];
                        if (dataArray.length === 0) {
                            dataArray.push(EchartsData);
                        }
                        else if (dataArray.indexOf(EchartsData) === -1) {
                            dataArray.push(EchartsData);
                        }
                    }
                }
            }
        }
        //    console.log(dataArray);
        return dataArray;
    };
    B8DashboardComponent.prototype.setPmCapaMonthWeekSeries = function (obj, item1, item2, item3, item4) {
        var allSeries = new Array();
        var dataArray = new Array();
        var p_data = new Array();
        var x_data = new Array();
        dataArray = this.setEchartsData_Y(obj, item1, item2, item3);
        p_data = this.setEchartsData_multi_x(obj, item2);
        x_data = this.setEchartsData_multi_x(obj, item1);
        for (var i = 0; i < p_data.length; i++) {
            var pp_data = new Array();
            for (var j = 0; j < x_data.length; j++) {
                pp_data.push(dataArray[j]);
            }
            for (var j = 0; j < x_data.length; j++) {
                dataArray.shift();
            }
            allSeries.push({ type: 'bar',
                barWidth: 10,
                stack: p_data[0],
                color: function (params) {
                    //  console.log(params);
                    if (params.seriesName === 'RUN') {
                        return 'green';
                    }
                    if (params.seriesName === 'IDLE') {
                        return 'yellow';
                    }
                    if (params.seriesName === 'BM') {
                        return 'red';
                    }
                    if (params.seriesName === 'PM') {
                        return 'blue';
                    }
                    else {
                        return 'purple';
                    }
                },
                itemStyle: { normal: { areaStyle: { type: 'default' }, label: {
                            show: false,
                            position: 'inside',
                            formatter: '{c}',
                            textStyle: {
                                // fontWeight: 'bolder',
                                fontSize: '12',
                                fontFamily: 'å¾®è½¯éé»',
                                show: true,
                                color: 'white'
                            }
                        } } },
                name: p_data[i],
                data: pp_data
            });
            // console.log(pp_data);
        }
        allSeries.push({
            name: item4,
            type: 'line',
            smooth: true,
            yAxisIndex: 1,
            color: '#7FFFD4',
            itemStyle: { normal: { label: {
                        show: true,
                        position: 'top',
                        formatter: '{c}',
                        textStyle: {
                            // fontWeight: 'bolder',
                            fontSize: '12',
                            fontFamily: 'å¾®è½¯éé»',
                            show: true,
                            color: 'white'
                        }
                    } } },
            data: this.setEchartsData_multi_line(obj, item1, item4)
        });
        // console.log(allSeries);
        return allSeries;
    };
    B8DashboardComponent.prototype.setEchartsData_multi_line = function (obj, item1, item2) {
        var dataArray = new Array();
        var data_y = new Array();
        for (var value in obj) {
            if (obj.hasOwnProperty(value)) {
                var axisdata = obj[value];
                for (var b in axisdata) {
                    if (b === item1) {
                        var EchartsData = axisdata[b];
                        if (dataArray.length === 0) {
                            dataArray.push(EchartsData);
                            data_y.push(axisdata[item2]);
                        }
                        else if (dataArray.indexOf(EchartsData) === -1) {
                            dataArray.push(EchartsData);
                            data_y.push(axisdata[item2]);
                        }
                    }
                }
            }
        }
        //  console.log(data_y);
        return data_y;
    };
    B8DashboardComponent.prototype.setEchartsData_Y = function (obj, item1, item2, item3) {
        var x_data1 = new Array();
        var x_data2 = new Array();
        var y_data = new Array();
        var dataArray = new Array();
        x_data1 = this.setEchartsData_multi_x(obj, item1);
        x_data2 = this.setEchartsData(obj, item2);
        y_data = this.setEchartsData(obj, item3);
        for (var _i = 0, x_data2_1 = x_data2; _i < x_data2_1.length; _i++) {
            var x2 = x_data2_1[_i];
            for (var _a = 0, x_data1_1 = x_data1; _a < x_data1_1.length; _a++) {
                var x1 = x_data1_1[_a];
                var i = 0;
                for (var _b = 0, obj_3 = obj; _b < obj_3.length; _b++) {
                    var value = obj_3[_b];
                    if (value[item1] === x1 && value[item2] === x2) {
                        dataArray.push(value[item3]);
                        i = 1;
                        break;
                    }
                }
                if (i === 0) {
                    dataArray.push(0);
                }
            }
        }
        //  console.log(dataArray);
        return dataArray;
    };
    B8DashboardComponent.prototype.setradarEchartsxData = function (obj, item) {
        var dataArray = new Array();
        for (var value in obj) {
            if (obj.hasOwnProperty(value)) {
                var axisdata = obj[value];
                for (var b in axisdata) {
                    if (b === item) {
                        var EchartsData = axisdata[b];
                        dataArray.push({ name: EchartsData });
                    }
                }
            }
        }
        return dataArray;
    };
    B8DashboardComponent.prototype.setPmWipMoveSeries = function (obj, item1, item2, item3, item4) {
        var allSeries = new Array();
        var dataArray = new Array();
        var p_data = new Array();
        var x_data = new Array();
        dataArray = this.setEchartsData_Y(obj, item1, item2, item3);
        p_data = this.setEchartsData_multi_x(obj, item2);
        x_data = this.setEchartsData_multi_x(obj, item1);
        for (var i = 0; i < p_data.length; i++) {
            var pp_data = new Array();
            for (var j = 0; j < x_data.length; j++) {
                pp_data.push(dataArray[j]);
            }
            for (var j = 0; j < x_data.length; j++) {
                dataArray.shift();
            }
            allSeries.push({ type: 'bar',
                stack: p_data[0],
                itemStyle: { normal: { areaStyle: { type: 'default' }, label: {
                            show: false,
                            position: 'inside',
                            formatter: '{c}',
                            textStyle: {
                                // fontWeight: 'bolder',
                                fontSize: '12',
                                fontFamily: 'å¾®è½¯éé»',
                                show: false,
                                color: 'white'
                            }
                        } } },
                name: p_data[i],
                data: pp_data
            });
            // console.log(pp_data);
        }
        allSeries.push({
            name: item4,
            type: 'line',
            smooth: true,
            yAxisIndex: 1,
            color: '#7FFFD4',
            itemStyle: { normal: { label: {
                        show: false,
                        position: 'top',
                        formatter: '{c}',
                        textStyle: {
                            // fontWeight: 'bolder',
                            fontSize: '12',
                            fontFamily: 'å¾®è½¯éé»',
                            show: true,
                            color: 'white'
                        }
                    } } },
            data: this.setEchartsData_multi_line(obj, item1, item4)
        });
        // console.log(allSeries);
        return allSeries;
    };
    B8DashboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-b8-dashboard',
            template: __webpack_require__("./src/app/outstandingcase/pmkanban/b8-dashboard/b8-dashboard.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/pmkanban/b8-dashboard/b8-dashboard.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__["a" /* ApiService */]])
    ], B8DashboardComponent);
    return B8DashboardComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/module-watchboard/mod-wip/mod-wip.component.css":
/***/ (function(module, exports) {

module.exports = ".content{\r\n    width:100%;\r\n    height:100%ï¼\r\n}"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/module-watchboard/mod-wip/mod-wip.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"content\" echarts theme=\"edark\" [options]=\"options\" style=\"height:100%;width:100%;\"></div>"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/module-watchboard/mod-wip/mod-wip.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModWipComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common_http__ = __webpack_require__("./node_modules/@angular/common/esm5/http.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ModWipComponent = /** @class */ (function () {
    function ModWipComponent(http) {
        this.http = http;
    }
    ModWipComponent.prototype.ngOnInit = function () {
        var _this = this;
        var url = "assets/data/mod.json";
        this.http.get(url).subscribe(function (response) {
            var res = response['wip'];
            var date = new Date();
            var today = date.getDate();
            var yesterday = new Date(date.getTime() - 24 * 60 * 60 * 1000).getDate();
            _this.options = {
                title: {
                    text: 'Total WIP:' + (res['totalQty'] / 1000).toFixed(1) + 'K(1-6:' + (res['oneToSixTotal'] / 1000).toFixed(1) + 'K,7-11:'
                        + (res['sevenToElevenTotal'] / 1000).toFixed(1)
                        + 'K,12-18:' + (res['sevenToElevenTotal'] / 1000).toFixed(1) + 'K)',
                    left: 'center',
                    top: '12'
                },
                xAxis: [
                    {
                        data: res['oper'],
                        type: 'category',
                        gridIndex: 0,
                        axisLabel: {
                            interval: 0,
                            formatter: function (value) {
                                return yesterday + '   ' + today + '\n' + value;
                            }
                        },
                    }
                ],
                yAxis: {
                    type: 'value',
                    min: 0,
                    max: res['max'],
                    axisLabel: {
                        formatter: function (value) {
                            return value / 1000 + 'K';
                        }
                    }
                },
                grid: {
                    bottom: '17%',
                    top: '25%',
                    right: '2%',
                    left: '4%'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    },
                },
                series: [
                    {
                        name: '1-6(' + today + 'æ¥)',
                        type: 'bar',
                        stack: today,
                        xAxisIndex: 0,
                        color: '#7cb5ec',
                        data: res['oneToSix']
                    },
                    {
                        name: '7-11(' + today + 'æ¥)',
                        type: 'bar',
                        stack: today,
                        xAxisIndex: 0,
                        color: '#90ed7d',
                        data: res['sevenToEleven']
                    }, {
                        name: '12-18(' + today + 'æ¥)',
                        type: 'bar',
                        stack: today,
                        xAxisIndex: 0,
                        color: '#f7a35c',
                        data: res['twelveToEighteen']
                    }, {
                        name: 'total(' + today + 'æ¥)',
                        type: 'bar',
                        stack: today,
                        color: 'rgba(128, 128, 128, 0)',
                        xAxisIndex: 0,
                        label: {
                            show: true,
                            borderColor: '#fff',
                            position: 'insideBottom',
                            fontSize: 9,
                            formatter: function (params) {
                                return 'Total:\n' + (params.value / 1000).toFixed(2) + 'K';
                            }
                        },
                        data: res['totalLine']
                    },
                    {
                        name: '1-6(' + yesterday + 'æ¥)',
                        type: 'bar',
                        stack: yesterday,
                        xAxisIndex: 0,
                        color: '#7cb5ec',
                        data: res['oneToSixBefore']
                    },
                    {
                        name: '7-11(' + yesterday + 'æ¥)',
                        type: 'bar',
                        stack: yesterday,
                        xAxisIndex: 0,
                        color: '#90ed7d',
                        data: res['sevenToElevenBefore']
                    }, {
                        name: '12-18(' + yesterday + 'æ¥)',
                        type: 'bar',
                        stack: yesterday,
                        xAxisIndex: 0,
                        color: '#f7a35c',
                        data: res['twelveToEighteenBefore']
                    },
                    {
                        name: 'total(' + yesterday + 'æ¥)',
                        type: 'bar',
                        stack: yesterday,
                        xAxisIndex: 0,
                        color: 'rgba(128, 128, 128, 0)',
                        label: {
                            show: true,
                            borderColor: '#fff',
                            position: 'insideBottom',
                            fontSize: 9,
                            formatter: function (params) {
                                return 'Total:\n' + (params.value / 1000).toFixed(2) + 'K';
                            }
                        },
                        data: res['totalLineBefore']
                    }
                ]
            };
        });
    };
    ModWipComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-mod-wip',
            template: __webpack_require__("./src/app/outstandingcase/pmkanban/module-watchboard/mod-wip/mod-wip.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/pmkanban/module-watchboard/mod-wip/mod-wip.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_common_http__["b" /* HttpClient */]])
    ], ModWipComponent);
    return ModWipComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/module-watchboard/module-watchboard.component.css":
/***/ (function(module, exports) {

module.exports = ".pageContent{\r\n    height:100vh;\r\n    background-image: url(/assets/picture/watchboard/back.jpg);\r\n    background-size:100% 100%;\r\n}\r\n\r\n#title{\r\n    height:7vh;\r\n}\r\n\r\n#title > div{\r\n    height:100%;\r\n}\r\n\r\n#title > .left{\r\n    width:40%;\r\n    background-image:url(/assets/picture/watchboard/left.png);\r\n    background-size:100% 100%;\r\n    float:left;\r\n}\r\n\r\n#title > .middle{\r\n    width:20%;\r\n    text-align: center;\r\n    float:left;\r\n    margin:0;\r\n    padding:0;\r\n}\r\n\r\n#title p{\r\n    font-size: 2vw;\r\n    color:#fff;\r\n    margin:0;\r\n    padding:3% 0 0 0;\r\n}\r\n\r\n#title > .right{\r\n    width:40%;\r\n    background-image:url(/assets/picture/watchboard/right.png);\r\n    background-size:100% 100%;\r\n    float:left;\r\n}\r\n\r\n#top{\r\n    height:31vh;\r\n}\r\n\r\n#bottom{\r\n    height:62vh;\r\n    padding:0;\r\n}\r\n\r\n#top>*{\r\n    height:100%;\r\n}\r\n\r\n#bottom>*{\r\n    height:100%;\r\n}\r\n\r\n#chartTop{\r\n    width:100%;\r\n    height:49%;\r\n    background-image:url(/assets/picture/watchboard/border.png);\r\n    background-size:100% 100%;\r\n    margin-bottom: 1%;\r\n}\r\n\r\n#chartBottom{\r\n    width:100%;\r\n    height:49%;\r\n    background-image:url(/assets/picture/watchboard/border.png);\r\n    background-size:100% 100%;\r\n}\r\n\r\n:host ::ng-deep #chartTop .ui-carousel,:host ::ng-deep #chartTop .ui-widget{\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgba(0,0,0,0);\r\n    border:none;\r\n}\r\n\r\n:host ::ng-deep #chartTop .ui-carousel-header,:host ::ng-deep #chartTop .ui-widget-header{\r\n    height:15%;\r\n    width:100%;\r\n    background-color:rgba(0,0,0,0);\r\n    border:none;\r\n}\r\n\r\n:host ::ng-deep #chartTop .ui-carousel-viewport{\r\n    height:85%;\r\n    width:100%;\r\n    background-color:rgba(0,0,0,0);\r\n    border:none;\r\n}\r\n\r\n:host ::ng-deep #chartTop .ui-carousel-items{\r\n    height:100%;\r\n    border:none;\r\n}\r\n\r\n:host ::ng-deep #chartTop .ui-carousel-items>*{\r\n    height:100%;\r\n    float:left;\r\n    background-color:rgba(0,0,0,0);\r\n    border:none;\r\n}\r\n\r\n#wip *{\r\n    height:100%;\r\n    width:100%;\r\n    border:none;\r\n}"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/module-watchboard/module-watchboard.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"ui-g\" class=\"pageContent\">\r\n    <div id=\"title\">\r\n        <div class=\"left\"></div>\r\n        <div class=\"middle\">\r\n            <p>B3 Moduleååçæ¿</p>\r\n        </div>\r\n        <div class=\"right\"></div>\r\n    </div>\r\n    <div class=\"ui-g-12\" id=\"top\">\r\n        <div id=\"wip\" style=\"background-image:url(/assets/picture/watchboard/border.png);background-size:100% 100%;width:100%;height:100%;\">\r\n            <app-mod-wip style=\"height:100%;width:100%;\"></app-mod-wip>\r\n        </div>\r\n    </div>\r\n    <div class=\"ui-g-12\" id=\"bottom\">\r\n        <div class=\"ui-g-6\" id=\"left\">\r\n            <app-pol-machine-status></app-pol-machine-status>\r\n        </div>\r\n        <div class=\"ui-g-6\" id=\"right\">\r\n            <div id=\"chartTop\" class=\"ui-g-12\">\r\n                <div style=\"height:100%;width:100%;\">\r\n                    <p-carousel [value]=\"options\" [numVisible]=1 [autoplayInterval]=5000 [circular]=\"circular\">\r\n                        <ng-template let-item pTemplate=\"item\">\r\n                            <div echarts theme=\"edark\" [options]=item style=\"height:100%;width:100%;\"></div>\r\n                        </ng-template>\r\n                    </p-carousel>\r\n                </div>\r\n            </div>\r\n            <div id=\"chartBottom\" class=\"ui-g-12\">\r\n                <div echarts theme=\"edark\" [options]=inOutOption style=\"height:100%;width:100%;\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/module-watchboard/module-watchboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModuleWatchboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_app_common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common_http__ = __webpack_require__("./node_modules/@angular/common/esm5/http.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ModuleWatchboardComponent = /** @class */ (function () {
    function ModuleWatchboardComponent(apiService, http) {
        this.apiService = apiService;
        this.http = http;
        this.options = new Array();
    }
    ModuleWatchboardComponent.prototype.ngOnInit = function () {
        this.setFpyOption();
        this.setInOutOption();
    };
    ModuleWatchboardComponent.prototype.setFpyOption = function () {
        var _this = this;
        var url = "assets/data/mod.json";
        this.http.get(url).subscribe(function (response) {
            var res = response['fpy'];
            _this.fpyOption = {
                title: {
                    text: 'FPY APPè¶å¿å¾',
                    left: 'center'
                },
                xAxis: {
                    type: 'category',
                    data: res['timeAxis'],
                    axisLabel: {
                        interval: 0
                    },
                },
                yAxis: {
                    type: 'value',
                    min: 0,
                    axisLabel: {
                        formatter: '{value}'
                    }
                },
                grid: {
                    bottom: 25,
                    right: 30,
                    top: 30,
                    left: 35
                },
                tooltip: {
                    trigger: 'axis',
                    confine: true,
                    axisPointer: {
                        type: 'cross',
                        label: {
                            backgroundColor: '#6a7985'
                        }
                    },
                    textStyle: {
                        fontSize: 7
                    }
                },
                series: [
                    {
                        type: 'bar',
                        name: 'èæ¿åå½¢',
                        stack: 'fpy-app',
                        data: res['AB29']
                    },
                    {
                        type: 'bar',
                        name: 'ç»è£ä¸è¯',
                        stack: 'fpy-app',
                        data: res['AB49']
                    },
                    {
                        type: 'bar',
                        name: 'éç®ä¸è¯',
                        stack: 'fpy-app',
                        data: res['AE20']
                    },
                    {
                        type: 'bar',
                        name: 'PCB å¡åä¸è¯',
                        stack: 'fpy-app',
                        data: res['AB41']
                    },
                    {
                        type: 'bar',
                        name: 'PCBåä»¶è±è½',
                        stack: 'fpy-app',
                        data: res['AB44']
                    },
                    {
                        type: 'bar',
                        name: 'é¢ç´çä¸è¯',
                        stack: 'fpy-app',
                        data: res['AB50']
                    },
                    {
                        type: 'bar',
                        name: 'FPCææ',
                        stack: 'fpy-app',
                        data: res['AF04']
                    },
                    {
                        type: 'bar',
                        name: 'å¹ç¹',
                        stack: 'fpy-app',
                        data: res['AC81']
                    },
                    {
                        type: 'bar',
                        name: 'å¸ç¹',
                        stack: 'fpy-app',
                        data: res['AC82']
                    },
                    {
                        type: 'bar',
                        name: 'POL åä¼¤',
                        stack: 'fpy-app',
                        data: res['PP02']
                    },
                    {
                        type: 'line',
                        name: 'æ»å',
                        stack: 'sum',
                        label: {
                            show: true,
                            borderColor: '#fff',
                            position: 'insideBottom',
                            fontSize: 9,
                            formatter: function (params) {
                                return 'Total:\n' + params.value;
                            }
                        },
                        data: res['sum']
                    }
                ]
            };
            _this.options = _this.options.concat([_this.fpyOption]);
        });
    };
    ModuleWatchboardComponent.prototype.setInOutOption = function () {
        var _this = this;
        var url = "assets/data/mod.json";
        this.http.get(url).subscribe(function (res) {
            var response = res['inputOutput'];
            _this.inOutOption = {
                tooltip: {
                    formatter: "{a} <br/>{c}"
                },
                series: [
                    {
                        name: 'WIP(K)',
                        type: 'gauge',
                        min: 0,
                        max: 500,
                        splitNumber: 10,
                        radius: '95%',
                        axisLine: {
                            lineStyle: {
                                color: [[0.09, 'lime'], [0.82, '#1e90ff'], [1, '#ff4500']],
                                width: 3,
                                shadowColor: '#fff',
                                shadowBlur: 2
                            }
                        },
                        axisLabel: {
                            textStyle: {
                                fontWeight: 'bolder',
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 2
                            }
                        },
                        axisTick: {
                            length: 10,
                            lineStyle: {
                                color: 'auto',
                                shadowColor: '#fff',
                                shadowBlur: 2
                            }
                        },
                        splitLine: {
                            length: 18,
                            lineStyle: {
                                width: 3,
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 2
                            }
                        },
                        pointer: {
                            shadowColor: '#fff',
                            shadowBlur: 5
                        },
                        title: {
                            textStyle: {
                                fontWeight: 'bolder',
                                fontSize: 10,
                                fontStyle: 'italic',
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        detail: {
                            backgroundColor: 'rgba(30,144,255,0.8)',
                            borderWidth: 1,
                            fontSize: 10,
                            borderColor: '#fff',
                            shadowColor: '#fff',
                            shadowBlur: 5,
                            formatter: function (value) {
                                return value + 'K';
                            },
                            offsetCenter: [0, '50%'],
                            textStyle: {
                                fontWeight: 'bolder',
                                color: '#fff'
                            }
                        },
                        data: [{ value: (response['wip'] / 1000).toFixed(1), name: 'Wip/K' }]
                    },
                    {
                        name: 'FPY(%)',
                        type: 'gauge',
                        center: ['27%', '55%'],
                        radius: '75%',
                        min: 0,
                        max: 100,
                        endAngle: 45,
                        splitNumber: 5,
                        axisLine: {
                            lineStyle: {
                                color: [[0.29, 'lime'], [0.86, '#1e90ff'], [1, '#ff4500']],
                                width: 2,
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        axisLabel: {
                            textStyle: {
                                fontWeight: 'bolder',
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        axisTick: {
                            length: 12,
                            lineStyle: {
                                color: 'auto',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        splitLine: {
                            length: 20,
                            lineStyle: {
                                width: 3,
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        pointer: {
                            width: 5,
                            shadowColor: '#fff',
                            shadowBlur: 5
                        },
                        title: {
                            offsetCenter: [0, '-30%'],
                            textStyle: {
                                fontWeight: 'bolder',
                                fontStyle: 'italic',
                                fontSize: 10,
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        detail: {
                            //backgroundColor: 'rgba(30,144,255,0.8)',
                            // borderWidth: 1,
                            shadowBlur: 5,
                            width: 80,
                            fontSize: 15,
                            height: 30,
                            formatter: function (value) {
                                return value + '%';
                            },
                            offsetCenter: [0, '30%'],
                            textStyle: {
                                fontWeight: 'bolder',
                                color: '#fff'
                            }
                        },
                        data: [{ value: (response['fpy'] * 100).toFixed(1), name: 'FPY' }]
                    },
                    {
                        name: 'æå¥',
                        type: 'gauge',
                        center: ['75%', '50%'],
                        radius: '80%',
                        min: 0,
                        max: 4000,
                        startAngle: 145,
                        endAngle: 30,
                        splitNumber: 2,
                        axisLine: {
                            lineStyle: {
                                color: [[0.2, 'lime'], [0.8, '#1e90ff'], [1, '#ff4500']],
                                width: 2,
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        axisTick: {
                            length: 12,
                            lineStyle: {
                                color: 'auto',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        axisLabel: {
                            textStyle: {
                                fontWeight: 'bolder',
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        splitLine: {
                            length: 15,
                            lineStyle: {
                                width: 3,
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        pointer: {
                            width: 2,
                            shadowColor: '#fff',
                            shadowBlur: 5
                        },
                        title: {
                            offsetCenter: [0, '-45%'],
                            textStyle: {
                                fontWeight: 'bolder',
                                fontStyle: 'italic',
                                fontSize: 10,
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        detail: {
                            show: true,
                            fontSize: 10,
                            formatter: function (value) {
                                return value + 'K';
                            },
                            offsetCenter: [0, '-25%'],
                            textStyle: {
                                fontWeight: 'bolder',
                                color: '#fff'
                            }
                        },
                        data: [{ value: (response['input'] / 1000).toFixed(1), name: 'æå¥' }]
                    },
                    {
                        name: 'äº§åº',
                        type: 'gauge',
                        center: ['75%', '50%'],
                        radius: '85%',
                        min: 0,
                        max: 4000,
                        startAngle: 330,
                        endAngle: 225,
                        splitNumber: 2,
                        axisLine: {
                            lineStyle: {
                                color: [[0.2, 'lime'], [0.8, '#1e90ff'], [1, '#ff4500']],
                                width: 2,
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        axisTick: {
                            length: 12,
                            lineStyle: {
                                color: 'auto',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        axisLabel: {
                            textStyle: {
                                fontWeight: 'bolder',
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            },
                        },
                        splitLine: {
                            length: 15,
                            lineStyle: {
                                width: 3,
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        pointer: {
                            width: 2,
                            shadowColor: '#fff',
                            shadowBlur: 5
                        },
                        title: {
                            offsetCenter: [0, '45%'],
                            textStyle: {
                                fontWeight: 'bolder',
                                fontStyle: 'italic',
                                fontSize: 10,
                                color: '#fff',
                                shadowColor: '#fff',
                                shadowBlur: 10
                            }
                        },
                        detail: {
                            show: true,
                            fontSize: 10,
                            formatter: function (value) {
                                return value + 'K';
                            },
                            offsetCenter: [0, '25%'],
                            textStyle: {
                                fontWeight: 'bolder',
                                color: '#fff'
                            }
                        },
                        data: [{ value: (response['output'] / 1000).toFixed(1), name: 'äº§åº' }]
                    }
                ]
            };
        });
    };
    ModuleWatchboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-module-watchboard',
            template: __webpack_require__("./src/app/outstandingcase/pmkanban/module-watchboard/module-watchboard.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/pmkanban/module-watchboard/module-watchboard.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_app_common_service_api_api_service__["a" /* ApiService */], __WEBPACK_IMPORTED_MODULE_2__angular_common_http__["b" /* HttpClient */]])
    ], ModuleWatchboardComponent);
    return ModuleWatchboardComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/module-watchboard/pol-machine-status/pol-machine-status.component.css":
/***/ (function(module, exports) {

module.exports = ".content{\r\n    width:100%;\r\n    height:100%;\r\n}\r\n\r\n:host ::ng-deep #app-pol-machine-status .ui-carousel,:host ::ng-deep #app-pol-machine-status .ui-widget{\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgba(0,0,0,0);\r\n    border:none;\r\n}\r\n\r\n:host ::ng-deep #app-pol-machine-status .ui-carousel-header,:host ::ng-deep #app-pol-machine-status .ui-widget-header{\r\n    height:10%;\r\n    width:100%;\r\n    background-color:rgba(0,0,0,0);\r\n    border:none;\r\n}\r\n\r\n:host ::ng-deep #app-pol-machine-status .ui-carousel-viewport{\r\n    height:85%;\r\n    width:100%;\r\n    background-color:rgba(0,0,0,0);\r\n    border:none;\r\n}\r\n\r\n:host ::ng-deep #app-pol-machine-status .ui-carousel-items{\r\n    height:100%;\r\n    border:none;\r\n}\r\n\r\n:host ::ng-deep #app-pol-machine-status .ui-carousel-items>*{\r\n    height:100%;\r\n    float:left;\r\n    background-color:rgba(0,0,0,0);\r\n    border:none;\r\n}\r\n\r\nh3{\r\n    margin:0;\r\n    padding:0;\r\n}\r\n\r\n.legend{\r\n    width:100%;\r\n}\r\n\r\n.state-block{\r\n    width:5%;\r\n    float:left;\r\n}\r\n\r\n.state-block-font{\r\n    width:11%;\r\n    float:left;\r\n    color:#fff\r\n}\r\n\r\n.row{\r\n    width:100%;\r\n    height:13%;\r\n    padding-top:10px;\r\n    margin-bottom:8px;\r\n}\r\n\r\n.name{\r\n    width:10%;\r\n    float:left;\r\n}\r\n\r\n.DOWN>.status{\r\n    background-color:#ff0000\r\n}\r\n\r\n.ENG>.status{\r\n    background-color:#ff9900\r\n}\r\n\r\n.IDLE>.status{\r\n    background-color:#c2a9619d\r\n}\r\n\r\n.MAINT>.status{\r\n    background-color:#ffff00\r\n}\r\n\r\n.MCHG>.status{\r\n    background-color:#ee9d9da2\r\n}\r\n\r\n.RUN>.status{\r\n    background-color:#00ff00\r\n}"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/module-watchboard/pol-machine-status/pol-machine-status.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"content\" id=\"app-pol-machine-status\">\n    <div class=\"legend\" style=\"margin-top:5px\">\n        <div class=\"state-block\">\n            <div style=\"background: #ff0000 none repeat scroll 0% 0%;height: 20px;\"></div>\n        </div>\n        <div class=\"state-block-font\">\n            <div style=\"margin-bottom:5px;\">DOWN</div>\n        </div>\n\n        <div class=\"state-block\">\n            <div style=\"background: #ff9900 none repeat scroll 0% 0%;height: 20px;\"></div>\n        </div>\n        <div class=\"state-block-font\">\n            <div style=\"margin-bottom:5px;\">ENG</div>\n        </div>\n\n        <div class=\"state-block\">\n            <div style=\"background: #c2a9619d none repeat scroll 0% 0%;height: 20px;\"></div>\n        </div>\n        <div class=\"state-block-font\">\n            <div style=\"margin-bottom:5px;\">IDLE</div>\n        </div>\n\n        <div class=\"state-block\">\n            <div style=\"background: #ffff00 none repeat scroll 0% 0%;height: 20px;\"></div>\n        </div>\n        <div class=\"state-block-font\">\n            <div style=\"margin-bottom:5px;\">MAINT</div>\n        </div>\n\n        <div class=\"state-block\">\n            <div style=\"background: #ee9d9da2 none repeat scroll 0% 0%;height: 20px;\"></div>\n        </div>\n        <div class=\"state-block-font\">\n            <div style=\"margin-bottom:5px;\">MCHG</div>\n        </div>\n\n        <div class=\"state-block\">\n            <div style=\"background: #00ff00 none repeat scroll 0% 0%;height: 20px;\"></div>\n        </div>\n        <div class=\"state-block-font\">\n            <div style=\"margin-bottom:5px;\">RUN</div>\n        </div>\n    </div>\n    <p-carousel [value]=\"datas\" [numVisible]=1 [autoplayInterval]=6000 [circular]=\"circular\" [firstVisible]=1>\n        <ng-template let-linesGroup pTemplate=\"linesGroup\">\n            <h3 style=\"text-align:center;color:aliceblue;\">{{linesGroup[0]['line']}}çº¿-{{linesGroup[linesGroup.length-1]['line']}}çº¿è®¾å¤ç¶æ</h3>\n            <ng-template ngFor let-line [ngForOf]=\"linesGroup\">\n                <div class=\"row\">\n                        <div class=\"name\" style=\"color:beige;text-align: center;padding-top:8px;\">#{{line['line']}}</div>\n                        <ng-template ngFor let-machine [ngForOf]=\"line['machines']\">\n                            <div [ngClass]=\"machine['status']\" style=\"width:9%;height:100%;float:left;margin-right:2px;\">\n                                <div style=\"height:50%;width:100%;\" class=\"status\"></div>\n                                <div style=\"height:50%;width:100%;\">\n                                    <span style=\"font-size: 9px;color:beige;\">{{machine['process']}}</span>\n                                </div>\n                            </div>\n                        </ng-template>\n                </div>\n            </ng-template>\n        </ng-template>\n    </p-carousel>\n</div>"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/module-watchboard/pol-machine-status/pol-machine-status.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PolMachineStatusComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common_http__ = __webpack_require__("./node_modules/@angular/common/esm5/http.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PolMachineStatusComponent = /** @class */ (function () {
    function PolMachineStatusComponent(http) {
        this.http = http;
        this.machines = new Array();
        this.lineMachines = new Map();
        this.machinesStatus = new Map();
    }
    PolMachineStatusComponent.prototype.ngOnInit = function () {
        this.maxOrderCount = 0;
        this.datas = [];
        this.setLineMachines();
    };
    PolMachineStatusComponent.prototype.ngAfterViewInit = function () {
        this.datas = this.datas.slice();
        /* this.timer = setInterval(
          () => {
            this.datas=[];
            this.addMachineStatus();
          },60000
        ); */
    };
    PolMachineStatusComponent.prototype.ngOnDestroy = function () {
        /* clearInterval(this.timer); */
    };
    PolMachineStatusComponent.prototype.setLineMachines = function () {
        var _this = this;
        var url = "assets/data/machine.json";
        this.http.get(url).subscribe(function (res) {
            _this.getMaxProcessOrder(res['processes']);
            for (var i = 0; i < res['lines'].length; i++) {
                var machineList = new Array();
                var count = 0;
                for (var j = 0; j < res['lines'][i]['machines'].length; j++) {
                    var machineMap = new Map();
                    machineMap.set("machine", res['lines'][i]['machines'][j]['machine']);
                    machineMap.set("process", res['lines'][i]['machines'][j]['process']);
                    machineMap.set("tt", res['lines'][i]['machines'][j]['tt']);
                    machineMap.set("order", res['lines'][i]['machines'][j]['order']);
                    machineMap.set("status", '');
                    machineList.push(machineMap);
                    count++;
                }
                if (count > _this.maxOrderCount) {
                    _this.maxOrderCount = count;
                }
                _this.lineMachines.set(res['lines'][i]['name'], machineList);
                _this.style = { 'width': parseInt(90 / _this.maxOrderCount + '', 0) + '%' };
            }
            _this.getAllMachines();
        });
    };
    PolMachineStatusComponent.prototype.getMaxProcessOrder = function (processes) {
        this.maxOrder = 0;
        for (var i = 0; i < processes.length; i++) {
            if (processes[i]['order'] > this.maxOrder) {
                this.maxOrder = processes[i]['order'];
            }
        }
    };
    PolMachineStatusComponent.prototype.getAllMachines = function () {
        var _this = this;
        this.lineMachines.forEach(function (value, key) {
            for (var i = 0; i < value.length; i++) {
                _this.machines.push(value[i].get('machine'));
            }
        });
        this.addMachineStatus();
    };
    PolMachineStatusComponent.prototype.addMachineStatus = function () {
        var _this = this;
        var url = "assets/data/mod.json";
        var options = {
            params: { "machineList": this.machines }
        };
        this.http.get(url).subscribe(function (response) {
            var res = response['eqpstatus'];
            for (var i = 0; i < res.length; i++) {
                _this.machinesStatus.set(res[i]['machine'], res[i]['status']);
            }
            var pageArray = new Array();
            _this.lineMachines.forEach(function (value, key) {
                var machines = new Array();
                for (var i = 0; i < value.length; i++) {
                    value[i].set('status', _this.machinesStatus.get(value[i].get('machine')));
                    // tslint:disable-next-line:max-line-length
                    machines.push({ "machine": value[i].get('machine'), "process": value[i].get('process'), "order": value[i].get('order'), "status": value[i].get('status'), "tt": value[i].get('tt') });
                }
                pageArray.push({ "line": key, "machines": machines });
                if (pageArray.length === 6 || pageArray.length === _this.lineMachines.size) {
                    _this.datas = _this.datas.concat([pageArray]);
                    pageArray = new Array();
                }
            });
        });
    };
    PolMachineStatusComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-pol-machine-status',
            template: __webpack_require__("./src/app/outstandingcase/pmkanban/module-watchboard/pol-machine-status/pol-machine-status.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/pmkanban/module-watchboard/pol-machine-status/pol-machine-status.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_common_http__["b" /* HttpClient */]])
    ], PolMachineStatusComponent);
    return PolMachineStatusComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/tm1kanban/tm1kanban.component.css":
/***/ (function(module, exports) {

module.exports = ".mybody{\r\n    background-image: url('sky1.0bd1f5ed702638db52bc.jpg');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;\r\n}\r\n.mybody1{\r\n    background-color: RGB(1,41,77)\r\n}\r\n.box{\r\n    color:white;\r\n\t-webkit-box-shadow: 0 0 3rem rgba(100,200,255,.5) inset;\r\n\t        box-shadow: 0 0 3rem rgba(100,200,255,.5) inset;\r\n\tbackground: rgba(0,0,0,.3); \t\r\n}\r\n.box .title{\r\n\theight:5vh;\r\n\tfont-size:1.6rem;\r\n\tfont-weight:bold;\r\n\tline-height: 5vh;\r\n\tcolor: #C0FF3E;\r\n}\r\n.box .content{\r\n\tfont-size:1.5rem;\r\n\tmargin-left:2vw;\r\n}\r\n.box .number{\r\n\tfont-size:1.5rem;\r\n\tcolor: yellow;\r\n}\r\n.blink{\r\n\t-webkit-animation-timing-function:ease-in-out;\r\n\t-webkit-animation-name:breathe;\r\n\t-webkit-animation-duration:2700ms;\r\n\t-webkit-animation-iteration-count:infinite;\r\n\t-webkit-animation-direction:alternate;\r\n}\r\n@-webkit-keyframes breathe {\r\n\t0% {\r\n\topacity:.5;\r\n\r\n}\r\n100% {\r\n\topacity:.9;\r\n\r\n}\r\n}\r\n.panel{\r\n\tcolor:rgba(255,255,255,.9);\r\n\tborder: 2vh solid transparent;\r\n    background:rgba(0,0,0,.3);\r\n    -webkit-box-shadow:  0 0 5rem rgb(0,110,150);\r\n            box-shadow:  0 0 5rem rgb(0,110,150)\r\n}\r\n.panel1{\r\n\tborder: 1px solid rgba(22,78,137,1);\r\n\tbackground: rgba(0,0,0,.3);\r\n\tposition: relative;\r\n}\r\n.panel1::after{\r\n\tcontent: attr(data-corner);\r\n\tdisplay: block; position: absolute; top: 0; right: 0; \r\n\twidth: 10rem; padding: 0 1rem; overflow: hidden; text-align: right; color: rgba(255,255,255,.9);\r\n\tbackground: linear-gradient(45deg,transparent 0% , transparent 30%,  rgba(22,78,137,1) 30%,  rgba(22,78,137,1) 100%)\r\n}\r\n.circle{\r\n\tborder: 2px solid #ffffff;\r\n\twidth:80px;\r\n\theight: 80px;\r\n\tline-height: 40px;\r\n\ttext-align: center;\r\n\tpadding: 0em;\r\n\tbackground:  rgba(0,0,0,.3); \r\n\tborder-radius: 50%;\r\n}\r\n.myhr{\r\n\t-webkit-box-shadow:  0 0 5rem rgb(0,110,150);\r\n\t        box-shadow:  0 0 5rem rgb(0,110,150);\r\n\tbackground-color:#00b0f0;\r\n\tmargin-top: 1vh;\r\n\tmargin-bottom: 1vh;\r\n\tborder:none;\r\n\theight: 3px;\r\n}\r\n"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/tm1kanban/tm1kanban.component.html":
/***/ (function(module, exports) {

module.exports = "<button pButton type=\"button\" icon=\"fa fa-expand\" style=\"margin-bottom:10px\" (click)=\"onFullThis(fullScreenTarget)\"\r\n  label=\"å¨å±\"></button>\r\n<div #fullScreenTarget class=\"ui-g\" style=\"background-image: url('assets/picture/sky1.jpg');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;\">\r\n  <h1 style=\"text-align: center;height: 65px;line-height: 65px; width:100%;margin-top: 0px;background-image: url('assets/picture/title.png');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;color: aliceblue\">TM1å®æ¶çäº§çæ¿</h1>\r\n\r\n  <div class=\"ui-g-12\">\r\n\r\n    <!--Letf Start-->\r\n    <div class=\"ui-g-12 ui-lg-5 panel\" style=\"height: 44vh;border-image: url('assets/picture/border.png') 5% round;color: aliceblue;padding:0px;\">\r\n      <div class=\"ui-g-12 ui-lg-6\" style=\"height:20vh\" echarts [options]=\"snsInOption\" (chartInit)=\"onSnsInChartInit($event)\"></div>\r\n      <div class=\"ui-g-12 ui-lg-6\" style=\"height: 20vh;color: aliceblue;\">\r\n        <div class=\"ui-g-12 box\" style=\"height:100%;color: aliceblue\">\r\n          <span class=\"title\">Sensor æå¥</span>\r\n          <hr />\r\n          <div class=\"ui-g-12 ui-g-nopad\" style=\"text-align: left;\">\r\n            <span class=\"content\">è®¡å</span>\r\n            <span class=\"number\">{{snsPlanIn}}</span>\r\n            <br />\r\n            <span class=\"content\">å®é</span>\r\n            <span style=\"font-size:4vh;color: yellow;\" countUp [endVal]=\"snsActInEnd\" [startVal]=\"snsActInStart\"\r\n              duration=\"3\" [countUp]=\"options\"></span>\r\n          </div>\r\n          <!-- <div class=\"ui-g-5\">\r\n            <div class=\"circle\" style=\"height:80px\">\r\n              è¾¾æç<br>\r\n              <span style=\"color: yellow;\" countUp [endVal]=\"snsInrateEnd\" [startVal]=\"snsInrateStart\" duration=\"3\"\r\n                [countUp]=\"options1\" [decimals]='2'></span>\r\n            </div>\r\n          </div> -->\r\n        </div>\r\n      </div>\r\n      <div class=\"ui-g-12 ui-lg-6\" style=\"height:20vh\" echarts [options]=\"snsOutOption\" (chartInit)=\"onSnsOutChartInit($event)\"></div>\r\n      <div class=\"ui-g-12 ui-lg-6\" style=\"height: 20vh;color: aliceblue;\">\r\n        <div class=\"ui-g-12 box\" style=\"height:100%;color: aliceblue\">\r\n          <span class=\"title\">Sensor äº§åº</span>\r\n          <hr />\r\n          <div class=\"ui-g-12 ui-g-nopad\" style=\"text-align: left;\">\r\n            <span class=\"content\">è®¡å</span>\r\n            <span class=\"number\">{{snsPlanOut}}</span>\r\n            <br />\r\n            <span class=\"content\">å®é</span>\r\n            <span style=\"font-size:4vh;color: yellow;\" countUp [endVal]=\"snsActOutEnd\" [startVal]=\"snsActOutStart\"\r\n              duration=\"3\" [countUp]=\"options\"></span>\r\n          </div>\r\n         <!--  <div class=\"ui-g-4\">\r\n            <div style=\"height:80px;margin-top: 10px\">\r\n              è¾¾æç<br>\r\n              <span style=\"color: yellow;font-size: 1.6rem;\" countUp [endVal]=\"snsOutrateEnd\" [startVal]=\"snsOutrateStart\"\r\n                duration=\"3\" [countUp]=\"options1\" [decimals]='2'></span>\r\n            </div>\r\n          </div> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--Left End-->\r\n\r\n    <!--Middle Start-->\r\n    <div class=\"ui-g-12 ui-lg-2\" style=\"height: 45vh;color: aliceblue\">\r\n      <div style=\"height:15vh;margin-bottom: 5vh\">\r\n        <div style=\"text-align: center;font-size:1.6rem;\">Sensor ç»¼åè¯ç</div>\r\n        <div style=\"text-align: center;font-size:1.6rem;color: yellow;\">{{snsYield}}%</div>\r\n        <br />\r\n        <div style=\"text-align: center;font-size:1.6rem;\">LAM ç»¼åè¯ç</div>\r\n        <div style=\"text-align: center;font-size:1.6rem;color: yellow;\">{{lamYield}}%</div>\r\n      </div>\r\n\r\n      <hr class=\"myhr\" />\r\n      <div style=\"text-align: center;font-size:1.6rem;\">å·¥åç»åç</div>\r\n      <div style=\"height: 25vh;\" echarts [options]=\"woRateOption\" (chartInit)=\"woRateChartInit($event)\"></div>\r\n    </div>\r\n    <!--Middle End-->\r\n\r\n    <!--Left Start-->\r\n    <div class=\"ui-g-12 ui-lg-5 panel\" style=\"height: 44vh;border-image: url('assets/picture/border.png') 5% round;color: aliceblue;padding: 0px;\">\r\n      <!-- <div style=\"height: 22.5vh;\" echarts [options]=\"snsWeekYieldOption\" (chartInit)=\"onsnsWeekYieldChartInit($event)\"></div>\r\n      <div style=\"height: 22.5vh;\" echarts [options]=\"lamWeekYieldOption\" (chartInit)=\"onlamWeekYieldChartInit($event)\"></div> -->\r\n      <!--  <div style=\"height:22.5vh\" echarts [options]=\"optionliq\"></div> -->\r\n      <div class=\"ui-g-12 ui-lg-6\" style=\"height: 20vh;color: aliceblue;\">\r\n        <div class=\"ui-g-12 box\" style=\"height:100%\">\r\n          <span class=\"title\">LAM æå¥</span>\r\n          <hr />\r\n          <div class=\"ui-g-12 ui-g-nopad\" style=\"text-align: left;\">\r\n            <span class=\"content\">è®¡å</span>\r\n            <span class=\"number\">{{lamPlanIn}}</span>\r\n            <br />\r\n            <span class=\"content\">å®é</span>\r\n            <span style=\"font-size:4vh;color: yellow;\" countUp [endVal]=\"lamActInEnd\" [startVal]=\"lamActInStart\"\r\n              duration=\"3\" [countUp]=\"options\"></span>\r\n          </div>\r\n          <!-- <div class=\"ui-g-5\">\r\n            <div class=\"circle\" style=\"height:80px\">\r\n              è¾¾æç<br>\r\n              <span style=\"color: yellow;\" countUp [endVal]=\"LamInrateEnd\" [startVal]=\"LamInrateStart\" duration=\"3\"\r\n                [countUp]=\"options1\" [decimals]='2'></span>\r\n            </div>\r\n          </div> -->\r\n        </div>\r\n      </div>\r\n      <div class=\"ui-g-12 ui-lg-6\" style=\"height:20vh\" echarts [options]=\"lamInOption\" (chartInit)=\"onLamInChartInit($event)\"></div>\r\n      <div class=\"ui-g-12 ui-lg-6\" style=\"height: 20vh;color: aliceblue;\">\r\n        <div class=\"ui-g-12 box\" style=\"height:100%\">\r\n          <span class=\"title\">LAM äº§åº</span>\r\n          <hr />\r\n          <div class=\"ui-g-12 ui-g-nopad\" style=\"text-align: left;\">\r\n            <span class=\"content\">è®¡å</span>\r\n            <span class=\"number\">{{ lamPlanOut }}</span>\r\n            <br />\r\n            <span class=\"content\">å®é</span>\r\n            <span style=\"font-size:4vh;color: yellow;\" countUp [endVal]=\"lamActOutEnd\" [startVal]=\"lamActOutStart\"\r\n              duration=\"3\" [countUp]=\"options\"></span>\r\n          </div>\r\n          <!-- <div class=\"ui-g-5\">\r\n            <div class=\"circle\" style=\"height:80px\">\r\n              è¾¾æç<br>\r\n              <span style=\"color: yellow;\" countUp [endVal]=\"LamOutrateEnd\" [startVal]=\"LamOutrateStart\" duration=\"3\"\r\n                [countUp]=\"options1\" [decimals]='2'></span>\r\n            </div>\r\n          </div> -->\r\n        </div>\r\n      </div>\r\n      <div class=\"ui-g-12 ui-lg-6\" style=\"height:20vh\" echarts [options]=\"lamOutOption\" (chartInit)=\"onLamOutChartInit($event)\"></div>\r\n    </div>\r\n  </div>\r\n  <div class=\"ui-g-12\">\r\n    <div class=\"ui-g-12  panel\" style=\"border-image: url('assets/picture/border.png') 5% round;color: aliceblue\">\r\n      <div class=\"ui-g-5\" style=\"height:40vh;\" echarts [options]=\"chartOptionLeft\" (chartInit)=\"onSnsWipChartInit($event)\"></div>\r\n      <div class=\"ui-g-2\" style=\"height:40vh;\" echarts [options]=\"chartOptionMiddle\" (chartInit)=\"onBankChartInit($event)\"></div>\r\n      <div class=\"ui-g-5\" style=\"height:40vh;\" echarts [options]=\"chartOptionRight\" (chartInit)=\"onLamWipChartInit($event)\"></div>\r\n    </div>\r\n  </div>\r\n\r\n</div>"

/***/ }),

/***/ "./src/app/outstandingcase/pmkanban/tm1kanban/tm1kanban.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Tm1kanbanComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_app_common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_screenfull__ = __webpack_require__("./node_modules/screenfull/dist/screenfull.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_screenfull___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_screenfull__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var Tm1kanbanComponent = /** @class */ (function () {
    function Tm1kanbanComponent(apiService, renderer) {
        this.apiService = apiService;
        this.renderer = renderer;
        this.lamActInStart = 0;
        this.lamActInEnd = 0;
        this.LamInrateStart = 0;
        this.LamInrateEnd = 0;
        this.lamActOutStart = 0;
        this.lamActOutEnd = 0;
        this.LamOutrateStart = 0;
        this.LamOutrateEnd = 0;
        this.lamYield = 0;
        this.snsActInStart = 0;
        this.snsActInEnd = 0;
        this.snsInrateStart = 0;
        this.snsInrateEnd = 0;
        this.snsActOutStart = 0;
        this.snsActOutEnd = 0;
        this.snsOutrateStart = 0;
        this.snsOutrateEnd = 0;
        this.snsYield = 0;
        this.woRateOption = {
            series: [
                {
                    name: '',
                    type: 'gauge',
                    min: 0,
                    max: 100,
                    detail: {
                        formatter: function (params) {
                            return params.toFixed(2) + '%';
                        },
                        shadowColor: '#fff',
                        shadowBlur: 5,
                        textStyle: {
                            //fontWeight: 'bolder',
                            color: 'yellow',
                            fontSize: 22
                        }
                    },
                    axisLine: {
                        lineStyle: {
                            color: [[0.50, '#ff4500'], [0.80, '#1e90ff'], [1, 'lime']],
                            width: 3,
                            shadowColor: '#fff',
                            shadowBlur: 10
                        }
                    },
                    axisLabel: {
                        textStyle: {
                            fontWeight: 'bolder',
                            color: '#fff',
                            shadowColor: '#fff',
                            shadowBlur: 10
                        }
                    },
                    axisTick: {
                        length: 1,
                        lineStyle: {
                            color: 'auto',
                            //shadowColor : '#fff', //é»è®¤éæ
                            shadowBlur: 10
                        }
                    },
                    splitLine: {
                        length: 5,
                        lineStyle: {
                            width: 5,
                            color: '#fff',
                            shadowColor: '#fff',
                            shadowBlur: 10
                        }
                    },
                    pointer: {
                        width: 4
                    },
                    data: [{ value: 0, name: '' }]
                }
            ]
        };
        this.options = {
            useEasing: true,
            useGrouping: true,
            separator: ',',
            decimal: '.',
        };
        this.options1 = {
            useEasing: true,
            useGrouping: true,
            separator: ',',
            decimal: '.',
            suffix: '%'
        };
        this.chartOptionLeft = {
            title: {
                text: "Sensor WIP",
                x: 'center',
                y: 20,
                textStyle: {
                    color: 'white',
                    fontSize: 24
                }
            },
            tooltip: {
                trigger: 'axis',
                // 'axis'åæ è½´è§¦åï¼ä¸»è¦å¨æ±ç¶å¾ï¼æçº¿å¾ç­ä¼ä½¿ç¨ç±»ç®è½´çå¾è¡¨ä¸­ä½¿ç¨ã
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
                },
            },
            grid: {
                left: '3%',
                right: '4%',
                bottom: '3%',
                top: 100,
                containLabel: true
            },
            xAxis: [
                {
                    splitLine: { show: false },
                    type: 'category',
                    data: [],
                    axisLabel: {
                        interval: 0,
                        rotate: 0,
                        textStyle: {
                            fontSize: 12 // å­ä½å¤§å°
                        }
                    },
                    axisLine: {
                        lineStyle: {
                            color: 'white',
                        }
                    }
                },
            ],
            yAxis: [
                {
                    show: false,
                    splitLine: { show: false },
                    type: 'value',
                    axisLine: {
                        lineStyle: {
                            color: 'white',
                        }
                    }
                }
            ],
            series: [
                {
                    type: 'bar',
                    barWidth: 20,
                    itemStyle: {
                        normal: {
                            barBorderRadius: 0,
                            /*color: new echarts.graphic.LinearGradient(
                                0, 0, 0, 1,
                                [
                                    {offset: 0, color: '#14c8d4'},
                                    {offset: 1, color: '#43eec6'}
                                ]
                            )*/
                            color: '#63c2ff'
                        }
                    },
                    label: {
                        normal: {
                            fontSize: 18,
                            show: true,
                            position: 'top',
                            color: 'yellow'
                        }
                    },
                    data: [],
                }
            ]
        };
        this.chartOptionMiddle = {
            title: {
                text: "Bank",
                x: 'center',
                y: 20,
                textStyle: {
                    color: 'white',
                    fontSize: 24
                }
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
                },
            },
            grid: {
                left: '3%',
                right: '4%',
                bottom: '3%',
                top: 100,
                containLabel: true
            },
            xAxis: [
                {
                    splitLine: { show: false },
                    type: 'category',
                    data: ['SNS', 'LAM'],
                    axisLabel: {
                        interval: 0,
                        rotate: 0,
                        textStyle: {
                            fontSize: 12 // å­ä½å¤§å°
                        }
                    },
                    axisLine: {
                        lineStyle: {
                            color: 'white',
                        }
                    }
                },
            ],
            yAxis: [
                {
                    show: false,
                    type: 'value'
                }
            ],
            series: [
                {
                    type: 'bar',
                    barWidth: 20,
                    itemStyle: {
                        normal: {
                            barBorderRadius: 0,
                            /*color: new echarts.graphic.LinearGradient(
                                0, 0, 0, 1,
                                [
                                    {offset: 0, color: '#14c8d4'},
                                    {offset: 1, color: '#43eec6'}
                                ]
                            )*/
                            color: '#ffd85c'
                        }
                    },
                    label: {
                        normal: {
                            fontSize: 18,
                            show: true,
                            position: 'top',
                            color: 'yellow'
                        }
                    },
                    data: [],
                }
            ]
        };
        this.chartOptionRight = {
            title: {
                text: "LAM WIP",
                x: 'center',
                y: 20,
                textStyle: {
                    color: 'white',
                    fontSize: 24
                }
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
                },
            },
            grid: {
                left: '3%',
                right: '4%',
                bottom: '3%',
                top: 100,
                containLabel: true
            },
            xAxis: [
                {
                    splitLine: { show: false },
                    type: 'category',
                    data: [],
                    axisLabel: {
                        interval: 0,
                        rotate: 0,
                        textStyle: {
                            fontSize: 12 // å­ä½å¤§å°
                        }
                    },
                    axisLine: {
                        lineStyle: {
                            color: 'white',
                        }
                    }
                },
            ],
            yAxis: [
                {
                    show: false,
                    type: 'value'
                }
            ],
            series: [
                {
                    type: 'bar',
                    barWidth: 20,
                    itemStyle: {
                        normal: {
                            barBorderRadius: 0,
                            /*color: new echarts.graphic.LinearGradient(
                                0, 0, 0, 1,
                                [
                                    {offset: 0, color: '#14c8d4'},
                                    {offset: 1, color: '#43eec6'}
                                ]
                            )*/
                            color: '#43eec6'
                        }
                    },
                    label: {
                        normal: {
                            fontSize: 18,
                            show: true,
                            position: 'top',
                            color: 'yellow'
                        }
                    },
                    data: [],
                }
            ]
        };
        this.snsInOption = {
            series: [
                {
                    type: 'gauge',
                    radius: '100%',
                    center: ['50%', '50%'],
                    splitNumber: 0,
                    startAngle: 270,
                    endAngle: -89.99999,
                    axisLine: {
                        show: true,
                        lineStyle: {
                            width: 12,
                            color: [
                                [
                                    0.6, '#43eec6'
                                ],
                                [
                                    1, '#413e54'
                                ]
                            ]
                        }
                    },
                    //åéçº¿æ ·å¼ã
                    splitLine: {
                        show: false,
                    },
                    axisLabel: {
                        show: false
                    },
                    axisTick: {
                        show: false
                    },
                    pointer: {
                        show: false
                    },
                    title: {
                        show: true,
                        offsetCenter: [0, '-26%'],
                        textStyle: {
                            color: '#fff',
                            fontSize: 20
                        }
                    },
                    //ä»ªè¡¨çè¯¦æï¼ç¨äºæ¾ç¤ºæ°æ®ã
                    detail: {
                        show: true,
                        offsetCenter: [0, '16%'],
                        color: '#ffff00',
                        formatter: function (params) {
                            return params + "%";
                        },
                        textStyle: {
                            fontSize: 44
                        }
                    },
                    data: [{
                            name: "è¾¾æç",
                            value: 60
                        }]
                }
            ]
        };
        this.snsOutOption = {
            series: [
                {
                    type: 'gauge',
                    radius: '100%',
                    center: ['50%', '50%'],
                    splitNumber: 0,
                    startAngle: 270,
                    endAngle: -89.99999,
                    axisLine: {
                        show: true,
                        lineStyle: {
                            width: 12,
                            color: [
                                [
                                    0.6, '#43eec6'
                                ],
                                [
                                    1, '#413e54'
                                ]
                            ]
                        }
                    },
                    //åéçº¿æ ·å¼ã
                    splitLine: {
                        show: false,
                    },
                    axisLabel: {
                        show: false
                    },
                    axisTick: {
                        show: false
                    },
                    pointer: {
                        show: false
                    },
                    title: {
                        show: true,
                        offsetCenter: [0, '-26%'],
                        textStyle: {
                            color: '#fff',
                            fontSize: 20
                        }
                    },
                    //ä»ªè¡¨çè¯¦æï¼ç¨äºæ¾ç¤ºæ°æ®ã
                    detail: {
                        show: true,
                        offsetCenter: [0, '16%'],
                        color: '#ffff00',
                        formatter: function (params) {
                            return params + "%";
                        },
                        textStyle: {
                            fontSize: 44
                        }
                    },
                    data: [{
                            name: "è¾¾æç",
                            value: 60
                        }]
                }
            ]
        };
        this.lamInOption = {
            series: [
                {
                    type: 'gauge',
                    radius: '100%',
                    center: ['50%', '50%'],
                    splitNumber: 0,
                    startAngle: 270,
                    endAngle: -89,
                    axisLine: {
                        show: true,
                        lineStyle: {
                            width: 12,
                            color: [
                                [
                                    0.6, '#63c2ff'
                                ],
                                [
                                    1, '#413e54'
                                ]
                            ]
                        }
                    },
                    //åéçº¿æ ·å¼ã
                    splitLine: {
                        show: false,
                    },
                    axisLabel: {
                        show: false
                    },
                    axisTick: {
                        show: false
                    },
                    pointer: {
                        show: false
                    },
                    title: {
                        show: true,
                        offsetCenter: [0, '-26%'],
                        textStyle: {
                            color: '#fff',
                            fontSize: 20
                        }
                    },
                    //ä»ªè¡¨çè¯¦æï¼ç¨äºæ¾ç¤ºæ°æ®ã
                    detail: {
                        show: true,
                        offsetCenter: [0, '16%'],
                        color: '#ffff00',
                        formatter: function (params) {
                            return params + "%";
                        },
                        textStyle: {
                            fontSize: 44
                        }
                    },
                    data: [{
                            name: "è¾¾æç",
                            value: 60
                        }]
                }
            ]
        };
        this.lamOutOption = {
            series: [
                {
                    type: 'gauge',
                    radius: '100%',
                    center: ['50%', '50%'],
                    splitNumber: 0,
                    startAngle: 270,
                    endAngle: -89,
                    axisLine: {
                        show: true,
                        lineStyle: {
                            width: 12,
                            color: [
                                [
                                    0.6, '#63c2ff'
                                ],
                                [
                                    1, '#413e54'
                                ]
                            ]
                        }
                    },
                    //åéçº¿æ ·å¼ã
                    splitLine: {
                        show: false,
                    },
                    axisLabel: {
                        show: false
                    },
                    axisTick: {
                        show: false
                    },
                    pointer: {
                        show: false
                    },
                    title: {
                        show: true,
                        offsetCenter: [0, '-26%'],
                        textStyle: {
                            color: '#fff',
                            fontSize: 20
                        }
                    },
                    //ä»ªè¡¨çè¯¦æï¼ç¨äºæ¾ç¤ºæ°æ®ã
                    detail: {
                        show: true,
                        offsetCenter: [0, '16%'],
                        color: '#ffff00',
                        formatter: function (params) {
                            return params + "%";
                        },
                        textStyle: {
                            fontSize: 44
                        }
                    },
                    data: [{
                            name: "è¾¾æç",
                            value: 60
                        }]
                }
            ]
        };
        //production end
        this.optionCircle = {
            series: [
                {
                    type: 'gauge',
                    radius: '100%',
                    center: ['50%', '50%'],
                    splitNumber: 0,
                    startAngle: 270,
                    endAngle: -89,
                    axisLine: {
                        show: true,
                        lineStyle: {
                            width: 12,
                            color: [
                                [
                                    0.9, '#63c2ff'
                                ],
                                [
                                    1, '#413e54'
                                ]
                            ]
                        }
                    },
                    //åéçº¿æ ·å¼ã
                    splitLine: {
                        show: false,
                    },
                    axisLabel: {
                        show: false
                    },
                    axisTick: {
                        show: false
                    },
                    pointer: {
                        show: false
                    },
                    title: {
                        show: true,
                        offsetCenter: [0, '-26%'],
                        textStyle: {
                            color: '#fff',
                            fontSize: 20
                        }
                    },
                    //ä»ªè¡¨çè¯¦æï¼ç¨äºæ¾ç¤ºæ°æ®ã
                    detail: {
                        show: true,
                        offsetCenter: [0, '16%'],
                        color: '#ffff00',
                        formatter: function (params) {
                            return params;
                        },
                        textStyle: {
                            fontSize: 44
                        }
                    },
                    data: [{
                            name: "è¾¾æç",
                            value: 90.61
                        }]
                }
            ]
        };
        this.mockDate = {
            capacity: { "ACT_OUTQTY": 15692, "OUTRATE": 1, "ACT_INQTY": 0, "INRATE": 0, "PLAN_INQTY": 0, "PLAN_OUTQTY": 0 },
            yield: { "YIELD": 0.9922 },
            worate: { "WORATE": 0.1429 },
            wipbank: [{ "LAMBANK": 521, "SNSBANK": 91269 }],
            lamwip: [{ "QTY": 969, "STEPTYPE": "CUT" }, { "QTY": 280, "STEPTYPE": "Polish" }, { "QTY": 510, "STEPTYPE": "HF" }, { "QTY": 5722, "STEPTYPE": "FOG" }, { "QTY": 5672, "STEPTYPE": "LAMI" }, { "QTY": 7294, "STEPTYPE": "MainBack" }, { "QTY": 1200, "STEPTYPE": "Packing" }, { "QTY": 6073, "STEPTYPE": "Rework" }, { "QTY": 631, "STEPTYPE": "RT" }],
            snswip: [{ "QTY": 122, "STEPTYPE": "Unpack" }, { "QTY": 263, "STEPTYPE": "BM" }, { "QTY": 120, "STEPTYPE": "OC" }, { "QTY": 93, "STEPTYPE": "SiO2" }, { "QTY": 8, "STEPTYPE": "ITO" }, { "QTY": 3176, "STEPTYPE": "Metal" }, { "QTY": 55, "STEPTYPE": "AR" }, { "QTY": 2100, "STEPTYPE": "OS" }, { "QTY": 526.2, "STEPTYPE": "Cut" }, { "QTY": 1183, "STEPTYPE": "IR" }, { "QTY": 1025, "STEPTYPE": "QTest" }, { "QTY": 2501, "STEPTYPE": "å¯å¥è¶" }, { "QTY": 609, "STEPTYPE": "Ship" }, { "QTY": 471, "STEPTYPE": "Scrap" }]
        };
        //full screen status
        this.fullScreenStatus = false;
    }
    Tm1kanbanComponent.prototype.ngOnInit = function () {
    };
    Tm1kanbanComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        console.log('ngAfterContentInit');
        setTimeout(function () {
            console.log('ngAfterContentInit');
        }, 2000);
        // this.getSnsInout();
        //  this.getSnsYield();
        //  this.getLamInout();
        //  this.getLamYield();
        //  this.getLamWeekYield();
        //  this.getSnsWeekYield();
        //  this.getLamWorate();
        //  this.getBank();
        //  this.getLamWip();
        //  this.getSnsWip();
        this.timer = setInterval(function () {
            _this.woRateIntance.clear();
            _this.woRateIntance.setOption(_this.woRateOption);
            _this.bankChartIntance.clear();
            _this.bankChartIntance.setOption(_this.chartOptionMiddle);
            _this.snsWipChartIntance.clear();
            _this.lamWipChartIntance.clear();
            _this.snsWipChartIntance.setOption(_this.chartOptionLeft);
            _this.lamWipChartIntance.setOption(_this.chartOptionRight);
        }, 30000);
        this.Timer5min = setInterval(function () {
            _this.bankChartIntance.showLoading('default', {
                text: 'æ¼å½å è½½ä¸­...',
                color: 'yellow',
                textColor: '#FFF',
                maskColor: 'rgba(0, 0, 0, 0)'
            });
            //this.getBank();
        }, 1000 * 60 * 5);
        this.TimerOneHour = setInterval(function () {
            _this.getBank();
            _this.getLamWip();
            _this.getSnsWip();
        }, 1000 * 60 * 60);
        this.TimerTwoHour = setInterval(function () {
            _this.getSnsWeekYield();
            _this.getLamWeekYield();
        }, 1000 * 60 * 60 * 2);
        this.lamInoutTimer = setInterval(function () {
            _this.getSnsInout();
            _this.getSnsYield();
            _this.getLamYield();
            _this.getLamInout();
            _this.getLamWorate();
            _this.getBank();
        }, 1000 * 60);
    };
    Tm1kanbanComponent.prototype.ngOnDestory = function () {
        clearInterval(this.timer);
        clearInterval(this.lamInoutTimer);
        clearInterval(this.Timer5min);
        clearInterval(this.TimerOneHour);
        clearInterval(this.TimerTwoHour);
    };
    Tm1kanbanComponent.prototype._resize = function () {
        this.fullScreenStatus = __WEBPACK_IMPORTED_MODULE_2_screenfull__["isFullscreen"];
        console.log(this.fullScreenStatus);
        if (!__WEBPACK_IMPORTED_MODULE_2_screenfull__["isFullscreen"]) {
        }
    };
    Tm1kanbanComponent.prototype.onFullThis = function (screentarget) {
        console.log('onFullThis v : ', screentarget);
        if (__WEBPACK_IMPORTED_MODULE_2_screenfull__["enabled"]) {
            __WEBPACK_IMPORTED_MODULE_2_screenfull__["request"](screentarget);
            this.renderer.setStyle(screentarget, 'height', '100vh');
        }
    };
    Tm1kanbanComponent.prototype.getLamInout = function () {
        this.lamPlanIn = this.mockDate.capacity.PLAN_INQTY;
        this.lamPlanOut = this.mockDate.capacity.PLAN_OUTQTY;
        this.lamActInStart = this.lamActInEnd - 100;
        this.lamActInEnd = this.mockDate.capacity.ACT_INQTY;
        this.lamInOption.series[0].data[0].value = parseFloat((this.mockDate.capacity.INRATE * 100).toFixed(2));
        this.lamInOption.series[0].axisLine.lineStyle.color[0][0] = this.mockDate.capacity.INRATE.toFixed(2);
        this.lamInChartIntance.setOption(this.lamInOption, true);
        this.lamActOutStart = this.lamActOutEnd - 100;
        this.lamActOutEnd = this.mockDate.capacity.ACT_OUTQTY;
        if (this.mockDate.capacity.OUTRATE * 100 < 20) {
            this.lamOutOption.series[0].detail.color = "red";
        }
        this.lamOutOption.series[0].data[0].value = parseFloat((this.mockDate.capacity.OUTRATE * 100).toFixed(2));
        this.lamOutOption.series[0].axisLine.lineStyle.color[0][0] = this.mockDate.capacity.OUTRATE.toFixed(2);
        this.lamOutChartIntance.setOption(this.lamOutOption, true);
    };
    Tm1kanbanComponent.prototype.getSnsInout = function () {
        this.snsPlanIn = this.mockDate.capacity.PLAN_INQTY;
        this.snsPlanOut = this.mockDate.capacity.PLAN_OUTQTY;
        this.snsActInStart = this.snsActInEnd - 100;
        this.snsActInEnd = this.mockDate.capacity.ACT_INQTY;
        this.snsInOption.series[0].data[0].value = parseFloat((this.mockDate.capacity.INRATE * 100).toFixed(2));
        this.snsInOption.series[0].axisLine.lineStyle.color[0][0] = this.mockDate.capacity.INRATE.toFixed(2);
        this.snsInChartIntance.setOption(this.snsInOption, true);
        this.snsActOutStart = this.snsActOutEnd - 100;
        this.snsActOutEnd = this.mockDate.capacity.ACT_OUTQTY;
        this.snsOutOption.series[0].data[0].value = parseFloat((this.mockDate.capacity.OUTRATE * 100).toFixed(2));
        this.snsOutOption.series[0].axisLine.lineStyle.color[0][0] = this.mockDate.capacity.OUTRATE.toFixed(2);
        this.snsOutChartIntance.setOption(this.snsOutOption, true);
    };
    Tm1kanbanComponent.prototype.getSnsYield = function () {
        var yieldTemp = this.mockDate.yield.YIELD * 100;
        this.snsYield = yieldTemp.toFixed(2);
    };
    Tm1kanbanComponent.prototype.getLamYield = function () {
        var yieldTemp = this.mockDate.yield.YIELD * 100;
        this.lamYield = yieldTemp.toFixed(2);
    };
    Tm1kanbanComponent.prototype.getLamWorate = function () {
        var rate = this.mockDate.worate.WORATE * 100;
        this.woRateOption.series[0].data[0].value = this.mockDate.worate.WORATE * 100;
        this.woRateIntance.setOption(this.woRateOption, true);
    };
    /** onlamWeekYieldChartInit(ec) {
      this.lamWeekYieldIntance = ec;
    }
    onsnsWeekYieldChartInit(ec) {
      this.snsWeekYieldIntance = ec;
    }*/
    Tm1kanbanComponent.prototype.woRateChartInit = function (ec) {
        this.woRateIntance = ec;
    };
    Tm1kanbanComponent.prototype.onBankChartInit = function (ec) {
        this.bankChartIntance = ec;
        ec.showLoading('default', {
            text: 'æ¼å½å è½½ä¸­...',
            color: 'yellow',
            textColor: '#FFF',
            maskColor: 'rgba(0, 0, 0, 0)'
        });
    };
    Tm1kanbanComponent.prototype.onLamWipChartInit = function (ec) {
        this.lamWipChartIntance = ec;
    };
    Tm1kanbanComponent.prototype.onSnsWipChartInit = function (ec) {
        this.snsWipChartIntance = ec;
    };
    Tm1kanbanComponent.prototype.onSnsInChartInit = function (ec) {
        console.log('onSnsInChartInit');
        this.snsInChartIntance = ec;
    };
    Tm1kanbanComponent.prototype.onSnsOutChartInit = function (ec) {
        this.snsOutChartIntance = ec;
    };
    Tm1kanbanComponent.prototype.onLamInChartInit = function (ec) {
        this.lamInChartIntance = ec;
    };
    Tm1kanbanComponent.prototype.onLamOutChartInit = function (ec) {
        this.lamOutChartIntance = ec;
    };
    Tm1kanbanComponent.prototype.getLamWeekYield = function () {
        this.setLamWeekYieldEchart(this.mockDate.lamwip);
    };
    Tm1kanbanComponent.prototype.getSnsWeekYield = function () {
        //this.setSnsWeekYieldEchart(this.mockDate.snswip);
    };
    //è®¾ç½®è´´åä¸å¨è¯çè§å¾
    Tm1kanbanComponent.prototype.setLamWeekYieldEchart = function (data) {
        var xAxisData = [];
        var seriesData = [];
        data.forEach(function (element) {
            xAxisData.push(element.REPORTDATE);
            var seriesDateItem = element.YIELD * 100;
            seriesData.push(seriesDateItem.toFixed(2));
        });
        this.lamWeekYieldOption = {
            title: {
                text: 'è´´\nå',
                subtext: 'è¯\nç\nä¸\nå¨\nè¶\nå¿\nå¾',
                textStyle: {
                    color: 'white'
                },
                subtextStyle: {
                    color: 'white',
                    fontSize: 14
                }
            },
            tooltip: {
                trigger: 'axis'
            },
            calculable: true,
            xAxis: [
                {
                    type: 'category',
                    splitLine: { show: false },
                    data: xAxisData,
                    axisLine: {
                        lineStyle: {
                            color: 'white',
                        }
                    },
                    axisLabel: {
                        interval: 0,
                        rotate: 0,
                    },
                }
            ],
            grid: {
                top: "5px",
                left: "55px",
                right: "5px",
                bottom: "50px",
                height: "65%",
            },
            yAxis: [
                {
                    type: 'value',
                    min: 85,
                    max: 100,
                    axisLine: {
                        lineStyle: {
                            color: 'white',
                            width: 1
                        }
                    },
                    splitLine: {
                        show: false,
                        lineStyle: {
                            width: 1,
                            type: 'dotted',
                            color: ['yellow']
                        }
                    },
                }
            ],
            color: ['rgb(227,222,16)'],
            series: [{
                    type: 'line',
                    label: {
                        normal: {
                            show: true,
                            formatter: '{c}%'
                        }
                    }, data: seriesData
                }]
        };
    };
    //è®¾ç½®SNSä¸å¨è¯çè§å¾
    /** setSnsWeekYieldEchart(data) {
      let xAxisData = []
      let seriesData = [];
      data.forEach(element => {
        xAxisData.push(element.REPORTDATE);
        let seriesDateItem = element.YIELD * 100;
        seriesData.push(seriesDateItem.toFixed(2));
      });
      this.snsWeekYieldOption = {
   
        title: {
          text: 'S\nN\nS',
          subtext: 'è¯\nç\nä¸\nå¨\nè¶\nå¿\nå¾',
          textStyle: {
            color: 'white'
          },
          subtextStyle: {
            color: 'white',
            fontSize: 14
          }
        },
        tooltip: {
          trigger: 'axis'
        },
        calculable: true,
        xAxis: [
          {
            type: 'category',
            splitLine: { show: false },
            data: xAxisData,
            axisLine: {
              lineStyle: {
                color: 'white',
              }
            },
            axisLabel: {
              interval: 0,//æ¨ªè½´ä¿¡æ¯å¨é¨æ¾ç¤º
              rotate: 0,//30åº¦è§å¾ææ¾ç¤º
            },
          }
        ],
        grid: {
          top: "5px",
          left: "55px",
          right: "5px",
          bottom: "50px",
          height: "65%", //å¾ä¾é«åº¦
        },
        yAxis: [
          {
            type: 'value',
            min: 95,
            max: 105,
            axisLine: {
              lineStyle: {
                color: 'white',
                width: 1
              }
            },
            splitLine: {           // åéçº¿
              show: false,        // é»è®¤æ¾ç¤ºï¼å±æ§showæ§å¶æ¾ç¤ºä¸å¦
              lineStyle: {       // å±æ§lineStyleï¼è¯¦è§lineStyleï¼æ§å¶çº¿æ¡æ ·å¼
                width: 1,
                type: 'dotted',
                color: ['yellow']
              }
            },
   
   
          }
        ],
        color: ['rgb(227,222,16)'],
   
        series: [{
          type: 'line',
          label: {
            normal: {
              show: true,
              formatter: '{c}%'
            }
          }, data: seriesData
        }]
   
      }
    }*/
    Tm1kanbanComponent.prototype.getBank = function () {
        var _this = this;
        this.bankChartIntance.hideLoading();
        this.mockDate.wipbank.forEach(function (element) {
            _this.chartOptionMiddle.series[0].data.push(element.SNSBANK);
            _this.chartOptionMiddle.series[0].data.push(element.LAMBANK);
            var bankTotal = element.SNSBANK + element.LAMBANK;
            _this.chartOptionMiddle.title.text = "Bank : " + bankTotal;
        });
        this.bankChartIntance.setOption(this.chartOptionMiddle, true);
    };
    //LAM WIP
    Tm1kanbanComponent.prototype.getLamWip = function () {
        this.setLamWipEchart(this.mockDate.lamwip);
    };
    Tm1kanbanComponent.prototype.setLamWipEchart = function (data) {
        var _this = this;
        data.forEach(function (element) {
            _this.chartOptionRight.xAxis[0].data.push(element.STEPTYPE);
            _this.chartOptionRight.series[0].data.push(element.QTY);
            _this.lamWipChartIntance.setOption(_this.chartOptionRight, true);
        });
    };
    //Sns WIP
    Tm1kanbanComponent.prototype.getSnsWip = function () {
        var tmp = [{ "QTY": 122, "STEPTYPE": "Unpack" }, { "QTY": 263, "STEPTYPE": "BM" }, { "QTY": 120, "STEPTYPE": "OC" }, { "QTY": 93, "STEPTYPE": "SiO2" }, { "QTY": 8, "STEPTYPE": "ITO" }, { "QTY": 3176, "STEPTYPE": "Metal" }, { "QTY": 55, "STEPTYPE": "AR" }, { "QTY": 2100, "STEPTYPE": "OS" }, { "QTY": 526.2, "STEPTYPE": "Cut" }, { "QTY": 1183, "STEPTYPE": "IR" }, { "QTY": 1025, "STEPTYPE": "QTest" }, { "QTY": 2501, "STEPTYPE": "å¯å¥è¶" }, { "QTY": 609, "STEPTYPE": "Ship" }, { "QTY": 471, "STEPTYPE": "Scrap" }];
        this.setSnsWipEchart(tmp);
    };
    Tm1kanbanComponent.prototype.setSnsWipEchart = function (data) {
        var _this = this;
        data.forEach(function (element) {
            _this.chartOptionLeft.xAxis[0].data.push(element.STEPTYPE);
            _this.chartOptionLeft.series[0].data.push(element.QTY);
            _this.snsWipChartIntance.setOption(_this.chartOptionLeft, true);
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('window:resize'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], Tm1kanbanComponent.prototype, "_resize", null);
    Tm1kanbanComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-tm1kanban',
            template: __webpack_require__("./src/app/outstandingcase/pmkanban/tm1kanban/tm1kanban.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/pmkanban/tm1kanban/tm1kanban.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_app_common_service_api_api_service__["a" /* ApiService */], __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer2"]])
    ], Tm1kanbanComponent);
    return Tm1kanbanComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/b1-pecvd/b1-pecvd.component.css":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/b1-pecvd/b1-pecvd.component.html":
/***/ (function(module, exports) {

module.exports = "<!--\n<h1  align='center'>\n  PECVDå¹´åº¦ç¨¼å¨ç\n</h1>\n<div class=\"ui-g\">\n        <div echarts ></div>\n<div class=\"ui-g\">\n <div  class=\"ui-g-11 ui-g-offset-1\">\n    <div echarts  id=\"pecvdyear\" [options]=\"yearOpt\" class=\"demo-echart\" style=\"width:1000px;height:300px ;\"></div>\n</div>\n</div>\n\n\n<h1 class='ui-g' align='center'>\n        PECVDè®¾å¤ç¨¼å¨ç-2018\n</h1>\n<div> \n  <div echarts   id=\"pecvdmonth\" [options]=\"monthOpt\"  (chartClick)=\"getDayOee($event)\"   class=\"demo-echart\" style=\"width:1000px;height:300px ;\"></div>\n</div>\n\n<h1  align='center'>\n        PECVDè®¾å¤ç¨¼å¨ç-2018.08\n</h1>\n\n<div>\n\n    <div echarts  id=\"pecvdday\" [options]=\"dayOpt\" class=\"demo-echart\" style=\"width:600px;height:300px ;\"></div>\n</div>\n\n<h1  align='center'>\n    PECVDè®¾å¤ç¨¼å¨ç-2018.08\n</h1>\n\n<div>\n\n<div echarts  id=\"pecvd365\" [options]=\"opt365\" class=\"demo-echart\" style=\"width:1000px;height:300px ;\"></div>\n</div>\n-->\n\n<!--\n<h1  align='center'>\n    PECVDè®¾å¤ç¨¼å¨ç-2018.08-....2\n</h1>\n<div>\n    <div echarts  id=\"day2\" [options]=\"day2Opt\" class=\"demo-echart\" style=\"width:1000px;height:300px ;\">    </div>\n</div>\n-->\n<div class=\"ui-g\">\n  <div class=\"ui-g-12\" #fullScreenTarget>           \n    <p-panel>                                       \n        <p-header>                                    \n            <div class=\"ui-helper-clearfix\">            \n                <span class=\"ui-panel-title\"> PECVDå¹´åº¦ç¨¼å¨ç</span>  \n                    <!--è¡¨å¤´ button label calender-->          \n             </div>                                      \n        </p-header>                                   \n<!-- echart--> <div echarts  id=\"pecvdyear\" [options]=\"yearOpt\" class=\"demo-echart\" ></div>                            \n    </p-panel>                                      \n</div>   \n<div class=\"ui-g-12\" #fullScreenTarget>           \n                <p-panel>                                       \n                    <p-header>                                    \n                        <div class=\"ui-helper-clearfix\">            \n                            <span class=\"ui-panel-title\"> PECVDè®¾å¤ç¨¼å¨ç</span>  \n                                <!--è¡¨å¤´ button label calender-->          \n                         </div>                                      \n                    </p-header>                                   \n                 <div echarts   id=\"pecvdmonth\" [options]=\"monthOpt\"  (chartClick)=\"getDayOee($event)\"   class=\"demo-echart\" ></div>                          \n                </p-panel>                                      \n            </div>   \n  <div class=\"ui-g-12\" #fullScreenTarget>           \n    <p-panel>                                       \n        <p-header>                                    \n            <div class=\"ui-helper-clearfix\">            \n                <span class=\"ui-panel-title\"> PECVDè®¾å¤ç¨¼å¨ç</span>  \n                    <!--è¡¨å¤´ button label calender-->          \n             </div>                                      \n        </p-header>                                   \n<!-- echart-->  <div echarts  id=\"pecvdday\" [options]=\"dayOpt\" class=\"demo-echart\" ></div>                         \n    </p-panel>                                      \n</div>   \n\n\n<div class=\"ui-g-12\" #fullScreenTarget>           \n    <p-panel>                                       \n        <p-header>                                    \n            <div class=\"ui-helper-clearfix\">            \n                <span class=\"ui-panel-title\"> PECVDè®¾å¤ç¨¼å¨ç</span>  \n                    <!--è¡¨å¤´ button label calender-->          \n             </div>                                      \n        </p-header>                                   \n<!-- echart--> <div echarts  id=\"pecvd365\" [options]=\"opt365\" class=\"demo-echart\" ></div>                                \n    </p-panel>                                      \n</div>                                            \n      \n\n</div><!--class=\"ui-g\"-->\n\n\n\n"

/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/b1-pecvd/b1-pecvd.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return B1PecvdComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_app_common_service_echart_service__ = __webpack_require__("./src/app/common/service/echart.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_app_outstandingcase_transparent_display_b1_pecvd_boe_service__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b1-pecvd/boe.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_app_outstandingcase_transparent_display_b1_pecvd_pecvd__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b1-pecvd/pecvd.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var B1PecvdComponent = /** @class */ (function () {
    // yearOpt = mdlOption ;
    // monthOpt = mdlOption ;
    // dayOpt = mdlOption;
    function B1PecvdComponent(service, echartService) {
        this.service = service;
        this.echartService = echartService;
    }
    B1PecvdComponent.prototype.ngOnInit = function () {
        this.myChart = this.echartService.init(document.getElementById('pecvdyear'));
        this.myChart.showLoading();
        this.getYearOee();
        this.getMontOee(this.getParams('year'));
        this.getDayOee(this.getParams('month'));
        this.get365Oee(this.getParams('year'));
        this.myChart.hideLoading();
    };
    B1PecvdComponent.prototype.getYearOee = function () {
        var _this = this;
        // this.yearOpt = yearOption;
        var url = '/assets/demo/data/b1/pecvd-year-oee.json';
        this.service.testGet(url).subscribe(
        //  this.service.getAll('/pecvd/query/year').subscribe(
        function (res) {
            _this.yearOpt = _this.convertJsonToEchart(__WEBPACK_IMPORTED_MODULE_3_app_outstandingcase_transparent_display_b1_pecvd_pecvd__["a" /* mdlOption */], res, 'year');
            // myChart.hideLoading();
            _this.myChart.setOption(_this.yearOpt);
            console.log(" this.monthOpt : " + _this.monthOpt.xAxis[0].data);
        }, function (error) {
            console.log(error);
        });
    };
    B1PecvdComponent.prototype.getMontOee = function (params) {
        var _this = this;
        //this.monthOpt = monthOption;
        console.log("getMontOee");
        //  console.log("params.name: " +params.name );
        var url = '/assets/demo/data/b1/pecvd-month-oee.json';
        this.service.testGet(url).subscribe(
        // this.service.getAll('/pecvd/query/month?timekey=2018').subscribe(
        function (res) {
            _this.monthOpt = _this.convertJsonToEchart(__WEBPACK_IMPORTED_MODULE_3_app_outstandingcase_transparent_display_b1_pecvd_pecvd__["a" /* mdlOption */], res, 'month');
            var myChart = _this.echartService.init(document.getElementById('pecvdmonth'));
            myChart.setOption(_this.monthOpt);
            console.log(" this.monthOpt : " + _this.monthOpt.xAxis[0].data);
        }, function (error) {
            console.log(error);
        });
    };
    B1PecvdComponent.prototype.getDayOee = function (params) {
        var _this = this;
        console.log("getDayOee");
        console.log("params :" + params.name);
        // this.dayOpt = mdlOption;
        var timek = params.name.toString();
        var url = '/assets/demo/data/b1/pecvd-day-oee.json';
        this.service.testGet(url).subscribe(
        //this.service.getAll('/pecvd/query/day?timekey=' + timek).subscribe(
        function (res) {
            _this.dayOpt = _this.convertJsonToEchart(__WEBPACK_IMPORTED_MODULE_3_app_outstandingcase_transparent_display_b1_pecvd_pecvd__["a" /* mdlOption */], res, 'day');
            var myChart = _this.echartService.init(document.getElementById('pecvdday'));
            myChart.setOption(_this.dayOpt);
            console.log("dayOpt.xAxis[0].data :" + _this.dayOpt.xAxis[0].data);
        }, function (error) {
            console.log("error: " + error);
        });
    };
    B1PecvdComponent.prototype.get365Oee = function (params) {
        var _this = this;
        var timek = params.name.toString();
        var url = '/assets/demo/data/b1/pecvd-year365-oee.json';
        this.service.testGet(url).subscribe(
        //this.service.getAll('/pecvd/query/day?timekey=' + timek).subscribe(
        function (res) {
            _this.opt365 = _this.convertJsonToEchart(__WEBPACK_IMPORTED_MODULE_3_app_outstandingcase_transparent_display_b1_pecvd_pecvd__["a" /* mdlOption */], res, 'day');
            var myChart = _this.echartService.init(document.getElementById('pecvd365'));
            myChart.setOption(_this.opt365);
            console.log("dayOpt.xAxis[0].data :" + _this.dayOpt.xAxis[0].data);
        }, function (error) {
            console.log("error: " + error);
        });
    };
    // getDayOee2(params){
    //   console.log("getDayOee2");
    //  // console.log("params :" + params.name);
    //  // this.dayOpt = mdlOption;
    //   this.service.getAll('/pecvd/query/day?timekey=201808').subscribe(
    //      (res) => {
    //     // this.convertJsonToEchart(mdlOption,res,'day');
    //     this.dayOpt= this.convertJsonToEchart(this.dayOpt,res,'day')
    //     const myChart = this.echartService.init(document.getElementById('pecvdday'));
    //     myChart.setOption(this.dayOpt);
    //     console.log(" dayOpt.xAxis[0].data :"+ this.dayOpt.xAxis[0].data)
    //      },
    //      (error) => {
    //        console.log("error: " +error);
    //      }
    //    );
    //  }
    B1PecvdComponent.prototype.convertJsonToEchart = function (myoption, res, flag) {
        /*name:'E_TIME',
        type:'bar',
        stack: 'PVX',
        data:[]*/
        console.log("res: " + JSON.stringify(res));
        var pvx = res['pvx'];
        var multi = res['multi'];
        for (var j = 0; j < myoption.series.length; j++) {
            for (var kv in pvx) {
                var strKey = kv.toString().toUpperCase();
                if (strKey == myoption.series[j].name.toString() && 'pvx' == myoption.series[j].stack.toString()) {
                    myoption.series[j].data = pvx[kv];
                }
            }
            for (var kv in multi) {
                var strKey = kv.toString().toUpperCase();
                if (strKey == myoption.series[j].name && 'multi' == myoption.series[j].stack) {
                    myoption.series[j].data = multi[kv];
                }
            }
        }
        myoption.xAxis[0].data = pvx['date'];
        return myoption;
    };
    B1PecvdComponent.prototype.getParams = function (flag) {
        // var myDate = new Date();
        //   //è·åå½åå¹´ä»½(2ä½)
        // myDate.getFullYear();    //è·åå®æ´çå¹´ä»½(4ä½,1970-????)
        // myDate.getMonth();       //è·åå½åæä»½(0-11,0ä»£è¡¨1æ)
        // myDate.getDate();        //è·åå½åæ¥(1-31)
        // myDate.getDay();         //è·åå½åææX(0-6,0ä»£è¡¨ææå¤©)
        // myDate.getTime();        //è·åå½åæ¶é´(ä»1970.1.1å¼å§çæ¯«ç§æ°)
        // myDate.getHours();       //è·åå½åå°æ¶æ°(0-23)
        // myDate.getMinutes();     //è·åå½ååéæ°(0-59)
        // myDate.getSeconds();     //è·åå½åç§æ°(0-59)
        // myDate.getMilliseconds();    //è·åå½åæ¯«ç§æ°(0-999)
        // myDate.toLocaleDateString();     //è·åå½åæ¥æ
        // var mytime=myDate.toLocaleTimeString();     //è·åå½åæ¶é´
        // myDate.toLocaleString( );        //è·åæ¥æä¸æ¶é´
        var myDate = new Date();
        var nameValue = '';
        if ('month' == flag) {
            var strMonth = (100 + myDate.getMonth() + 1).toString().substring(1);
            nameValue = myDate.getFullYear().toString() + strMonth;
        }
        else if ('year' == flag) {
            nameValue = myDate.getFullYear().toString(); //è·åå®æ´çå¹´ä»½(4ä½,1970-????)
        }
        var params = { name: nameValue };
        return params;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('pecvdyear'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], B1PecvdComponent.prototype, "echartsYear", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('pecvdmonth'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], B1PecvdComponent.prototype, "echartsMonth", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('pecvdday'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], B1PecvdComponent.prototype, "echartsday", void 0);
    B1PecvdComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-b1-pecvd',
            template: __webpack_require__("./src/app/outstandingcase/transparent-display/b1-pecvd/b1-pecvd.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/transparent-display/b1-pecvd/b1-pecvd.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_app_outstandingcase_transparent_display_b1_pecvd_boe_service__["a" /* BoeService */], __WEBPACK_IMPORTED_MODULE_1_app_common_service_echart_service__["a" /* EchartService */]])
    ], B1PecvdComponent);
    return B1PecvdComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/b1-pecvd/boe.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BoeService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common_http__ = __webpack_require__("./node_modules/@angular/common/esm5/http.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var BoeService = /** @class */ (function () {
    function BoeService(http) {
        this.http = http;
        this.boeUrl = '/boe';
    }
    // select all
    BoeService.prototype.getAll = function (url) {
        return this.http.get(this.boeUrl + url);
    };
    // select parameter
    BoeService.prototype.get = function (url, data) {
        return this.http.post(this.boeUrl + url, data);
    };
    // insert
    BoeService.prototype.post = function (url, data) {
        return this.http.post(this.boeUrl + url, data);
    };
    // update
    BoeService.prototype.put = function (url, data) {
        return this.http.put(this.boeUrl + url, data);
    };
    // delete
    BoeService.prototype.delete = function (url, data) {
        return this.http.delete(this.boeUrl + url, data);
    };
    /// getOne
    BoeService.prototype.getOne = function (url, option) {
        // getOne('/demo/check/session', [{"id":"test","pwd":"1234"}]  ) ;
        return this.http.get(this.boeUrl + url, option);
    };
    BoeService.prototype.testGet = function (url) {
        return this.http.get(url);
    };
    BoeService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_common_http__["b" /* HttpClient */]])
    ], BoeService);
    return BoeService;
}());



/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/b1-pecvd/pecvd.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return mdlOption; });
var mdlOption = {
    tooltip: {
        trigger: 'axis',
        axisPointer: {
            type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
        }
    },
    legend: {
        data: ['RUN', 'IDLE', 'ETC', 'E_TIME', 'PM', 'DOWN']
    },
    grid: {
        left: '3%',
        right: '4%',
        bottom: '3%',
        containLabel: true
    },
    xAxis: [
        {
            type: 'category',
            data: []
        }
    ],
    yAxis: [
        {
            type: 'value',
            max: 1
        }
    ],
    series: [
        {
            name: 'RUN',
            type: 'bar',
            stack: 'pvx',
            data: [],
            itemStyle: { normal: { color: '#9ACD32' } }
        },
        {
            name: 'IDLE',
            type: 'bar',
            stack: 'pvx',
            data: [],
            itemStyle: { normal: { color: '#EEDD82 ' } }
        },
        {
            name: 'ETC',
            type: 'bar',
            stack: 'pvx',
            data: [],
            itemStyle: { normal: { color: '#CD8500' } }
        },
        {
            name: 'E_TIME',
            type: 'bar',
            stack: 'pvx',
            data: [],
            itemStyle: { normal: { color: '#87CEFA' } }
        },
        {
            name: 'PM',
            type: 'bar',
            stack: 'pvx',
            data: [],
            itemStyle: { normal: { color: '#009ACD' } }
        },
        {
            name: 'DOWN',
            type: 'bar',
            stack: 'pvx',
            data: [],
            itemStyle: { normal: { color: '#FF0000' } }
        },
        {
            name: 'RUN',
            type: 'bar',
            stack: 'multi',
            data: [],
            itemStyle: { normal: { color: '#9ACD32' } }
        },
        {
            name: 'IDLE',
            type: 'bar',
            stack: 'multi',
            data: [],
            itemStyle: { normal: { color: '#EEDD82 ' } }
        },
        {
            name: 'ETC',
            type: 'bar',
            stack: 'multi',
            data: [],
            itemStyle: { normal: { color: '#CD8500' } }
        },
        {
            name: 'E_TIME',
            type: 'bar',
            stack: 'multi',
            data: [],
            itemStyle: { normal: { color: '#87CEFA' } }
        }, {
            name: 'PM',
            type: 'bar',
            stack: 'multi',
            data: [],
            itemStyle: { normal: { color: '#009ACD' } }
        },
        {
            name: 'DOWN',
            type: 'bar',
            stack: 'multi',
            data: [],
            itemStyle: { normal: { color: '#FF0000' } }
        }
    ]
};


/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/b4-wip/b4-wip.component.css":
/***/ (function(module, exports) {

module.exports = ".setTableHeader{\r\n    width: 60px !important;\r\n    height: 100px !important;\r\n    padding-left: 0% !important;\r\n    text-align: center !important;\r\n    font-size: 1px !important;\r\n   \r\n}\r\n.touming {\r\n    background-color:rgba(0,0,0,0.1)!important;\r\n    color: #F2F6FA!important;\r\n}\r\n.touming1 {\r\n    background-color:#121e38!important;\r\n    color: #F2F6FA!important;\r\n}\r\nth {\r\n    font-size: 1px !important;\r\n    border: 1px solid #455e9c !important;\r\n    font-weight: initial !important;\r\n    padding: .625em .175em !important;\r\n}\r\n#operation:hover {\r\n    background-color: #314879 !important; \r\n    cursor: pointer;\r\n}\r\n.font {\r\n    font-weight: bold!important;\r\n    color: rgb(182, 182, 252)!important;\r\n}\r\n.title {\r\n    font-size:16px!important;\r\n    font-weight: bold!important;\r\n    color: rgb(182, 182, 252)!important;\r\n}\r\n.font2 {\r\n    color: rgb(182, 182, 252)!important;\r\n}\r\ntd {\r\n    font-size: 1px !important;\r\n    border: 1px solid #455e9c !important;\r\n    font-weight: initial !important;\r\n    padding: .625em .175em !important;\r\n    width:2.75%!important;\r\n    text-align:center!important;\r\n}\r\n.noborder {\r\n    border: 0px !important;\r\n}\r\n.setCFOption{\r\n    width: 56% !important;\r\n    height: 800px !important;\r\n    padding-left: 2% !important;\r\n   \r\n}\r\n.setCFPH1Option{\r\n    width: 36% !important;\r\n    padding-left: 60% !important;\r\n    margin-top: -55% !important;\r\n\r\n}\r\n.setCFPH2Option{\r\n    width: 36% !important;\r\n    padding-left: 60% !important;\r\n  margin-top: -1% !important;\r\n}\r\n.setCellOption{\r\n    width: 43% !important;\r\n    height: 440px !important;\r\n    padding-left: 2% !important;\r\n}\r\n.setCellBothOption{\r\n    width: 50% !important;\r\n    height: 440px !important;\r\n    padding-left: 45% !important;\r\n    margin-top: -30% !important;\r\n}\r\n.setClSearch{\r\n    position: absolute !important;\r\n    padding-left: 60% !important;\r\n   margin-top: -12% !important;\r\n    color: white !important;\r\n}"

/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/b4-wip/b4-wip.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"ui-g\" style=\"height:100vh;\">\n  <div class=\"ui-g-12\" style=\"height:20vh;background-image: url('assets/picture/background/b4/bg3_01.png');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;\">\n    <h2 style=\"color:#F2F6FA;margin-top: 1.5vh;text-align: center\">çº¿ä½WIPåå¸</h2>\n    <div style=\"width:23%;text-align:center\">\n      <h3 style=\"color: #F2F6FA;margin-top: 2vh;\">{{title_yiji}}</h3>\n    </div>\n  </div>\n  <!-- echart chart1 area å¨è¿éç»äºarray_wipçå¾-->\n  <div class=\"ui-g-12\" style=\"height:70vh;background-image: url('assets/picture/background/b4/bg3_02.png');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;\">\n    <div *ngIf=\"wipTableIsShow\">\n      <!-- ä¸é¢æ¯å³ä¸è§çåæ¢çæé® -->\n      <!-- <div style=\"position: absolute;top:26%;right:7%;color: #F2F6FA\"> -->\n        <!-- <button pButton label='AR' (click)=\"changeToArrayWip()\"></button> -->\n        <!-- <button pButton label='CF' (click)=\"changeToCfWip()\"></button>\n        <button pButton label='CL' (click)=\"changeToCellWip()\"></button> -->\n        <!-- <button pButton label='å½å' (click)=\"showCurrentWip()\"></button> -->\n      <!-- </div> -->\n      <!-- ä¸é¢æ¯å³ä¸è§ç æ¯æ¥ wipçæ»æ°çå±ç¤º -->\n      <div style=\"position:absolute;right:5%;color: #F2F6FA;font-weight: bold\">\n        <div *ngFor=\"let sumnum of data_date_before_sum_str\">{{sumnum}}</div>\n      </div>\n      <!-- ä¸é¢æ¯ array  cf cell çåºæ¬çæ±ç¶å¾-->\n      <div echarts [options]=\"chartOption_wip\" class=\"demo-chart\" [ngStyle]=\"{'height':'590px'}\" [ngClass]=\"{setCFOption:isCfPH,setCellOption:isCellBoth}\" (chartClick)=\"onClickChart($event)\"></div>  \n    </div>\n\n    <div [ngClass]=\"{setCFPH1Option:isCfPH}\">\n      <!-- ä¸é¢æ¯ cf PH1 çæ±ç¶å¾-->\n      <div *ngIf=\"isCfPH\" echarts [options]=\"chartOption_wip_cf_PH1\" class=\"demo-chart\" [ngStyle]=\"{'height':'251px'}\" ></div>\n    </div>\n      <!-- ä¸é¢æ¯ cf PH2 çæ±ç¶å¾-->\n      <div *ngIf=\"isCfPH\"echarts [options]=\"chartOption_wip_cf_PH2\" class=\"demo-chart\" [ngStyle]=\"{'height':'420px'}\" [ngClass]=\"{setCFPH2Option:isCfPH}\"></div>\n\n       <!-- ä¸é¢æ¯ cell å¯ä»¥è¿è¡ç­é çæ±ç¶å¾-->\n       <div *ngIf=\"isCellBoth\" echarts [options]=\"chartOption_wip_cl_both\" class=\"demo-chart\" [ngStyle]=\"{'height':'450px'}\" [ngClass]=\"{setCellBothOption:isCellBoth}\"></div>\n       \n        <!-- å¤éä¸ææ¡ cell çä¸ææ¡ PCS\tPCL -->\n        <div *ngIf=\"isCellBoth\" [ngClass]=\"{setClSearch:true}\">\n            <strong>è¯·éæ© : &nbsp;&nbsp;</strong>\n            <p-multiSelect [options]=\"LineName\" [(ngModel)]=\"selectedNames\" [panelStyle]=\"{minWidth:'10em'}\"\n                scrollHeight=\"200px\">\n                <!-- ä¸é¢è¿ä¸ªå°æ¹æ¯è®¾ç½®è¢«éä¸­çåå®¹-->\n                <ng-template let-values pTemplate=\"selectedItems\">\n                    <div *ngFor=\"let val of values\" class=\"ui-multiselected-item-token ui-corner-all\">\n                        <span>{{val}}</span>\n                    </div>\n                    <span *ngIf=\"!value || value.length === 0\" class=\"ui-multiselected-empty-token ui-corner-all\">Code</span>\n                </ng-template>\n                <!--ä¸é¢è¿ä¸ªå°æ¹æ¯ç°å®ä¸æåè¡¨çåå®¹-->\n                <ng-template let-linename pTemplate=\"item\">\n                    <div style=\"font-size:14px;float:right;margin-top:4px\">{{linename.value}}</div>\n                </ng-template>\n            </p-multiSelect>\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <button pButton icon='fa fa-search' iconPos='left' label='Search' (click)=\"searchCell()\"></button>\n        </div>\n        <!-- å¤éä¸ææ¡ å¤éä¸ææ¡ cell çä¸ææ¡ PCS\tPCL  end -->\n    <!-- end echart chart1 area -->\n\n    <!-- data gride of current wip ä¸çº§è§å¾ -->\n    <div *ngIf=\"CurrentWipTableIsShow\" #mytable style=\"margin-bottom: 1%\">\n\n      <!-- <div style=\"position: absolute;top:16%;right:7%;color: #F2F6FA\">\n        <button style=\"position: absolute;top:16%;right:7%;color: #F2F6FA\" pButton (click)=\"closeTable()\" label=\"è¿å\"></button>\n      </div> -->\n\n      <div style=\"margin-left: 66px;margin-right: 58px;\">\n        <button style=\"right:-95%;color: #F2F6FA\" pButton (click)=\"closeTable()\" label=\"è¿å\"></button>\n        <p-table [columns]=\"data_array_current_cols\" [value]=\"data_array_current\" [scrollable]=\"true\" [frozenColumns]=\"fronzecols\"\n          frozenWidth=\"120px\" scrollHeight=\"381px\" dataKey=\"Key\" #chartGride>\n          <ng-template pTemplate=\"colgroup\" let-columns>\n            <colgroup>\n              <col *ngFor=\"let col of columns\" style=\"width:120px\">\n            </colgroup>\n          </ng-template>\n          <ng-template pTemplate=\"header\" let-columns class=\"noborder\">\n            <tr>\n              <th *ngFor=\"let col of columns\" [ngClass]=\"{setTableHeader : true}\" id=\"operation\" class=\"touming1\"\n                (click)=\"toThirdTable($event)\">\n                {{col.header}}\n              </th>\n            </tr>\n          </ng-template>\n\n          <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n            <tr>\n              <td *ngFor=\"let col of columns;\" class=\"touming1\">\n                {{rowData[col.field]}}\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n      <!-- end data gride area -->\n    </div>\n    <div *ngIf=\"CurrentWipTableIsShowCL\" #mytable style=\"margin-bottom: 1%\">\n\n      <div style=\"position: absolute;top:26%;right:7%;color: #F2F6FA\">\n        <button pButton (click)=\"closeTable()\" label=\"è¿å\"></button>\n      </div>\n\n      <div style=\"margin-left: 66px;margin-right: 58px;\">\n        <p-table [columns]=\"data_array_current_cols\" [value]=\"data_array_current\" [scrollable]=\"true\" scrollHeight=\"404px\"\n          dataKey=\"Key\" #chartGride>\n          <ng-template pTemplate=\"header\" let-columns class=\"noborder\">\n            <tr>\n              <th *ngFor=\"let col of columns\" [ngClass]=\"{setTableHeader : true}\" id=\"operation\" class=\"touming1\"\n                (click)=\"toThirdTable($event)\">\n                {{col.header}}\n              </th>\n            </tr>\n          </ng-template>\n\n          <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n            <tr>\n              <td *ngFor=\"let col of columns;\" class=\"touming1\">\n                {{rowData[col.field]}}\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n      <!-- end data gride area -->\n    </div>\n    <!-- data gride of current wip end -->\n\n    <!-- data gride area äºçº§è§å¾-->\n    <div style=\"margin-left: 5%;margin-right: 5%;\" *ngIf=\"CurrentWipStationTableIsShow\" #mytable>\n      <!-- <div style=\"position: absolute;top:26%;right:7%;color: #F2F6FA\">\n        <button pButton type=\"button\" (click)=\"closeTableSecond()\" label=\"è¿å\"></button>\n      </div> -->\n      <div class=\"ui-panel-content\">\n        <!-- if you use selection, you must set datakey -->\n        <button pButton style=\"right:-95%;color: #F2F6FA\" type=\"button\" (click)=\"closeTableSecond()\" label=\"è¿å\"></button>\n        <p-table #chartGride [autoLayout]=\"true\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th [attr.colspan]=\"lengthhead\" class=\"touming title\">{{clickName}}</th>\n            </tr>\n            <tr>\n              <th [attr.rowspan]=\"rowSpan\" class=\"touming font\">{{timestrOnSecondTable}}</th>\n            </tr>\n            <tr>\n              <th class=\"touming font\">{{thirdName}}</th>\n              <th *ngFor=\"let eqpid of eqp_id\" class=\"touming font2\">{{eqpid}}</th>\n            </tr>\n            <tr *ngIf=\"thirdStateIsShow\">\n              <th class=\"touming font\">ç¶æ</th>\n              <th *ngFor=\"let eqpstate of eqp_state\" class=\"touming font2\">{{eqpstate}}</th>\n            </tr>\n            <tr>\n              <th [attr.rowspan]=\"modeltypeNumber\" class=\"touming font\">åå·</th>\n            </tr>\n            <tr *ngFor=\"let modeltypewip of stationWipMessage\">\n              <!-- {{modeltypewip.glassqtys}} -->\n              <th class=\"touming font\">{{modeltypewip.modeltype}}</th>\n              <th *ngFor=\"let wipnumber of modeltypewip.glassqtys\" class=\"touming\">{{wipnumber}}</th>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n    <!-- end data gride area -->\n  </div>\n  <div class=\"ui-g-12\" style=\"height:10vh;background-image: url('assets/picture/background/b4/bg3_03.png');background-repeat:no-repeat; background-size:100% 100%;-moz-background-size:100% 100%;\"></div>\n</div>"

/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/b4-wip/b4-wip.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return B4WipComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__report_ui_service_report_ui_common_service__ = __webpack_require__("./src/app/report-ui/service/report-ui-common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_service_fullscreen_service__ = __webpack_require__("./src/app/common/service/fullscreen.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_array_wip__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b4-wip/model/array_wip.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__model_cf_wip__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b4-wip/model/cf_wip.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__model_cell_wip__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b4-wip/model/cell_wip.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__model_sum_wip__ = __webpack_require__("./src/app/outstandingcase/transparent-display/b4-wip/model/sum_wip.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var B4WipComponent = /** @class */ (function () {
    function B4WipComponent(apiService, reportComnService, fullscreen) {
        this.apiService = apiService;
        this.reportComnService = reportComnService;
        this.fullscreen = fullscreen;
        this.CurrentWipTableIsShowCL = false;
        this.LineName = [
            { label: 'PCS', value: 'PCS' },
            { label: 'PCL', value: 'PCL' }
        ];
        this.selectedNames = []; // ç¨æ¥ä¿å­è¢«éä¸­çéé¡¹ç
        //data_array_wip: array_wip[] = []; // è¿ä¸ªå¾æ ä¸­çæ°æ®ï¼ä»data_array_wip.jsonæä»¶ä¸­è¯»åºæ¥
        this.wip_operation = []; // ç¨æ¥ä¿å­ç«ç¹çæ°ç»ï¼ä¹å°±æ¯å¾è¡¨ä¸­çXè½´çæ å¿
        this.data_date_before_2 = []; // ä¸é¢è¿ä¸ä¸ªæ°ç»ç¨æ¥ä¿å­ä»æ°æ®åºè¯»åºæ¥çæ°æ®ï¼ä¸å¤©çï¼æ¯å¤©ä¸ä¸ªæ°ç»æ¥ä¿å­
        this.data_date_before_1 = [];
        this.data_date_before_0 = [];
        this.data_date_current = [];
        this.data_date_move = [];
        this.data_date_move_current = [];
        // ä¸é¢çè¿ä¸ªç¨æ¥ä¿å­ä¸é¢ç
        this.dataArray = [this.data_date_before_2, this.data_date_before_1, this.data_date_before_0,
            this.data_date_current, this.data_date_move, this.data_date_move_current];
        // ä¸é¢æ¯å¯¹ä¸å¤©çæ°æ®æ±åçåé
        this.data_date_before_2_sum = 0; // ä¸é¢è¿ä¸ä¸ªæ°ç»ç¨æ¥ä¿å­ä»æ°æ®åºè¯»åºæ¥çæ°æ®ï¼ä¸å¤©çï¼æ¯å¤©ä¸ä¸ªæ°ç»æ¥ä¿å­
        this.data_date_before_1_sum = 0;
        this.data_date_before_0_sum = 0;
        this.data_date_before_sum = [this.data_date_before_2_sum, this.data_date_before_1_sum, this.data_date_before_0_sum];
        this.data_date_before_sum_str = []; // ä¾å­ ï¼ 12æ¥ï¼185645
        // ä¸é¢çæ¯legendçæ¾ç¤º
        this.legends = []; //å®ä¹ä¸ä¸ªç¨æ¥å­æ¾legends çæ°ç»ï¼è¿ä¸ªéè¦æ ¹æ®å½åå·æ°çæ¶é´æ¥è¿è¡åå»º
        this.xAxisLegends = []; //å¤ä¸ªxè½´çæ ç­¾
        this.isCfPH = false; // è¿ä¸ªæ¯æ§å¶cfä¸¤æ¡äº§çº¿çæ°æ®æ¯å¦æ¾ç¤ºç
        this.wip_operation_cf_PH1 = []; // ç¨æ¥ä¿å­CF line ph1 ç«ç¹çæ°ç»ï¼ä¹å°±æ¯å¾è¡¨ä¸­çXè½´çæ å¿ ï¼ä¸å¤§å¾çæ¯ä¸æ ·ç
        this.data_date_before_2_cf_PH1 = []; // ä¸é¢è¿ä¸ä¸ªæ°ç»ç¨æ¥ä¿å­ä»æ°æ®åºè¯»åºæ¥çæ°æ®ï¼ä¸å¤©çï¼æ¯å¤©ä¸ä¸ªæ°ç»æ¥ä¿å­
        this.data_date_before_1_cf_PH1 = [];
        this.data_date_before_0_cf_PH1 = [];
        this.data_date_current_cf_PH1 = [];
        this.data_date_move_cf_PH1 = [];
        this.data_date_move_current_cf_PH1 = [];
        // ä¸é¢çè¿ä¸ªç¨æ¥ä¿å­ä¸é¢ç
        this.dataArray_cf_PH1 = [this.data_date_before_2_cf_PH1, this.data_date_before_1_cf_PH1, this.data_date_before_0_cf_PH1,
            this.data_date_current_cf_PH1, this.data_date_move_cf_PH1, this.data_date_move_current_cf_PH1];
        // ä¸é¢çæ¯legendçæ¾ç¤º
        this.legends_cf_PH1 = []; //å®ä¹ä¸ä¸ªç¨æ¥å­æ¾legends çæ°ç»ï¼è¿ä¸ªéè¦æ ¹æ®å½åå·æ°çæ¶é´æ¥è¿è¡åå»º
        this.xAxisLegends_cf_PH1 = []; //å¤ä¸ªxè½´çæ ç­¾
        this.wip_operation_cf_PH2 = []; // ç¨æ¥ä¿å­CF line ph1 ç«ç¹çæ°ç»ï¼ä¹å°±æ¯å¾è¡¨ä¸­çXè½´çæ å¿ ï¼ä¸å¤§å¾çæ¯ä¸æ ·ç
        this.data_date_before_2_cf_PH2 = []; // ä¸é¢è¿ä¸ä¸ªæ°ç»ç¨æ¥ä¿å­ä»æ°æ®åºè¯»åºæ¥çæ°æ®ï¼ä¸å¤©çï¼æ¯å¤©ä¸ä¸ªæ°ç»æ¥ä¿å­
        this.data_date_before_1_cf_PH2 = [];
        this.data_date_before_0_cf_PH2 = [];
        this.data_date_current_cf_PH2 = [];
        this.data_date_move_cf_PH2 = [];
        this.data_date_move_current_cf_PH2 = [];
        // ä¸é¢çè¿ä¸ªç¨æ¥ä¿å­ä¸é¢ç
        this.dataArray_cf_PH2 = [this.data_date_before_2_cf_PH2, this.data_date_before_1_cf_PH2, this.data_date_before_0_cf_PH2,
            this.data_date_current_cf_PH2, this.data_date_move_cf_PH2, this.data_date_move_current_cf_PH2];
        // ä¸é¢çæ¯legendçæ¾ç¤º
        this.legends_cf_PH2 = []; //å®ä¹ä¸ä¸ªç¨æ¥å­æ¾legends çæ°ç»ï¼è¿ä¸ªéè¦æ ¹æ®å½åå·æ°çæ¶é´æ¥è¿è¡åå»º
        this.xAxisLegends_cf_PH2 = []; //å¤ä¸ªxè½´çæ ç­¾
        this.isCellBoth = false; // è¿ä¸ªæ¯æ§å¶cellå¯ç­éæä½çæ±ç¶å¾çæ¾ç¤º
        this.wip_operation_cell_both = []; // ç¨æ¥ä¿å­cellå¯ç­éç«ç¹çæ°ç»ï¼ä¹å°±æ¯å¾è¡¨ä¸­çXè½´çæ å¿ ï¼ä¸å¤§å¾çæ¯ä¸æ ·ç
        this.data_date_before_2_cell_both = []; // ä¸é¢è¿ä¸ä¸ªæ°ç»ç¨æ¥ä¿å­ä»æ°æ®åºè¯»åºæ¥çæ°æ®ï¼ä¸å¤©çï¼æ¯å¤©ä¸ä¸ªæ°ç»æ¥ä¿å­
        this.data_date_before_1_cell_both = [];
        this.data_date_before_0_cell_both = [];
        this.data_date_current_cell_both = [];
        this.data_date_move_cell_both = [];
        this.data_date_move_current_cell_both = [];
        // ä¸é¢çè¿ä¸ªç¨æ¥ä¿å­ä¸é¢ç
        this.dataArray_cell_both = [this.data_date_before_2_cell_both, this.data_date_before_1_cell_both, this.data_date_before_0_cell_both,
            this.data_date_current_cell_both, this.data_date_move_cell_both, this.data_date_move_current_cell_both];
        // ä¸é¢çæ¯legendçæ¾ç¤º
        this.legends_cell_both = []; //å®ä¹ä¸ä¸ªç¨æ¥å­æ¾legends çæ°ç»ï¼è¿ä¸ªéè¦æ ¹æ®å½åå·æ°çæ¶é´æ¥è¿è¡åå»º
        this.xAxisLegends_cell_both = []; //å¤ä¸ªxè½´çæ ç­¾
        this.datatime = null; // å®ä¹ä¸ä¸ªæ¥æç±»:è¿ä¸ªæ¥æçå¯¹è±¡æ¯ä¸ä¸çº§è§å¾ï¼äºçº§è§å¾éç¨ç
        // è¿ä¸ªæ¥æï¼å¨æ¯æ¬¡å·æ°ï¼åæ¢çæ¶åï¼é½éè¦éæ°newä¸ä¸ªå½åå¯¹è±¡
        // å¶ä»çæ¶åï¼ä¸éè¦éæ°newï¼
        // mydatatimestr : string =  this.getTimeStr();//å­ç¬¦ä¸²çæ¶é´ï¼ç¨äºå½åwipçæä½
        this.timestrOnSecondTable = ''; // ä¸´æ¶ç¨å¨äºçº§è§å¾ä¸çæ¶é´
        /********ä¸é¢çæ¯èªå·±å®ä¹çechartå¾çåå®¹end*************** */
        /********ä¸é¢æ¯ç¨æ¥æ¾ç¤ºä¸çº§è§å¾çå½åarray_wipçè¡¨æ ¼çåå®¹***** */
        this.wipTableIsShow = true; //æ§å¶ä¸çº§æ±ç¶å¾æ¾ç¤º
        this.CurrentWipTableIsShow = false; //æ§å¶ä¸çº§å®æ¶wipè¡¨æ ¼æ¾ç¤º
        this.CurrentWipStationTableIsShow = false; //æ§å¶äºçº§ç«ç¹wipè¡¨æ ¼æ¾ç¤ºç
        this.CurrentWipStationTableIsShowCT = false;
        //current_time_key:string = this.datatimestr;//åæå½åçæ¶é´æ¾è¿æ¥ï¼ç®åè¿æ²¡æç¨å°
        this.data_array_current = []; //è¿ä¸ªç¨æ¥ä¿å­æ¯ä¸è¡çå¯¹è±¡çæ°ç»
        this.data_key = []; //è¿ä¸ªç¨æ¥ä¿å­modeltype:ä¹å°±æ¯æ¯ä¸ä¸ªå¯¹è±¡çkeyçå¼
        this.data_sum = []; //è¿ä¸ªç¨æ¥è®¡ç®æ¯ä¸åçå¼å¾æä½ï¼éè¦ä¸wip_operation,ådata_date_currentä¸¤ä¸ªæ°ç»è¿è¡ç»åæä½ï¼
        this.data_array_current_cols = [];
        this.fronzecols = [
            { field: 'Key', header: 'åå·' }
        ];
        this.data_array_current_keys = []; //ç¨æ¥åç¦»è·åå°çæ°æ®ç»æ key+æ°ç»
        this.data_array_current_nums = []; //ç¨æ¥åç¦»è·åå°çæ°æ®ç»æ key+æ°ç»
        this.isShowTable = false; //è¿ä¸ªæ¯æ§å¶æ´ä¸ªè¡¨çæ¾ç¤º ç
        this.eqp_id = []; //ç¨äºä¿å­è®¾å¤idçæ°ç»
        this.eqp_state = []; //ç¨äºä¿å­è®¾å¤ç¶æçæ°ç»
        this.modeltype = []; //ç¨äºä¿å­åå·çæ°ç»
        this.stationWipMessage = []; //ç¨äºä¿å­ä¸è¡ä¸è¡çæ°æ®
        this.rowSpan = 3; //è¿ä¸ªç¨æ¥æ§å¶è¡¨æ ¼æå çè¡çæ°é
        this.modeltypeNumber = 0; //è¿ä¸ªç¨æ¥è·ååå·çæ°é
        this.thirdName = 'è®¾å¤'; //æ§å¶è®¾å¤è¡çåç§°ï¼cellçæ¶åä¸å«è®¾å¤ï¼å«æä½åç§°
        this.thirdStateIsShow = true; // æ§å¶è®¾å¤ç¶æé£ä¸è¡æ¯ä¸æ¯æ¾ç¤ºï¼å½cell çæ¶åæ¯ä¸æ¾ç¤ºç
        /*********************ä¸é¢æ¯ç¨æ¥ç»äºçº§è¡¨æ ¼çåå®¹************ */
        this.title_yiji = "Array WIP";
        //é¿åº¦
        this.lengthhead = 0;
    }
    B4WipComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.wipTableIsShow = true; // åå§åå°±æ¾ç¤ºæ±ç¶å¾
        this.datatime = new Date(); // åå§åæ¶é´
        var datatimestr = this.getTimeStr(this.datatime); //è¿ä¸ªæ¶é´æ¯å¨è®¾ç½®ä¸çº§è§å¾çæ¶åä½¿ç¨ç
        //1.è¿éæ¯ä»åå°æ°æ®åºéé¢è¯»ååºæ¥çæ°æ®:æ´ä½ä¸é¢çæ°æ®
        var url_array_wip_home = '/assets/demo/data/B4/arraywip.json';
        this.apiService.testGet(url_array_wip_home).subscribe(function (res) {
            _this.getData(res); //è°ç¨è¿ä¸ªæ¹æ³ç¶åå°±å¾å°äºææçæ°æ®ä¿¡æ¯ï¼å¹¶ä¸å°ä¸é¢çåå®¹è¿è¡äºåå§å
            _this.createLegend(); //åå»ºlegendçä¿¡æ¯
            _this.getRowSumDate(); //æ±å
            _this.getRowSumStr(); //åå»ºä¿¡æ¯
            _this.set_WIP_Echart(_this.legends, _this.xAxisLegends, _this.dataArray, _this.wip_operation, _this.title_yiji, 90, datatimestr);
        }, function (error) { console.log("myerror " + error); });
    };
    /************åå»ºäºçº§è§å¾æ¶åï¼éè¦è½¬æ¢çæ¶é´æ ¼å¼ç****************** */
    B4WipComponent.prototype.getTimeSameToEchart = function (datatime) {
        var hourtimekey = '';
        var yearstr = datatime.getFullYear().toString();
        var month = datatime.getMonth() + 1;
        var date = datatime.getDate();
        var hour = datatime.getHours();
        var monthstr = '';
        var datestr = '';
        var hourstr = '';
        if (month > 9) {
            monthstr = month + '';
        }
        else {
            monthstr = '0' + month;
        }
        if (date > 9) {
            datestr = date + '';
        }
        else {
            datestr = '0' + date;
        }
        if (hour > 9) {
            hourstr = hour + '';
        }
        else {
            hourstr = '0' + hour;
        }
        hourtimekey = yearstr + monthstr + datestr + hourstr;
        return hourtimekey;
    };
    /************åå»ºäºçº§è§å¾æ¶åï¼éè¦è½¬æ¢çæ¶é´æ ¼å¼çend************** */
    B4WipComponent.prototype.getData = function (data) {
        //å¨getDataä¹åï¼åæææçæ°ç»é½æ´ç©º
        this.wip_operation = [];
        this.data_date_before_2 = [];
        this.data_date_before_1 = [];
        this.data_date_before_0 = [];
        this.data_date_current = [];
        this.data_date_move = [];
        this.data_date_move_current = [];
        this.dataArray = [this.data_date_before_2, this.data_date_before_1, this.data_date_before_0,
            this.data_date_current, this.data_date_move, this.data_date_move_current];
        if (Array.isArray(data)) {
            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
                var list = data_1[_i];
                for (var value in list) {
                    if (value == 'oper_desc') {
                        this.wip_operation.push(list[value]);
                    }
                    if (value == 'date_before_2') {
                        this.data_date_before_2.push(list[value]);
                    }
                    if (value == 'date_before_1') {
                        this.data_date_before_1.push(list[value]);
                    }
                    if (value == 'date_before_0') {
                        this.data_date_before_0.push(list[value]);
                    }
                    if (value == 'date_current') {
                        this.data_date_current.push(list[value]);
                    }
                    if (value == 'date_move') {
                        this.data_date_move.push(list[value]);
                    }
                    if (value == 'date_move_current') {
                        this.data_date_move_current.push(list[value]);
                    }
                }
            }
        }
        console.log(this.dataArray);
    };
    /********* ä¸ä¸ªæ ¹æ®æ¥æåå»ºlegend æ ç­¾åå­ å å¤ä¸ªxè½´ åå­ç çæä½************************** */
    B4WipComponent.prototype.createLegend = function () {
        this.legends = [];
        this.xAxisLegends = [];
        var today = new Date(); // ç°å¨ç
        var day_1 = new Date(); // ä¸ä¸å¤©ç
        var day_2 = new Date(); //ä¸ä¸¤å¤©ç
        var date = today.getDate();
        var hour = today.getHours();
        if (hour > 5) {
            day_2.setDate(today.getDate() - 3);
            day_1.setDate(today.getDate() - 2);
            today.setDate(today.getDate() - 1);
        }
        else {
            day_2.setDate(today.getDate() - 4);
            day_1.setDate(today.getDate() - 3);
            today.setDate(today.getDate() - 2);
        }
        //è¿ä¸ªæ¯å¤ä¸ªxè½´ç
        this.xAxisLegends.push(day_2.getDate() + 'æ¥');
        this.xAxisLegends.push(day_1.getDate() + 'æ¥');
        this.xAxisLegends.push(today.getDate() + 'æ¥');
        this.xAxisLegends.push('å®æ¶');
        if (this.title_yiji == 'CF WIP' || this.title_yiji == 'Cell WIP') {
            this.xAxisLegends.push(today.getDate() + 'æ¥');
            this.xAxisLegends.push('å®æ¶');
        }
        //legendsçæ ç­¾ç
        this.legends.push(day_2.getDate() + 'æ¥wip');
        this.legends.push(day_1.getDate() + 'æ¥wip');
        this.legends.push(today.getDate() + 'æ¥wip');
        this.legends.push('å®æ¶wip');
        this.legends.push(today.getDate() + 'æ¥move');
        this.legends.push('å®æ¶move');
    };
    /***********è®¡ç®æ¯ä¸è¡ç SUM çåå®¹******************** */
    B4WipComponent.prototype.getRowSumDate = function () {
        this.data_date_before_2_sum = 0;
        this.data_date_before_1_sum = 0;
        this.data_date_before_0_sum = 0;
        this.data_date_before_sum = [];
        for (var _i = 0, _a = this.data_date_before_2; _i < _a.length; _i++) {
            var a = _a[_i];
            this.data_date_before_2_sum += a;
        }
        for (var _b = 0, _c = this.data_date_before_1; _b < _c.length; _b++) {
            var a = _c[_b];
            this.data_date_before_1_sum += a;
        }
        for (var _d = 0, _e = this.data_date_before_0; _d < _e.length; _d++) {
            var a = _e[_d];
            this.data_date_before_0_sum += a;
        }
        this.data_date_before_sum.push(this.data_date_before_2_sum, this.data_date_before_1_sum, this.data_date_before_0_sum);
    };
    B4WipComponent.prototype.getRowSumStr = function () {
        this.data_date_before_sum_str = [];
        for (var i = 0; i < 3; i++) {
            var d = this.xAxisLegends[i];
            var s = this.data_date_before_sum[i];
            var ds = d + " : " + s;
            this.data_date_before_sum_str.push(ds);
        }
    };
    /* **********è®¡ç®æ¯ä¸è¡ç SUM çåå®¹end ************** */
    // echart setting function
    B4WipComponent.prototype.set_WIP_Echart = function (legendname, xlegends, datap, xAxisName, title_text, rotatem, datatime) {
        console.log('11');
        console.log(xlegends);
        console.log('11');
        this.chartOption_wip = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
                }
            },
            legend: {
                data: legendname,
                top: '0%',
                textStyle: {
                    color: '#F2F6FA'
                }
            },
            //calculable: true,
            grid: {
                left: '5%',
                right: '3.4%',
                bottom: '47%',
            },
            xAxis: [
                {
                    type: 'category',
                    data: xAxisName,
                    axisTick: {
                        length: 0,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLine: {
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        interval: 0,
                        rotate: 30,
                        formatter: function (value) {
                            var ret = ""; // æ¼æ¥å \nè¿åçç±»ç®é¡¹
                            var maxLength = 21; // æ¯é¡¹æ¾ç¤ºæå­ä¸ªæ°
                            var valLength = value.length; //Xè½´ç±»ç®é¡¹çæå­ä¸ªæ°
                            var rowN = Math.ceil(valLength / maxLength); // ç±»ç®é¡¹éè¦æ¢è¡çè¡æ°
                            if (rowN > 1) {
                                for (var i = 0; i < rowN; i++) {
                                    var temp = ""; // æ¯æ¬¡æªåçå­ç¬¦ä¸²
                                    var start = i * maxLength; // å¼å§æªåçä½ç½®
                                    var end = start + maxLength; // ç»ææªåçä½ç½®
                                    //è¿éä¹å¯ä»¥å ä¸ä¸ªæ¯å¦æ¯æåä¸è¡çå¤æ­ï¼ä½æ¯ä¸å ä¹æ²¡æå½±åï¼é£å°±ä¸å å§
                                    temp = value.substring(start, end) + "\n";
                                    ret += temp; //å­åæç»çå­ç¬¦ä¸²
                                }
                                return ret;
                            }
                            else {
                                return value;
                            }
                        },
                        margin: 15,
                        textStyle: {
                            fontStyle: 'Times',
                            fontSize: '18',
                            color: '#F2F6FA'
                        }
                    },
                },
                {
                    name: xlegends[0],
                    nameLocation: 'start',
                    nameTextStyle: {
                        color: '#F2F6FA',
                        padding: [27, -5, 0, 0] //è¿ä¸ªæ¯è®¾ç½®åå­çä½ç½®ï¼éè¿åè¾¹è·è¿è¡ä¸ãå³ãä¸ãä½çè®¾ç½®è¿è¡
                    },
                    position: 'bottom',
                    offset: 85,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡yè½´æ¯å¦å¯è§
                    },
                    axisTick: {
                        length: 30,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        color: '#F2F6FA',
                        interval: 0,
                        inside: false,
                        rotate: '0'
                    },
                    inverse: false,
                    //data: this.setSeriesOption(data)[1].data//è®¾ç½®æ°æ®
                    data: datap[0]
                },
                {
                    name: xlegends[1],
                    nameLocation: 'start',
                    nameTextStyle: {
                        color: '#F2F6FA',
                        padding: [26, -5, 0, 0]
                    },
                    position: 'bottom',
                    offset: 115,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡xè½´æ¯å¦å¯è§        
                    },
                    axisTick: {
                        length: 30,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        color: '#F2F6FA',
                        interval: 0,
                        inside: false,
                        rotate: '0'
                    },
                    inverse: false,
                    //data: this.setSeriesOption(data)[2].data//è®¾ç½®æ°æ®
                    data: datap[1]
                },
                {
                    name: xlegends[2],
                    nameLocation: 'start',
                    nameTextStyle: {
                        color: '#F2F6FA',
                        padding: [26, -5, 0, 0]
                    },
                    position: 'bottom',
                    offset: 145,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡yè½´æ¯å¦å¯è§        
                    },
                    axisTick: {
                        length: 30,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        color: '#F2F6FA',
                        interval: 0,
                        inside: false,
                        rotate: '0'
                    },
                    inverse: false,
                    //data: this.setSeriesOption(data)[3].data//è®¾ç½®æ°æ®
                    data: datap[2]
                },
                {
                    name: xlegends[3],
                    nameLocation: 'start',
                    nameTextStyle: {
                        color: '#F2F6FA',
                        padding: [26, -5, 0, 0]
                    },
                    position: 'bottom',
                    offset: 175,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡yè½´æ¯å¦å¯è§        
                    },
                    axisTick: {
                        length: 30,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        color: '#F2F6FA',
                        interval: 0,
                        inside: false,
                        rotate: '0'
                    },
                    inverse: false,
                    data: datap[3] //è®¾ç½®æ°æ®
                },
                {
                    position: 'bottom',
                    offset: 205,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡yè½´æ¯å¦å¯è§
                    }
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    axisLabel: {
                        color: '#F2F6FA',
                        formatter: '{value}'
                    },
                    axisLine: {
                        show: true,
                        lineStyle: {
                            color: '#455e9c'
                        }
                    },
                    splitLine: {
                        show: false
                    }
                },
                {
                    type: 'value',
                    axisLabel: {
                        show: false
                    },
                    axisTick: {
                        show: false
                    },
                    axisLine: {
                        show: false
                    },
                    splitLine: {
                        show: false
                    }
                }
            ],
            series: [
                {
                    name: legendname[0],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[0],
                    itemStyle: {
                        normal: {
                            color: '#0073FF',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[1],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[1],
                    itemStyle: {
                        normal: {
                            color: '#3AA4FB',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[2],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[2],
                    itemStyle: {
                        normal: {
                            color: '#1FE9BA',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[3],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[3],
                    itemStyle: {
                        normal: {
                            color: '#44FF32',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[4],
                    type: 'line',
                    //barWidth:'50%',
                    data: datap[4],
                    label: {
                        show: true,
                        color: '#F2F6FA',
                        fontSize: 9
                    },
                    symbol: 'circle',
                    symbolSize: 8,
                    itemStyle: {
                        color: '#1FE9BA'
                    },
                    lineStyle: {
                        normal: {
                            color: '#1FE9BA'
                        }
                    },
                    yAxisIndex: 1 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[5],
                    type: 'line',
                    data: datap[5],
                    label: {
                        show: true,
                        color: 'white',
                        fontSize: 9
                    },
                    symbol: 'circle',
                    symbolSize: 8,
                    itemStyle: {
                        color: '#44FF32'
                    },
                    lineStyle: {
                        normal: {
                            color: '#44FF32'
                        }
                    },
                    yAxisIndex: 1 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                }
            ]
        };
    };
    /******************ä¿®æ¹æ¶é´æ ¼å¼ ï¼ 2018-12-14 10ï¼01ï¼02 ç¨äºå¨ä¸çº§è§å¾ä¸é¢æ¾ç¤º****************** */
    B4WipComponent.prototype.getTimeStr = function (datatime) {
        var timestr = '';
        var datestr = datatime.toISOString().substr(0, 10);
        var hour = datatime.getHours();
        var hourstr = '';
        if (hour > 9) {
            hourstr = hour + '';
        }
        else {
            hourstr = '0' + hour;
        }
        var minute = datatime.getMinutes();
        var minutestr = '';
        if (minute > 9) {
            minutestr = minute + '';
        }
        else {
            minutestr = '0' + minute;
        }
        var second = datatime.getSeconds();
        var secondstr = '';
        if (second > 9) {
            secondstr = second + '';
        }
        else {
            secondstr = '0' + second;
        }
        timestr = datestr + ' ' + hourstr + ':' + minutestr + ':' + secondstr;
        return timestr;
    };
    /******************ä¿®æ¹æ¶é´æ ¼å¼ ï¼ 2018-12-14 10ï¼01ï¼02 end************** */
    // echart setting function
    B4WipComponent.prototype.set_WIP_cf_PH1_Echart = function (legendname, xlegends, datap, xAxisName, title_text, rotatem, datatime, offsetfirst, xlength) {
        this.chartOption_wip_cf_PH1 = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
                }
            },
            //calculable: true,
            grid: {
                left: '8%',
                right: '1%',
                bottom: '15%',
            },
            xAxis: [
                {
                    type: 'category',
                    data: xAxisName,
                    axisTick: {
                        length: 0,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLine: {
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        interval: 0,
                        rotate: rotatem,
                        formatter: function (value) {
                            var ret = ""; // æ¼æ¥å \nè¿åçç±»ç®é¡¹
                            var maxLength = 21; // æ¯é¡¹æ¾ç¤ºæå­ä¸ªæ°
                            var valLength = value.length; //Xè½´ç±»ç®é¡¹çæå­ä¸ªæ°
                            var rowN = Math.ceil(valLength / maxLength); // ç±»ç®é¡¹éè¦æ¢è¡çè¡æ°
                            if (rowN > 1) {
                                for (var i = 0; i < rowN; i++) {
                                    var temp = ""; // æ¯æ¬¡æªåçå­ç¬¦ä¸²
                                    var start = i * maxLength; // å¼å§æªåçä½ç½®
                                    var end = start + maxLength; // ç»ææªåçä½ç½®
                                    //è¿éä¹å¯ä»¥å ä¸ä¸ªæ¯å¦æ¯æåä¸è¡çå¤æ­ï¼ä½æ¯ä¸å ä¹æ²¡æå½±åï¼é£å°±ä¸å å§
                                    temp = value.substring(start, end) + "\n";
                                    ret += temp; //å­åæç»çå­ç¬¦ä¸²
                                }
                                return ret;
                            }
                            else {
                                return value;
                            }
                        },
                        margin: 15,
                        textStyle: {
                            fontStyle: 'Times',
                            fontSize: '18',
                            color: '#F2F6FA'
                        }
                    },
                },
            ],
            yAxis: [
                {
                    // name:'PH1',
                    nameLocation: 'center',
                    nameGap: 40,
                    nameTextStyle: {
                        fontSize: 14,
                        fontWeight: 'bold',
                        color: 'white'
                    },
                    type: 'value',
                    interval: 1000,
                    axisLabel: {
                        color: '#F2F6FA',
                        formatter: function (value) {
                            return value / 1000 + 'K';
                        }
                    },
                    axisLine: {
                        show: true,
                        lineStyle: {
                            color: '#455e9c'
                        }
                    },
                    splitLine: {
                        show: false
                    }
                },
                {
                    type: 'value',
                    axisLabel: {
                        show: false
                    },
                    axisTick: {
                        show: false
                    },
                    axisLine: {
                        show: false
                    },
                    splitLine: {
                        show: false
                    }
                }
            ],
            series: [
                {
                    name: legendname[0],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[0],
                    itemStyle: {
                        normal: {
                            color: '#0073FF',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[1],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[1],
                    itemStyle: {
                        normal: {
                            color: '#3AA4FB',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[2],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[2],
                    itemStyle: {
                        normal: {
                            color: '#1FE9BA',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[3],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[3],
                    itemStyle: {
                        normal: {
                            color: '#44FF32',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[4],
                    type: 'line',
                    //barWidth:'50%',
                    data: datap[4],
                    label: {
                        show: true,
                        color: '#F2F6FA',
                        fontSize: 9
                    },
                    symbol: 'circle',
                    symbolSize: 8,
                    itemStyle: {
                        color: '#1FE9BA'
                    },
                    lineStyle: {
                        normal: {
                            color: '#1FE9BA'
                        }
                    },
                    yAxisIndex: 1 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[5],
                    type: 'line',
                    data: datap[5],
                    label: {
                        show: true,
                        color: 'white',
                        fontSize: 9
                    },
                    symbol: 'circle',
                    symbolSize: 8,
                    itemStyle: {
                        color: '#44FF32'
                    },
                    lineStyle: {
                        normal: {
                            color: '#44FF32'
                        }
                    },
                    yAxisIndex: 1 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                }
            ]
        };
    };
    B4WipComponent.prototype.getDataCfPH2 = function (data) {
        //å¨getDataä¹åï¼åæææçæ°ç»é½æ´ç©º
        this.wip_operation_cf_PH2 = [];
        this.data_date_before_2_cf_PH2 = [];
        this.data_date_before_1_cf_PH2 = [];
        this.data_date_before_0_cf_PH2 = [];
        this.data_date_current_cf_PH2 = [];
        this.data_date_move_cf_PH2 = [];
        this.data_date_move_current_cf_PH2 = [];
        this.dataArray_cf_PH2 = [this.data_date_before_2_cf_PH2, this.data_date_before_1_cf_PH2, this.data_date_before_0_cf_PH2,
            this.data_date_current_cf_PH2, this.data_date_move_cf_PH2, this.data_date_move_current_cf_PH2];
        if (Array.isArray(data)) {
            for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {
                var list = data_2[_i];
                for (var value in list) {
                    if (value == 'oper_desc') {
                        this.wip_operation_cf_PH2.push(list[value]);
                    }
                    if (value == 'date_before_2') {
                        this.data_date_before_2_cf_PH2.push(list[value]);
                    }
                    if (value == 'date_before_1') {
                        this.data_date_before_1_cf_PH2.push(list[value]);
                    }
                    if (value == 'date_before_0') {
                        this.data_date_before_0_cf_PH2.push(list[value]);
                    }
                    if (value == 'date_current') {
                        this.data_date_current_cf_PH2.push(list[value]);
                    }
                    if (value == 'date_move') {
                        this.data_date_move_cf_PH2.push(list[value]);
                    }
                    if (value == 'date_move_current') {
                        this.data_date_move_current_cf_PH2.push(list[value]);
                    }
                }
            }
        }
    };
    B4WipComponent.prototype.createLegendCfPH2 = function () {
        this.legends_cf_PH2 = [];
        this.xAxisLegends_cf_PH2 = [];
        var today = new Date(); // ç°å¨ç
        var day_1 = new Date(); // ä¸ä¸å¤©ç
        var day_2 = new Date(); //ä¸ä¸¤å¤©ç
        var date = today.getDate();
        var hour = today.getHours();
        if (hour > 5) {
            day_2.setDate(today.getDate() - 3);
            day_1.setDate(today.getDate() - 2);
            today.setDate(today.getDate() - 1);
        }
        else {
            day_2.setDate(today.getDate() - 4);
            day_1.setDate(today.getDate() - 3);
            today.setDate(today.getDate() - 2);
        }
        //è¿ä¸ªæ¯å¤ä¸ªxè½´ç
        this.xAxisLegends_cf_PH2.push(day_2.getDate() + 'æ¥');
        this.xAxisLegends_cf_PH2.push(day_1.getDate() + 'æ¥');
        this.xAxisLegends_cf_PH2.push(today.getDate() + 'æ¥');
        this.xAxisLegends_cf_PH2.push('å®æ¶');
        //legendsçæ ç­¾ç
        this.legends_cf_PH2.push(day_2.getDate() + 'æ¥wip');
        this.legends_cf_PH2.push(day_1.getDate() + 'æ¥wip');
        this.legends_cf_PH2.push(today.getDate() + 'æ¥wip');
        this.legends_cf_PH2.push('å®æ¶wip');
        this.legends_cf_PH2.push(today.getDate() + 'æ¥move');
        this.legends_cf_PH2.push('å®æ¶move');
    };
    // echart setting function
    B4WipComponent.prototype.set_WIP_cf_PH2_Echart = function (legendname, xlegends, dataph1, datap, xAxisName, title_text, rotatem, datatime, offsetfirst, xlength) {
        this.chartOption_wip_cf_PH2 = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow' // é»è®¤ä¸ºç´çº¿ï¼å¯éä¸ºï¼'line' | 'shadow'
                }
            },
            grid: {
                left: '8%',
                right: '1%',
                bottom: '55%',
            },
            xAxis: [
                {
                    type: 'category',
                    data: xAxisName,
                    axisTick: {
                        length: 0,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLine: {
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        interval: 0,
                        rotate: rotatem,
                        formatter: function (value) {
                            var ret = ""; // æ¼æ¥å \nè¿åçç±»ç®é¡¹
                            var maxLength = 21; // æ¯é¡¹æ¾ç¤ºæå­ä¸ªæ°
                            var valLength = value.length; //Xè½´ç±»ç®é¡¹çæå­ä¸ªæ°
                            var rowN = Math.ceil(valLength / maxLength); // ç±»ç®é¡¹éè¦æ¢è¡çè¡æ°
                            if (rowN > 1) {
                                for (var i = 0; i < rowN; i++) {
                                    var temp = ""; // æ¯æ¬¡æªåçå­ç¬¦ä¸²
                                    var start = i * maxLength; // å¼å§æªåçä½ç½®
                                    var end = start + maxLength; // ç»ææªåçä½ç½®
                                    //è¿éä¹å¯ä»¥å ä¸ä¸ªæ¯å¦æ¯æåä¸è¡çå¤æ­ï¼ä½æ¯ä¸å ä¹æ²¡æå½±åï¼é£å°±ä¸å å§
                                    temp = value.substring(start, end) + "\n";
                                    ret += temp; //å­åæç»çå­ç¬¦ä¸²
                                }
                                return ret;
                            }
                            else {
                                return value;
                            }
                        },
                        margin: 15,
                        textStyle: {
                            fontStyle: 'Times',
                            fontSize: '18',
                            color: '#F2F6FA'
                        }
                    },
                },
                {
                    name: xlegends[1],
                    nameLocation: 'start',
                    nameTextStyle: {
                        color: '#F2F6FA',
                        padding: [26, -5, 0, 0]
                    },
                    position: 'bottom',
                    offset: offsetfirst,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡xè½´æ¯å¦å¯è§        
                    },
                    axisTick: {
                        length: xlength,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        color: '#F2F6FA',
                        interval: 0,
                        inside: false,
                        rotate: '0'
                    },
                    inverse: false,
                    //data: this.setSeriesOption(data)[2].data//è®¾ç½®æ°æ®
                    data: dataph1[1]
                },
                {
                    name: xlegends[2],
                    nameLocation: 'start',
                    nameTextStyle: {
                        color: '#F2F6FA',
                        padding: [26, -5, 0, 0]
                    },
                    position: 'bottom',
                    offset: offsetfirst + xlength,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡yè½´æ¯å¦å¯è§        
                    },
                    axisTick: {
                        length: xlength,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        color: '#F2F6FA',
                        interval: 0,
                        inside: false,
                        rotate: '0'
                    },
                    inverse: false,
                    //data: this.setSeriesOption(data)[3].data//è®¾ç½®æ°æ®
                    data: dataph1[2]
                },
                {
                    name: xlegends[3],
                    nameLocation: 'start',
                    nameTextStyle: {
                        color: '#F2F6FA',
                        padding: [26, -5, 0, 0]
                    },
                    position: 'bottom',
                    offset: offsetfirst + xlength * 2,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡yè½´æ¯å¦å¯è§        
                    },
                    axisTick: {
                        length: xlength,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        color: '#F2F6FA',
                        interval: 0,
                        inside: false,
                        rotate: '0'
                    },
                    inverse: false,
                    data: dataph1[3] //è®¾ç½®æ°æ®
                },
                {
                    name: xlegends[1],
                    nameLocation: 'start',
                    nameTextStyle: {
                        color: '#F2F6FA',
                        padding: [26, -5, 0, 0]
                    },
                    position: 'bottom',
                    offset: offsetfirst + xlength * 3,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡xè½´æ¯å¦å¯è§        
                    },
                    axisTick: {
                        length: xlength,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        color: '#F2F6FA',
                        interval: 0,
                        inside: false,
                        rotate: '0'
                    },
                    inverse: false,
                    //data: this.setSeriesOption(data)[2].data//è®¾ç½®æ°æ®
                    data: datap[1]
                },
                {
                    name: xlegends[2],
                    nameLocation: 'start',
                    nameTextStyle: {
                        color: '#F2F6FA',
                        padding: [26, -5, 0, 0]
                    },
                    position: 'bottom',
                    offset: offsetfirst + xlength * 4,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡yè½´æ¯å¦å¯è§        
                    },
                    axisTick: {
                        length: xlength,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        color: '#F2F6FA',
                        interval: 0,
                        inside: false,
                        rotate: '0'
                    },
                    inverse: false,
                    //data: this.setSeriesOption(data)[3].data//è®¾ç½®æ°æ®
                    data: datap[2]
                },
                {
                    name: xlegends[3],
                    nameLocation: 'start',
                    nameTextStyle: {
                        color: '#F2F6FA',
                        padding: [26, -5, 0, 0]
                    },
                    position: 'bottom',
                    offset: offsetfirst + xlength * 5,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡yè½´æ¯å¦å¯è§        
                    },
                    axisTick: {
                        length: xlength,
                        inside: false,
                        lineStyle: { color: '#455e9c' }
                    },
                    axisLabel: {
                        color: '#F2F6FA',
                        interval: 0,
                        inside: false,
                        rotate: '0'
                    },
                    inverse: false,
                    data: datap[3] //è®¾ç½®æ°æ®
                },
                {
                    position: 'bottom',
                    offset: offsetfirst + xlength * 6,
                    type: 'category',
                    axisLine: {
                        lineStyle: { color: '#455e9c' },
                        onZero: false,
                        show: true //è®¾ç½®è¿ä¸æ¡yè½´æ¯å¦å¯è§
                    }
                }
            ],
            yAxis: [
                {
                    // name:'PH2',
                    nameLocation: 'center',
                    nameGap: 40,
                    nameTextStyle: {
                        fontSize: 14,
                        fontWeight: 'bold',
                        color: 'white'
                    },
                    type: 'value',
                    interval: 1000,
                    axisLabel: {
                        color: '#F2F6FA',
                        formatter: function (value) {
                            return value / 1000 + 'K';
                        }
                    },
                    axisLine: {
                        show: true,
                        lineStyle: {
                            color: '#455e9c'
                        }
                    },
                    splitLine: {
                        show: false
                    }
                },
                {
                    type: 'value',
                    axisLabel: {
                        show: false
                    },
                    axisTick: {
                        show: false
                    },
                    axisLine: {
                        show: false
                    },
                    splitLine: {
                        show: false
                    }
                }
            ],
            series: [
                {
                    name: legendname[0],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[0],
                    itemStyle: {
                        normal: {
                            color: '#0073FF',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[1],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[1],
                    itemStyle: {
                        normal: {
                            color: '#3AA4FB',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[2],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[2],
                    itemStyle: {
                        normal: {
                            color: '#1FE9BA',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[3],
                    type: 'bar',
                    //barWidth:'50%',
                    data: datap[3],
                    itemStyle: {
                        normal: {
                            color: '#44FF32',
                            label: {
                                //show:true,
                                color: '#455e9c',
                                position: 'top'
                            }
                        }
                    },
                    yAxisIndex: 0 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[4],
                    type: 'line',
                    //barWidth:'50%',
                    data: datap[4],
                    label: {
                        show: true,
                        color: '#F2F6FA',
                        fontSize: 9
                    },
                    symbol: 'circle',
                    symbolSize: 8,
                    itemStyle: {
                        color: '#1FE9BA'
                    },
                    lineStyle: {
                        normal: {
                            color: '#1FE9BA'
                        }
                    },
                    yAxisIndex: 1 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                },
                {
                    name: legendname[5],
                    type: 'line',
                    data: datap[5],
                    label: {
                        show: true,
                        color: 'white',
                        fontSize: 9
                    },
                    symbol: 'circle',
                    symbolSize: 8,
                    itemStyle: {
                        color: '#44FF32'
                    },
                    lineStyle: {
                        normal: {
                            color: '#44FF32'
                        }
                    },
                    yAxisIndex: 1 //è¿ä¸ªæ¯éæ©ä½¿ç¨åªä¸ä¸ªyåæ è½´
                }
            ]
        };
    };
    /********* ä¸çº§ ï¼ è½¬æ¢æ°æ®æ ¼å¼ ï¼array_currentçæ°æ®ï¼è¿ä¸ªæ¯ç¨æ¥åè¡¨æ ¼ç****************** */
    B4WipComponent.prototype.getDataWipCurrent = function (data, factoryname) {
        this.data_key = [];
        if (Array.isArray(data)) {
            //ç¬¬ä¸ä¸ªå¾ªç¯ç¨äºè·åå°keyçå¼:,å¹¶ä¸å¨è¿éå¨æ·»å æåçæ±åsumçæä½
            for (var _i = 0, data_3 = data; _i < data_3.length; _i++) {
                var list = data_3[_i];
                if (list['hourtimekey'] != null) {
                    for (var value in list) {
                        if (value == 'modeltype') {
                            if (!this.data_key.includes(list[value])) {
                                //console.log("you are already has a value : "+list[value]);
                                this.data_key.push(list[value]);
                            }
                        }
                    }
                }
            }
            console.log(this.data_key);
            console.log('data_key');
            this.data_array_current = []; //æ¸ç©ºè¦ä¿å­æ°æ®çæ°ç»ï¼
            for (var _a = 0, _b = this.data_key; _a < _b.length; _a++) {
                var key = _b[_a];
                //ç¬¬äºä¸ªå¾ªç¯data_keyç¨äºåå»ºå¯¹è±¡ï¼å¹¶ä¸æå¯¹è±¡æ¾å¥å°æ°ç»ä¸­å»
                var newObject = void 0;
                if (factoryname == "ARRAY") {
                    newObject = new __WEBPACK_IMPORTED_MODULE_4__model_array_wip__["a" /* array_wip_current */]; //å½ä¼ è¿æ¥çæ¯ä¸ä¸ªarrayçæ¶åï¼åå»ºçæ¯ä¸ªarrayçå¯¹è±¡
                }
                else if (factoryname == "CF") {
                    newObject = new __WEBPACK_IMPORTED_MODULE_5__model_cf_wip__["a" /* cf_wip_current */]; //å½ä¼ è¿æ¥çæ¯ä¸ä¸ªcfçæ¶åï¼åå»ºçæ¯ä¸ªcfçå¯¹è±¡
                }
                else if (factoryname == "CELL") {
                    newObject = new __WEBPACK_IMPORTED_MODULE_6__model_cell_wip__["a" /* cell_wip_current */]; //å½ä¼ è¿æ¥çæ¯ä¸ä¸ªcellçæ¶åï¼åå»ºçæ¯ä¸ªcellçå¯¹è±¡
                }
                newObject.Key = key; //åç»keyèµå¼
                this.data_array_current_keys.push(key); //ækeyå¦å­ä¸ºå°æ°çæ°ç»ä¸­
                var glassNumbers = []; // 1.å£°æä¸ä¸ªç¨æ¥ä¿å­glassæ°éçæ°ç»ï¼æ·»å SUMåçæä½ï¼
                for (var _c = 0, data_4 = data; _c < data_4.length; _c++) {
                    var list = data_4[_c];
                    var modeltypename = list['modeltype'];
                    if (modeltypename == key) {
                        var operationdescname = list['operationdesc'];
                        var glassqtyvalue = list['glassqty'];
                        glassNumbers.push(parseInt(glassqtyvalue, 10)); // 2.æglassqtyæ¾å¥å°æ°ç»ä¸­ä¿å­ï¼æ·»å SUMåçæä½ï¼
                        newObject.setProperty(operationdescname, glassqtyvalue); //è°ç¨å¯¹è±¡çæ¹æ³è¿è¡çæä½
                    }
                }
                //3.æ·»å æ±åçæä½ï¼æ·»å SUMåçæä½ï¼
                var glassSUM = 0;
                for (var _d = 0, glassNumbers_1 = glassNumbers; _d < glassNumbers_1.length; _d++) {
                    var glassqty = glassNumbers_1[_d];
                    glassSUM += glassqty;
                }
                newObject.setProperty("SUM", glassSUM);
                //æè¿ä¸ªçå¯¹è±¡æ¾å¥å°æ°ç»ä¸­å»
                this.data_array_current.push(newObject);
            }
        }
        console.log(this.data_array_current);
        console.log('data_array_current');
    };
    /*******è½¬æ¢æ°æ®æ ¼å¼ ï¼array_currentçæ°æ®end****************** */
    /***********è®¡ç®æåè¡ SUM çåå®¹******************** */
    B4WipComponent.prototype.getSumDate = function (fname) {
        var newobject;
        if (fname == 'Array') {
            newobject = new __WEBPACK_IMPORTED_MODULE_7__model_sum_wip__["a" /* sum_wip_array */]();
        }
        else if (fname == 'Cf') {
            newobject = new __WEBPACK_IMPORTED_MODULE_7__model_sum_wip__["c" /* sum_wip_cf */]();
        }
        else if (fname == 'Cell') {
            newobject = new __WEBPACK_IMPORTED_MODULE_7__model_sum_wip__["b" /* sum_wip_cell */];
        }
        console.log(this.data_date_current);
        var glassnum = 0; //ç¨äºè®¡ç®æ»åç
        for (var i = 0; i < this.data_date_current.length; i++) {
            var num = this.data_date_current[i];
            glassnum += num; // ç´æ¥æ±ä¸ä¸ªå
            newobject.setProperty((i + 1), num);
        }
        if (fname == 'Array') {
            newobject.setProperty(36, glassnum); //æåç»èµå¼æä½
        }
        else if (fname == 'Cf') {
            newobject.setProperty(16, glassnum); //æåç»èµå¼æä½
        }
        else if (fname == 'Cell') {
            newobject.setProperty(8, glassnum); //æåç»èµå¼æä½
        }
        this.data_array_current.push(newobject); // ææ°ç»æ¾è¿å»
    };
    /* **********è®¡ç®è¡SUM çåå®¹end ************** */
    /******** ä¸çº§ ï¼å¨æçåå»ºè¡¨æ ¼ç header å feild ********************* */
    B4WipComponent.prototype.create_cols = function () {
        //this.data_array_current_cols = [];
        // console.log('you have in method create_cols...');
        for (var _i = 0, _a = this.wip_operation; _i < _a.length; _i++) {
            var value = _a[_i];
            // 1.åå»ºå¯¹è±¡
            var colObjetc = new __WEBPACK_IMPORTED_MODULE_4__model_array_wip__["c" /* wip_crrent_cols */];
            colObjetc.setProperty(value, value);
            //console.log('aaa  bb  ' + colObjetc);
            // 2.æå¯¹è±¡æ¾è¿å°æ°ç»ä¸­å»
            this.data_array_current_cols.push(colObjetc);
        }
        //æååæ·»å ä¸ä¸ªSUMå
        var colSUM = new __WEBPACK_IMPORTED_MODULE_4__model_array_wip__["c" /* wip_crrent_cols */];
        colSUM.setProperty('SUM', 'SUM');
        this.data_array_current_cols.push(colSUM);
    };
    /********å¨æçåå»ºè¡¨æ ¼ç header å feild  end********************* */
    //ç¹å»æ±ç¶å¾çæ¶åï¼è·åæ°æ®å¹¶ä¸ä¿å­ä¸æ¥
    B4WipComponent.prototype.onClickChart = function (event) {
        this.wipTableIsShow = false;
        this.CurrentWipTableIsShow = false;
        this.isCfPH = false;
        // let datatime: Date = this.datatime;//ä¸ä¸çº§çæ±ç¶å¾ä½¿ç¨åä¸ä¸ªæ¶é´æä½
        // let hourtimekeystr = this.getTimeSameToEchart(datatime);
        // this.timestrOnSecondTable = hourtimekeystr.substr(4, 6);//ææ¶ä¼ è¿å°è¡¨éé¢çä¸è¥¿
        // this.clickName = event.name;//è·åå°äºä»¶çåç§°
        this.showCurrentWip();
        // const url_second_view = '/assets/demo/data/B4/arraywipcurrent1.json';
        // this.apiService.testGet(url_second_view).subscribe(
        //   (res) => {
        //     this.getStationMessage(res);//æ ¼å¼åæ°æ®
        //     console.log(res);
        //     console.log(11111);
        //     this.modeltypeNumber = this.modeltype.length + 1;//è·åä¿¡å·çæ°éï¼ç¨äºè¡¨æ ¼çè®¾ç½®
        //     this.lengthhead = 2 + this.eqp_id.length;
        //   },
        //   (error) => { console.log(error); }
        // );
        this.CurrentWipTableIsShow = true; //å½ç¹å»çæ¶åæ¾ç¤ºä¸çº§è§å¾
        // this.CurrentWipTableIsShowCL=true;
        // this.CurrentWipStationTableIsShow = true;//å½ç¹å»çæ¶åæ¾ç¤ºäºçº§è§å¾
    };
    //ä¸é¢æ¯æ¾ç¤ºå½åwipæ°éçåå®¹ï¼æ ¹æ®å½åè¡¨æ ¼æ¯arrayçè¿æ¯cfçè¿è¡æä½
    B4WipComponent.prototype.showCurrentWip = function () {
        var _this = this;
        //1.åæä¸çº§æ±ç¶å¾ç»éèæ
        this.wipTableIsShow = false;
        this.CurrentWipStationTableIsShow = false;
        //2.æä¿å­æ°æ®çæ°ç»æ¸ç©ºæ
        this.data_array_current_cols = [];
        this.data_array_current = [];
        var datatime = this.datatime; //ä¸ä¸çº§çæ±ç¶å¾ä½¿ç¨åä¸ä¸ªæ¶é´æä½
        var url_array_wip_current_home = '/assets/demo/data/B4/arraywipcurrent.json';
        this.apiService.testGet(url_array_wip_current_home).subscribe(function (res) {
            console.log(res);
            console.log('showCurrentWip');
            _this.getDataWipCurrent(res, 'ARRAY');
            _this.getSumDate('Array'); //è·åå½åçSumçäºæ
            _this.data_array_current_cols = [];
            _this.create_cols();
            _this.CurrentWipTableIsShow = true; //æåå°è¡¨æ ¼å±ç¤ºåºæ¥
        }, function (error) { console.log(error); });
    };
    /***************åå»ºäºçº§è¯å¾æ¶åï¼æ¥åæ°æ®çæ¹æ³************************ */
    B4WipComponent.prototype.getStationMessage = function (data) {
        var eqp_id_tepm = []; //åå»ºä¸´æ¶çæä½ç¨äºå»æéå¤çå¼
        var eqp_id_tepm2 = []; //åå»ºä¸´æ¶çæä½ç¨äºå»æéå¤çå¼
        var get_index = []; //ç¨æ¥ä¿å­ä¸æ ä½¿ç¨
        this.eqp_id = []; //æ¸ç©ºeqp_id
        this.eqp_state = []; //æ¸ç©ºeqp_state
        this.modeltype = []; //æ¸ç©ºåå·æ°ç»
        this.stationWipMessage = []; //æ¸ç©ºå¯¹è±¡æ°ç»
        if (Array.isArray(data)) {
            // console.log(data);
            //1.ç¬¬ä¸ä¸ªå¾ªç¯è·åå°åºæ¬çåç´ ä¿¡æ¯ï¼æ¾å¥å°æ°ç»ä¸­è¿è¡ä¿å­
            for (var _i = 0, data_5 = data; _i < data_5.length; _i++) {
                var list = data_5[_i];
                for (var value in list) {
                    if (value == 'eqp_id') {
                        this.eqp_id.push(list[value]);
                    }
                    if (value == 'eqp_state') {
                        this.eqp_state.push(list[value]);
                    }
                    if (value == 'modeltype') {
                        if (!this.modeltype.includes(list[value])) {
                            this.modeltype.push(list[value]);
                        }
                    }
                }
            }
        }
        // for (let i = 0; i < this.eqp_id.length; i++) {
        //   console.log(i + " : " + this.eqp_id[i] + " ï¼ " + this.eqp_state[i]);
        // }
        //2.ç¬¬äºä¸ªå¾ªç¯ï¼ç¨äºåå»ºä¿å­åå·åwipæ°éçæä½
        for (var _a = 0, _b = this.modeltype; _a < _b.length; _a++) {
            var modeltype = _b[_a];
            var newObject = new __WEBPACK_IMPORTED_MODULE_4__model_array_wip__["b" /* stationMessage */](); //ä¸ä¸ªmodeltype åå»ºä¸ä¸ªä¸´æ¶åéç¨äºä¿å­å¯¹è±¡
            newObject.setmodeltype(modeltype); //ç´æ¥è®¾ç½®è¿ä¸ªmodeltypeåå·
            var listsofmodeltype = []; //ç¨æ¥ä¿å­åå½åmodeltypeå¹éçæ°æ®
            //1.å¾ªç¯æ¾å°è¿ä¸ªåå·çææçlistçä¿¡æ¯
            for (var _c = 0, data_6 = data; _c < data_6.length; _c++) {
                var list = data_6[_c];
                if (modeltype == list['modeltype']) {
                    listsofmodeltype.push(list);
                }
            }
            //console.log("é¿åº¦ ï¼ "+listsofmodeltype.length);
            var eqp_id_inlist = []; //ç¨æ¥ä¿å­è¿ä¸ªmodeltypeä¸çææçè®¾å¤çåç§°
            for (var _d = 0, listsofmodeltype_1 = listsofmodeltype; _d < listsofmodeltype_1.length; _d++) {
                var list = listsofmodeltype_1[_d];
                if (!eqp_id_inlist.includes(list['eqp_id'])) {
                    eqp_id_inlist.push(list['eqp_id']);
                }
            }
            //2.éåå¾å°çeqp_id_inlistæ°ç»ï¼ä¸eqp_idè¿è¡å¯¹æ¯
            for (var _e = 0, _f = this.eqp_id; _e < _f.length; _e++) {
                var eqp_id = _f[_e];
                if (eqp_id_inlist.includes(eqp_id)) {
                    for (var _g = 0, listsofmodeltype_2 = listsofmodeltype; _g < listsofmodeltype_2.length; _g++) {
                        var list = listsofmodeltype_2[_g];
                        if (eqp_id == list['eqp_id']) {
                            newObject.setglassqtys(list['glassqty']);
                        }
                    }
                }
                else {
                    newObject.setglassqtys('');
                }
            }
            //æ¯æ¬¡æåå»ºçå¯¹è±¡æå°ä¸ä¸
            //console.log(newObject);
            //3.å½ææçè®¾å¤å¨è¿ä¸ªmodeltypeç±»åä¸é½å¾ªç¯å®æä¹åï¼è¯æè¿ä¸ªå¯¹è±¡å·²ç»åå»ºå®æäº
            this.stationWipMessage.push(newObject);
        }
        // //åç¨ä¸ä¸ªå¾ªç¯æéå¤çæ°æ®ç»å é¤æ
        //   console.log("åå®¹ ï¼ ");
        // eqp_id_tepm = this.eqp_id;
        // console.log("ä¸´æ¶çæ°ç»æ¯ ï¼ "+eqp_id_tepm);
        for (var i = 0; i < this.eqp_id.length; i++) {
            eqp_id_tepm[i] = i + this.eqp_id[i]; //éæ°æ·»å ä¸ä¸ä¸ªiçå¼è¿ä¸ªåå®¹
            //console.log(i+" : "+eqp_id_tepm[i]);
        }
        // console.log("1 ï¼ " + eqp_id_tepm);
        // console.log("1 :  " + this.eqp_id);
        for (var i = 0; i < eqp_id_tepm.length; i++) {
            var eqpidtemp = ''; //ç¨æ¥ä¿å­çå®çè®¾å¤åç§°
            var index = null; //ç¨æ¥ä¿å­çå®çä¸è¡¨æ°æ®
            if (i < 10) {
                eqpidtemp = eqp_id_tepm[i].substr(1); //æªååºæ¥è¿ä¸ªæä½
                index = parseInt(eqp_id_tepm[i].substr(0, 1), 10);
            }
            else if (i > 9 && i < 100) {
                eqpidtemp = eqp_id_tepm[i].substr(2); //æªååºæ¥è¿ä¸ªæä½
                index = parseInt(eqp_id_tepm[i].substr(0, 2), 10);
            }
            else if (i > 99 && i < 1000) {
                eqpidtemp = eqp_id_tepm[i].substr(3); //æªååºæ¥è¿ä¸ªæä½
                index = parseInt(eqp_id_tepm[i].substr(0, 3), 10);
            }
            if (eqp_id_tepm2.includes(eqpidtemp)) {
                //  console.log("éå¤çä¸æ æ¯ ï¼ " + eqp_id_tepm[i] + " : " + eqpidtemp + " : " + index);
                this.eqp_id[i] = '666666888888'; //å°±æ¯åæä¸ä¸ªæ å¿ä½
                this.eqp_state[i] = '666666888888';
                for (var _h = 0, _j = this.stationWipMessage; _h < _j.length; _h++) {
                    var object = _j[_h];
                    object.glassqtys[i] = '666666888888'; //å é¤æ¯ä¸ä¸ªå¯¹è±¡çå¯¹åºä¸æ çæ°æ®
                }
            }
            else {
                eqp_id_tepm2.push(eqpidtemp); //æåè¿ä¸ªeqp_id_temp2åºè¯¥åthis.eqp_id æ¯ä¸æ ·ç
            }
        }
        // console.log("2 ï¼  " + eqp_id_tepm2);
        //  console.log("2 ï¼  " + this.eqp_id);//è¿ä¸¤ä¸ªåºè¯¥æ¯è½å¤å¯¹ä¸çæå¯ä»¥
        while (this.eqp_id.includes('666666888888')) {
            var index = this.eqp_id.indexOf('666666888888');
            this.eqp_id.splice(index, 1);
        }
        while (this.eqp_state.includes('666666888888')) {
            var index = this.eqp_state.indexOf('666666888888');
            this.eqp_state.splice(index, 1);
        }
        for (var _k = 0, _l = this.stationWipMessage; _k < _l.length; _k++) {
            var object = _l[_k];
            while (object.glassqtys.includes('666666888888')) {
                var index = object.glassqtys.indexOf('666666888888');
                object.glassqtys.splice(index, 1);
            }
        }
        // console.log("3 ï¼  " + eqp_id_tepm2);
        // console.log("3 ï¼  " + this.eqp_id);//è¿ä¸¤ä¸ªåºè¯¥æ¯è½å¤å¯¹ä¸çæå¯ä»¥
        console.log("inner eqp_id length: " + this.eqp_id.length);
        console.log("inner eqp_state length: " + this.eqp_state.length);
    };
    /***************åå»ºäºçº§è¯å¾æ¶åï¼æ¥åæ°æ®çæ¹æ³end************************ */
    //ä¸é¢è¿ä¸ªæ¯ç¹å»è¡¨æ ¼çè¡¨å¤´ï¼æ¾ç¤ºç¬¬ä¸ä¸ªè§å¾
    B4WipComponent.prototype.toThirdTable = function (event) {
        var _this = this;
        var datatime = this.datatime; //ä¸ä¸çº§çæ±ç¶å¾ä½¿ç¨åä¸ä¸ªæ¶é´æä½
        var hourtimekeystr = this.getTimeSameToEchart(datatime);
        this.timestrOnSecondTable = hourtimekeystr.substr(4, 6); //ææ¶ä¼ è¿å°è¡¨éé¢çä¸è¥¿
        this.clickName = event.target.innerText.trim(); // è·åå°äºä»¶çåç§°,è¿ä¸ªå°æ¹
        if (!((this.clickName === 'åå·') || (this.clickName === 'SUM'))) {
            this.CurrentWipTableIsShow = false;
            this.CurrentWipTableIsShowCL = false;
            this.wipTableIsShow = false;
            //1.åå»ºè¦ä¼ éçåæ°
            var option = {
                params: {
                    // hourtimekey: hourtimekeystr,
                    operationdesc: this.clickName
                }
            };
            // 2.è°ç¨getæ¹æ³ï¼è¿è¡åæ°ä¼ é:æ ¹æ®ä¸åçarray  or  cf  è¿è¡ç¸å³çæ°æ®è·åææä½
            var url_second_view = '/assets/demo/data/B4/arraywipcurrentstation.json';
            // if (this.title_yiji == 'Array WIP') {// å½æ¶arrayçæ¶å
            //   this.rowSpan = 3;
            //   this.thirdName = 'è®¾å¤';
            //   this.thirdStateIsShow = true;
            //   url_second_view = '/array' + url_second_view;
            // } else if (this.title_yiji == 'CF WIP') {// å½æ¯cfçæ¶å
            //   this.rowSpan = 3;
            //   this.thirdName = 'è®¾å¤';
            //   this.thirdStateIsShow = true;
            //   url_second_view = '/cf' + url_second_view;
            // } else if (this.title_yiji == 'Cell WIP') {
            //   this.rowSpan = 2; // è¿ä¸ªå°æ¹éè¦æ¹ä¸ä¸è¡çæ°é
            //   this.thirdName = 'ç«ç¹åç§°';
            //   this.thirdStateIsShow = false;
            //   url_second_view = '/cell' + url_second_view;
            // } else {// å¶ä»æåµä¸æ¾ç¤ºç©ºç
            //   url_second_view = '';
            // }
            this.apiService.testGet(url_second_view).subscribe(function (res) {
                _this.getStationMessage(res); //æ ¼å¼åæ°æ® 
                console.log(res);
                console.log(_this.eqp_id);
                _this.modeltypeNumber = _this.modeltype.length + 1; //è·åä¿¡å·çæ°éï¼ç¨äºè¡¨æ ¼çè®¾ç½®
                _this.lengthhead = 2 + _this.eqp_id.length;
            }, function (error) { console.log(error); });
            this.CurrentWipStationTableIsShow = true;
            //å½ç¹å»çæ¶åæ¾ç¤ºäºçº§è§å¾
        }
    };
    //ä¸é¢æ¯å³é­ä¸çº§è§å¾çæé®
    B4WipComponent.prototype.closeTable = function () {
        this.CurrentWipTableIsShow = false;
        this.CurrentWipTableIsShowCL = false;
        this.wipTableIsShow = true;
    };
    //ä¸é¢æ¯å³é­äºçº§ç«ç¹è§å¾çæé®
    B4WipComponent.prototype.closeTableSecond = function () {
        this.CurrentWipStationTableIsShow = false; //å³é­æç«ç¹çè§å¾
        this.wipTableIsShow = true;
    };
    B4WipComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-b4-wip',
            template: __webpack_require__("./src/app/outstandingcase/transparent-display/b4-wip/b4-wip.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/transparent-display/b4-wip/b4-wip.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__["a" /* ApiService */],
            __WEBPACK_IMPORTED_MODULE_2__report_ui_service_report_ui_common_service__["a" /* ReportUiCommonService */],
            __WEBPACK_IMPORTED_MODULE_3__common_service_fullscreen_service__["a" /* FullscreenService */]])
    ], B4WipComponent);
    return B4WipComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/inspection/inspection.component.css":
/***/ (function(module, exports) {

module.exports = "#titleDiv{\r\n    height:5vh;\r\n    text-align: center;\r\n}\r\nh2{\r\n    margin:0;\r\n}\r\n.pageContent *{\r\n    padding:0;\r\n    margin:0;\r\n}\r\n.chartDiv{\r\n    height:100%;\r\n    width:100%;\r\n}"

/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/inspection/inspection.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"ui-g pageContent\">\n  <div class=\"ui-g-12\" id=\"titleDiv\">\n    <h2>æ£æ¥å²éæåå±ç¤º</h2>\n  </div>\n  <div class=\"ui-g-12\" id=\"contentDiv\">\n    <div class=\"ui-g-12\">\n      <div class=\"ui-lg-6 ui-g-12\" style=\"height:50vh;padding:1vw;\">\n        <div class=\"chartDiv\" id=\"qualityPieChart\" echarts theme=\"macarons\" [options]=\"qualityPieOption\" [loading]=\"isQualityPieLoading\"\n          (chartClick)=\"pieClick($event,'quality')\"></div>\n      </div>\n      <div class=\"ui-lg-6 ui-g-12\" style=\"height:50vh;padding:1vw;\">\n        <div class=\"chartDiv\" id=\"quantityPieChart\" echarts theme=\"macarons\" [options]=\"quantityPieOption\" [loading]=\"isQuantityPieLoading\"\n          (chartClick)=\"pieClick($event,'quantity')\"></div>\n      </div>\n    </div>\n    <div class='ui-g-12' style=\"border-top:2px solid #5e6e7c;\">\n      <p-toolbar>\n        <div class=\"ui-toolbar-group-left\">\n          æå«ï¼\n          <p-dropdown [options]=\"searchStars\" [(ngModel)]=\"searchStar\" (onChange)=\"initDetail()\"></p-dropdown>&nbsp;&nbsp; ç§å®¤ï¼\n          <p-dropdown [options]=\"searchGroups\" [(ngModel)]=\"searchGroup\" (onChange)=\"updateSearchShifts()\"></p-dropdown>&nbsp;&nbsp; ç­å«ï¼\n          <p-dropdown [options]=\"searchShifts\" [(ngModel)]=\"searchShift\" (onChange)=\"updateSearchWorkShifts()\"></p-dropdown>&nbsp;&nbsp; ç»å«ï¼\n          <p-dropdown [options]=\"searchWorkShifts\" [(ngModel)]=\"searchWorkShift\" (onChange)=\"initDetail()\"></p-dropdown>&nbsp;&nbsp;|\n        </div>\n        <div class=\"ui-toolbar-group-right\">\n          <p-button label=\"æ¥è¯¢\" icon=\"fa fa-search\" (onClick)=\"initDetail()\"></p-button>\n        </div>\n      </p-toolbar>\n      <p-tabView id=\"tabView\">\n        <p-tabPanel header=\"äº§è½æ°æ®\">\n          <div class=\"ui-g\">\n\n            <div class=\"ui-g-12\" id=\"topQty\" style=\"border:2px solid rgba(0, 0, 0, 0.315);\">\n              <p-toolbar [style]=\"{'height':'6vh','margin':0}\">\n                <div class=\"ui-toolbar-group-left\">\n                  From:\n                  <p-calendar [showIcon]=\"true\" [(ngModel)]=\"qualityTopStart\" [minDate]=\"thirtyDaysAgo\" [maxDate]=\"today\"></p-calendar>&nbsp;&nbsp;&nbsp; To:\n                  <p-calendar [showIcon]=\"true\" [(ngModel)]=\"qualityTopEnd\" [minDate]=\"qualityTopStart\" [maxDate]=\"today\"></p-calendar>\n                </div>\n                <div class=\"ui-toolbar-group-right\">\n                  <p-button label=\"\" icon=\"fa fa-search\" (onClick)=\"setFiViTopOption()\"></p-button>\n                </div>\n              </p-toolbar>\n              <div class=\"ui-lg-6 ui-g-12\" style=\"height:36vh;\" echarts theme=\"shine\" [options]=\"fiTopOption\" [loading]=\"isFiTopChartLoading\"></div>\n              <div class=\"ui-lg-6 ui-g-12\" style=\"height:36vh;\" echarts theme=\"shine\" [options]=\"viTopOption\" [loading]=\"isViTopChartLoading\"></div>\n            </div>\n\n            <div class=\"ui-g-12\" id=\"\" style=\"border:2px solid rgba(0, 0, 0, 0.315);\">\n              <p-toolbar [style]=\"{'height':'6vh','margin':0}\">\n                <div class=\"ui-toolbar-group-left\">\n                  From:\n                  <p-calendar [showIcon]=\"true\" [(ngModel)]=\"productCapacityStart\" [minDate]=\"thirtyDaysAgo\" [maxDate]=\"today\"></p-calendar>&nbsp;&nbsp;&nbsp; To:\n                  <p-calendar [showIcon]=\"true\" [(ngModel)]=\"productCapacityEnd\" [minDate]=\"productCapacityStart\" [maxDate]=\"today\"></p-calendar>\n                </div>\n                <div class=\"ui-toolbar-group-right\">\n                  <p-button label=\"\" icon=\"fa fa-search\" (onClick)=\"setProductCapacityOption()\"></p-button>\n                </div>\n              </p-toolbar>\n              <div class=\"ui-lg-6 ui-g-12\" style=\"height:50vh;\" echarts theme=\"shine\" [options]=\"fiProductCapacityOption\" [loading]=\"isFiProductCapacityLoading\"></div>\n              <div class=\"ui-lg-6 ui-g-12\" style=\"height:50vh;\" echarts theme=\"shine\" [options]=\"viProductCapacityOption\" [loading]=\"isViProductCapacityLoading\"></div>\n            </div>\n\n            <div class=\"ui-g-12\" id=\"\" style=\"border:2px solid rgba(0, 0, 0, 0.315);\">\n              <p-toolbar [style]=\"{'height':'6vh','margin':0}\">\n                <div class=\"ui-toolbar-group-left\">\n                  è¯·éæ©æ¥æ:\n                  <p-calendar [showIcon]=\"true\" [(ngModel)]=\"hourCapacitySearchTime\" [minDate]=\"thirtyDaysAgo\" [maxDate]=\"yesterday\"></p-calendar>&nbsp;&nbsp;&nbsp;\n                </div>\n                <div class=\"ui-toolbar-group-right\">\n                  <p-button label=\"\" icon=\"fa fa-search\" (onClick)=\"setHourCapacityOption()\"></p-button>\n                </div>\n              </p-toolbar>\n              <div class=\"ui-lg-6 ui-g-12\" style=\"height:40vh;\" echarts theme=\"shine\" [options]=\"fiHourCapacityOption\" [loading]=\"isFiHourCapacityLoading\"></div>\n              <div class=\"ui-lg-6 ui-g-12\" style=\"height:40vh;\" echarts theme=\"shine\" [options]=\"viHourCapacityOption\" [loading]=\"isViHourCapacityLoading\"></div>\n            </div>\n\n          </div>\n        </p-tabPanel>\n        <p-tabPanel header=\"åè´¨æ°æ®\">\n          <div class=\"ui-g\">\n\n            <div class=\"ui-g-5\" style=\"border:2px solid rgba(0, 0, 0, 0.315);\">\n              <p-toolbar [style]=\"{'height':'6vh','margin':0}\">\n                <div class=\"ui-toolbar-group-left\">\n                  From:\n                  <p-calendar [showIcon]=\"true\" [(ngModel)]=\"defectPictureStart\" [minDate]=\"thirtyDaysAgo\" [maxDate]=\"today\"></p-calendar>&nbsp;&nbsp;&nbsp; To:\n                  <p-calendar [showIcon]=\"true\" [(ngModel)]=\"defectPictureEnd\" [minDate]=\"defectPictureStart\" [maxDate]=\"today\"></p-calendar>\n                </div>\n                <div class=\"ui-toolbar-group-right\">\n                  <p-button label=\"\" icon=\"fa fa-search\" (onClick)=\"setDefectPictureOption()\"></p-button>\n                </div>\n              </p-toolbar>\n              <div class=\"ui-g-12\" style=\"height:50vh;\" echarts theme=\"shine\" [options]=\"defectPictureOption\" [loading]=\"isDefectPictureLoading\"></div>\n            </div>\n            <div class=\"ui-g-7\" style=\"border:2px solid rgba(0, 0, 0, 0.315);\">\n              <p-toolbar [style]=\"{'height':'6vh','margin':0}\">\n                <div class=\"ui-toolbar-group-left\">\n                  From:\n                  <p-calendar [showIcon]=\"true\" [(ngModel)]=\"defectProductStart\" [minDate]=\"thirtyDaysAgo\" [maxDate]=\"today\"></p-calendar>&nbsp;&nbsp;&nbsp; To:\n                  <p-calendar [showIcon]=\"true\" [(ngModel)]=\"defectProductEnd\" [minDate]=\"defectProductStart\" [maxDate]=\"today\"></p-calendar>\n                </div>\n                <div class=\"ui-toolbar-group-right\">\n                  <p-button label=\"\" icon=\"fa fa-search\" (onClick)=\"setDefectProductOption()\"></p-button>\n                </div>\n              </p-toolbar>\n              <div class=\"ui-g-12\" style=\"height:50vh;\" echarts theme=\"shine\" [options]=\"defectProductOption\" [loading]=\"isDefectProductLoading\"></div>\n            </div>\n\n            <div class=\"ui-g-12\">\n              <div class=\"ui-g-6\" style=\"border:2px solid rgba(0, 0, 0, 0.315);\">\n                <p-toolbar [style]=\"{'height':'6vh','margin':0}\">\n                  <div class=\"ui-toolbar-group-left\">\n                    From:\n                    <p-calendar [showIcon]=\"true\" [(ngModel)]=\"defectQtyStart\" [minDate]=\"thirtyDaysAgo\" [maxDate]=\"today\"></p-calendar>&nbsp;&nbsp;&nbsp; To:\n                    <p-calendar [showIcon]=\"true\" [(ngModel)]=\"defectQtyEnd\" [minDate]=\"defectQtyStart\" [maxDate]=\"today\"></p-calendar>\n                  </div>\n                  <div class=\"ui-toolbar-group-right\">\n                    <p-button label=\"\" icon=\"fa fa-search\" (onClick)=\"setDefectQtyOption()\"></p-button>\n                  </div>\n                </p-toolbar>\n                <div class=\"ui-g-12\" style=\"height:40vh;\" echarts theme=\"shine\" [options]=\"defectQtyOption\" [loading]=\"isDefectQtyLoading\"></div>\n              </div>\n\n              <div class=\"ui-g-6\" style=\"border:2px solid rgba(0, 0, 0, 0.315);height:100%;\"echarts theme=\"shine\" [options]=\"ppmOption\" [loading]=\"isPpmLoading\"></div>\n            </div>\n\n            <div class=\"ui-g-6\" style=\"border:2px solid rgba(0, 0, 0, 0.315);\">\n              <p-toolbar [style]=\"{'height':'6vh','margin':0}\">\n                <div class=\"ui-toolbar-group-left\">\n                  è¯·éæ©äº§å:\n                  <p-dropdown [options]=\"lotNgProductList\" [(ngModel)]=\"lotNgProduc\" (onChange)=\"setLotNgOption()\"></p-dropdown>\n                </div>\n              </p-toolbar>\n              <div class=\"ui-g-12\" style=\"height:50vh;\" echarts theme=\"shine\" [options]=\"lotNgOption\" [loading]=\"isLotNgLoading\"></div>\n            </div>\n\n            <div class=\"ui-g-6\" style=\"border:2px solid rgba(0, 0, 0, 0.315);\">\n              <p-toolbar [style]=\"{'height':'6vh','margin':0}\">\n                <div class=\"ui-toolbar-group-left\">\n                  è¯·éæ©ä¸è¯:\n                  <p-dropdown [options]=\"rtPictureList\" [(ngModel)]=\"rtPicture\" (onChange)=\"setRtPictureOption()\"></p-dropdown>\n                </div>\n              </p-toolbar>\n              <div class=\"ui-g-12\" style=\"height:50vh;\" echarts theme=\"shine\" [options]=\"rtPictureOption\" [loading]=\"isRtPictureLoading\"></div>\n            </div>\n\n          </div>\n        </p-tabPanel>\n      </p-tabView>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/outstandingcase/transparent-display/inspection/inspection.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InspectionComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common_http__ = __webpack_require__("./node_modules/@angular/common/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_app_outstandingcase_utils_date_util__ = __webpack_require__("./src/app/outstandingcase/utils/date.util.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_app_common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var InspectionComponent = /** @class */ (function () {
    function InspectionComponent(apiService, http) {
        this.apiService = apiService;
        this.http = http;
        this.dateUtil = new __WEBPACK_IMPORTED_MODULE_2_app_outstandingcase_utils_date_util__["a" /* DateUtil */]();
        this.quantityPieOption = {};
        this.quantityPieLayer = 1;
        this.quantityPieGroup = 'ALL';
        this.quantityPieShift = 'ALL';
        this.quantityPieWorkShift = 'ALL';
        this.quantityPieStar = 'ALL';
        this.qualityPieOption = {};
        this.qualityPieLayer = 1;
        this.qualityPieGroup = 'ALL';
        this.qualityPieShift = 'ALL';
        this.qualityPieWorkShift = 'ALL';
        this.qualityPieStar = 'ALL';
        this.searchStars = [
            { label: 'ALL', value: "ALL" },
            { label: '1æçº§', value: "1" },
            { label: '2æçº§', value: "2" },
            { label: '3æçº§', value: "3" },
            { label: '4æçº§', value: "4" }
        ];
        this.searchStar = 'ALL';
        this.searchGroup = 'ALL';
        this.searchShift = 'ALL';
        this.searchWorkShift = 'ALL';
        this.lotNgProduct = 'ALL';
        this.rtPictureList = [
            { label: 'DUCK', value: 'DUCK' },
            { label: 'White L0', value: 'White L0' },
            { label: 'White L63', value: 'White L63' },
            { label: 'L127-N', value: 'L127-N' },
            { label: 'White L255', value: 'White L255' },
            { label: 'NEW Cross Talk', value: 'NEW Cross Talk' },
            { label: 'Red L255', value: 'Red L255' },
            { label: 'Flicker', value: 'Flicker' }
        ];
        this.rtPicture = "DUCK";
        this.today = new Date();
        this.yesterday = new Date(this.today.getTime() - 24 * 60 * 60 * 1000);
        this.thirtyDaysAgo = new Date(this.today.getTime() - 30 * 24 * 60 * 60 * 1000);
        this.fiTopOption = {};
        this.viTopOption = {};
        this.qualityTopStart = this.yesterday;
        this.qualityTopEnd = this.yesterday;
        this.fiProductCapacityOption = {};
        this.viProductCapacityOption = {};
        this.productCapacityStart = this.yesterday;
        this.productCapacityEnd = this.yesterday;
        this.fiHourCapacityOption = {};
        this.viHourCapacityOption = {};
        this.hourCapacitySearchTime = this.yesterday;
        this.defectPictureOption = {};
        this.defectPictureStart = this.yesterday;
        this.defectPictureEnd = this.yesterday;
        this.defectQtyOption = {};
        this.defectQtyStart = this.yesterday;
        this.defectQtyEnd = this.yesterday;
        this.defectProductOption = {};
        this.defectProductStart = this.yesterday;
        this.defectProductEnd = this.yesterday;
        this.ppmOption = {};
        this.lotNgOption = {};
        this.rtPictureOption = {};
    }
    InspectionComponent.prototype.ngOnInit = function () {
        this.setQualityPieOption();
        this.setQuantityPieOption();
        this.initSearchSelectors();
    };
    InspectionComponent.prototype.setQualityPieOption = function () {
        var _this = this;
        this.isQualityPieLoading = true;
        var url = "assets/data/inspection.json";
        var options = {
            params: {
                type: 'quality',
                star: this.qualityPieStar,
                group: this.qualityPieGroup,
                shift: this.qualityPieShift,
                workShift: this.qualityPieWorkShift,
                layer: this.qualityPieLayer + ''
            }
        };
        this.http.get(url).subscribe(function (response) {
            var res = response['qualityPie'];
            _this.qualityPieOption = {};
            _this.qualityPieOption = {
                title: {
                    text: _this.setPieTitle('quality', _this.qualityPieLayer),
                    x: 'center',
                    textStyle: {
                        fontSize: 13
                    }
                },
                tooltip: {
                    trigger: 'item',
                    formatter: "{a} <br/>{b}: {c} ({d}%)"
                },
                toolbox: {
                    right: '15',
                    top: '9',
                    show: true,
                    feature: {
                        restore: {},
                        saveAsImage: {},
                        mytool1: {
                            show: true,
                            title: 'è¿åä¸ä¸çº§',
                            icon: 'path://M868 545.5L536.1 163c-12.7-14.7-35.5-14.7-48.3 '
                                + '0L156 545.5c-4.5 5.2-0.8 13.2 6 13.2h81c4.6 0 9-2 12.1-5.5L474 300.9V864c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 '
                                + '8-8V300.9l218.9 252.3c3 3.5 7.4 5.5 12.1 5.5h81c6.8 0 10.5-8 6-13.2z',
                            onclick: function () {
                                if (_this.qualityPieLayer === 5) {
                                    _this.qualityPieLayer--;
                                    _this.qualityPieWorkShift = 'ALL';
                                }
                                else if (_this.qualityPieLayer === 4) {
                                    _this.qualityPieLayer--;
                                    _this.qualityPieShift = 'ALL';
                                }
                                else if (_this.qualityPieLayer === 3) {
                                    _this.qualityPieLayer--;
                                    _this.qualityPieGroup = 'ALL';
                                }
                                else if (_this.qualityPieLayer === 2) {
                                    _this.qualityPieLayer--;
                                    _this.qualityPieStar = 'ALL';
                                }
                                else {
                                    return;
                                }
                                _this.setQualityPieOption();
                            }
                        }
                    }
                },
                series: [
                    {
                        name: 'äº§è½åå¸',
                        type: 'pie',
                        data: _this.getPieSeriesData(res['xData'], res['yData'], _this.qualityPieLayer)
                    }
                ]
            };
            _this.isQualityPieLoading = false;
        });
    };
    InspectionComponent.prototype.setQuantityPieOption = function () {
        var _this = this;
        this.isQuantityPieLoading = true;
        var url = "assets/data/inspection.json";
        var options = {
            params: {
                type: 'quantity',
                star: this.quantityPieStar,
                group: this.quantityPieGroup,
                shift: this.quantityPieShift,
                workShift: this.quantityPieWorkShift,
                layer: this.quantityPieLayer + ''
            }
        };
        this.http.get(url).subscribe(function (response) {
            var res = response['quantityPie'];
            _this.isQuantityPieLoading = false;
            if (_this.quantityPieLayer === 1) { }
            _this.quantityPieOption = {
                title: {
                    text: _this.setPieTitle('quantity', _this.quantityPieLayer),
                    x: 'center',
                    textStyle: {
                        fontSize: 13
                    }
                },
                tooltip: {
                    trigger: 'item',
                    formatter: "{a} <br/>{b}: {c} ({d}%)"
                },
                toolbox: {
                    right: '15',
                    top: '9',
                    show: true,
                    feature: {
                        restore: {},
                        saveAsImage: {},
                        mytool1: {
                            show: true,
                            title: 'è¿åä¸ä¸çº§',
                            icon: 'path://M868 545.5L536.1 163c-12.7-14.7-35.5-14.7-48.3 '
                                + '0L156 545.5c-4.5 5.2-0.8 13.2 6 13.2h81c4.6 0 9-2 12.1-5.5L474 300.9V864c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 '
                                + '8-8V300.9l218.9 252.3c3 3.5 7.4 5.5 12.1 5.5h81c6.8 0 10.5-8 6-13.2z',
                            onclick: function () {
                                if (_this.quantityPieLayer === 5) {
                                    _this.quantityPieLayer--;
                                    _this.quantityPieWorkShift = 'ALL';
                                }
                                else if (_this.quantityPieLayer === 4) {
                                    _this.quantityPieLayer--;
                                    _this.quantityPieShift = 'ALL';
                                }
                                else if (_this.quantityPieLayer === 3) {
                                    _this.quantityPieLayer--;
                                    _this.quantityPieGroup = 'ALL';
                                }
                                else if (_this.quantityPieLayer === 2) {
                                    _this.quantityPieLayer--;
                                    _this.quantityPieStar = 'ALL';
                                }
                                else {
                                    return;
                                }
                                _this.setQuantityPieOption();
                            }
                        }
                    }
                },
                series: [
                    {
                        name: 'äº§è½åå¸',
                        type: 'pie',
                        data: _this.getPieSeriesData(res['xData'], res['yData'], _this.quantityPieLayer)
                    }
                ]
            };
        });
    };
    InspectionComponent.prototype.setPieTitle = function (type, layer) {
        var title = '';
        if (layer === 1) {
            title = 'èå·¥æçº§åå¸';
        }
        else if (layer === 2) {
            if (type === 'quality') {
                title = this.qualityPieStar + 'æçº§èå·¥ç§å®¤åå¸';
            }
            else {
                title = this.quantityPieStar + 'æçº§èå·¥ç§å®¤åå¸';
            }
        }
        else if (layer === 3) {
            if (type === 'quality') {
                title = this.qualityPieGroup + this.qualityPieStar + 'æçº§èå·¥ç§å®¤åå¸';
            }
            else {
                title = this.quantityPieGroup + this.quantityPieStar + 'æçº§èå·¥ç§å®¤åå¸';
            }
        }
        else if (layer === 4) {
            if (type === 'quality') {
                title = this.qualityPieGroup + this.qualityPieShift + this.qualityPieStar + 'æçº§èå·¥ç§å®¤åå¸';
            }
            else {
                title = this.quantityPieGroup + this.quantityPieShift + this.quantityPieStar + 'æçº§èå·¥ç§å®¤åå¸';
            }
        }
        else {
            if (type === 'quality') {
                title = this.qualityPieGroup + this.qualityPieShift + this.qualityPieWorkShift + this.qualityPieStar + 'æçº§èå·¥ç§å®¤åå¸';
            }
            else {
                title = this.quantityPieGroup + this.quantityPieShift + this.quantityPieWorkShift + this.quantityPieStar + 'æçº§èå·¥ç§å®¤åå¸';
            }
        }
        if (type === 'quality') {
            title += '(äº§è½)';
        }
        else {
            title += '(åè´¨)';
        }
        return title;
    };
    InspectionComponent.prototype.pieClick = function (event, type) {
        /* if (type === 'quality') {
          if (this.qualityPieLayer === 1) {
            this.qualityPieStar = event.name.substring(0, 1);
          } else if (this.qualityPieLayer === 2) {
            this.qualityPieGroup = event.name;
          } else if (this.qualityPieLayer === 3) {
            this.qualityPieShift = event.name;
          } else if (this.qualityPieLayer === 4) {
            this.qualityPieWorkShift = event.name;
          } else {
            return;
          }
          this.qualityPieLayer++;
          this.setQualityPieOption();
        } else {
          if (this.quantityPieLayer === 1) {
            this.quantityPieStar = event.name.substring(0, 1);
          } else if (this.quantityPieLayer === 2) {
            this.quantityPieGroup = event.name;
          } else if (this.quantityPieLayer === 3) {
            this.quantityPieShift = event.name;
          } else if (this.quantityPieLayer === 4) {
            this.quantityPieWorkShift = event.name;
          } else {
            return;
          }
          this.quantityPieLayer++;
          this.setQuantityPieOption();
        } */
        alert('æ°æ®ä¸å¨ï¼æ æ³é»åï¼');
    };
    InspectionComponent.prototype.getPieSeriesData = function (xData, yData, layer) {
        var data = new Array();
        for (var i = 0; i < xData.length; i++) {
            if (layer === 1) {
                data = data.concat([{ value: yData[i], name: xData[i] + 'æçº§' }]);
            }
            else {
                data = data.concat([{ value: yData[i], name: xData[i] }]);
            }
        }
        return data;
    };
    InspectionComponent.prototype.initSearchSelectors = function () {
        this.updateSearchGroups();
    };
    InspectionComponent.prototype.updateSearchGroups = function () {
        var _this = this;
        var url = "/transparent/inspection/group/selectors";
        var options = {
            params: {
                group: this.searchGroup,
                shift: this.searchShift,
                type: 'group'
            }
        };
        this.apiService.get(url, options).subscribe(function (res) {
            _this.searchGroups = [];
            for (var i = 0; i < res.length; i++) {
                _this.searchGroups = _this.searchGroups.concat([{ label: res[i], value: res[i] }]);
            }
            _this.searchGroup = _this.searchGroups[0]['value'];
            _this.updateSearchShifts();
        });
    };
    InspectionComponent.prototype.updateSearchShifts = function () {
        var _this = this;
        var url = "/transparent/inspection/group/selectors";
        var options = {
            params: {
                group: this.searchGroup,
                shift: this.searchShift,
                type: 'shift'
            }
        };
        this.apiService.get(url, options).subscribe(function (res) {
            _this.searchShifts = [];
            for (var i = 0; i < res.length; i++) {
                _this.searchShifts = _this.searchShifts.concat([{ label: res[i], value: res[i] }]);
            }
            _this.searchShift = _this.searchShifts[0]['value'];
            _this.updateSearchWorkShifts();
        });
    };
    InspectionComponent.prototype.updateSearchWorkShifts = function () {
        var _this = this;
        var url = "/transparent/inspection/group/selectors";
        var options = {
            params: {
                group: this.searchGroup,
                shift: this.searchShift,
                type: 'workShift'
            }
        };
        this.apiService.get(url, options).subscribe(function (res) {
            _this.searchWorkShifts = [];
            for (var i = 0; i < res.length; i++) {
                _this.searchWorkShifts = _this.searchWorkShifts.concat([{ label: res[i], value: res[i] }]);
            }
            _this.searchWorkShift = _this.searchWorkShifts[0]['value'];
            _this.initDetail();
        });
    };
    InspectionComponent.prototype.initDetail = function () {
        this.setUserList();
    };
    InspectionComponent.prototype.setUserList = function () {
        var _this = this;
        var url = "/transparent/inspection/group/user-list";
        var options = {
            params: {
                star: this.searchStar,
                group: this.searchGroup,
                shift: this.searchShift,
                workShift: this.searchWorkShift
            }
        };
        this.apiService.get(url, options).subscribe(function (res) {
            _this.qualityUserList = res['qualityUserList'];
            _this.quantityUserList = res['quantityUserList'];
            _this.lotNgProductList = [];
            for (var i = 0; i < res['productList'].length; i++) {
                _this.lotNgProductList = _this.lotNgProductList.concat([{ label: res['productList'][i], value: res['productList'][i] }]);
            }
            _this.lotNgProduct = _this.lotNgProductList[0]['value'];
            _this.initQuality();
            _this.initQuantity();
        });
    };
    InspectionComponent.prototype.initQuality = function () {
        this.setFiViTopOption();
        this.setProductCapacityOption();
        this.setHourCapacityOption();
    };
    InspectionComponent.prototype.initQuantity = function () {
        this.setDefectPictureOption();
        this.setDefectQtyOption();
        this.setDefectProductOption();
        this.setPpmOption();
        this.setLotNgOption();
        this.setRtPictureOption();
    };
    InspectionComponent.prototype.setFiViTopOption = function () {
        var _this = this;
        this.isFiTopChartLoading = true;
        this.isViTopChartLoading = true;
        var url = "assets/data/inspection.json";
        var options = {
            params: {
                userList: this.qualityUserList,
                startTime: this.dateUtil.getFormatDate(this.qualityTopStart, 'yyyymmdd'),
                endTime: this.dateUtil.getFormatDate(this.qualityTopEnd, 'yyyymmdd')
            }
        };
        var endDate = new Date(this.qualityTopEnd.getTime() + 24 * 60 * 60 * 1000);
        var subTitle = this.qualityTopStart.getFullYear() + 'å¹´' + (this.qualityTopStart.getMonth() + 1) + 'æ' + this.qualityTopStart.getDate() + 'æ¥6æ¶~'
            + endDate.getFullYear() + 'å¹´' + (endDate.getMonth() + 1) + 'æ' + endDate.getDate() + 'æ¥6æ¶';
        this.http.get(url).subscribe(function (res) {
            res = res['fiviTop'];
            _this.fiTopOption = {
                title: {
                    text: 'FIäº§è½TOP15',
                    subtext: subTitle,
                    x: 'center',
                    y: 5
                },
                xAxis: {
                    type: 'category',
                    data: res['fiUser'],
                    axisLabel: {
                        rotate: 45,
                        interval: 0,
                        color: '#000000',
                        textStyle: {
                            fontSize: '8'
                        }
                    }
                },
                yAxis: {
                    type: 'value'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [{
                        data: res['fiQty'],
                        type: 'bar'
                    }]
            };
            _this.isFiTopChartLoading = false;
            _this.viTopOption = {
                title: {
                    text: 'VIäº§è½TOP15',
                    subtext: subTitle,
                    x: 'center',
                    y: 5
                },
                xAxis: {
                    type: 'category',
                    data: res['viUser'],
                    axisLabel: {
                        rotate: 45,
                        interval: 0,
                        color: '#000000',
                        textStyle: {
                            fontSize: '8'
                        }
                    }
                },
                yAxis: {
                    type: 'value'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [{
                        color: '#91d4fa',
                        data: res['viQty'],
                        type: 'bar'
                    }]
            };
            _this.isViTopChartLoading = false;
        });
    };
    InspectionComponent.prototype.setProductCapacityOption = function () {
        var _this = this;
        this.isFiProductCapacityLoading = true;
        this.isViProductCapacityLoading = true;
        var url = 'assets/data/inspection.json';
        var options = {
            params: {
                startTime: this.dateUtil.getDate(this.productCapacityStart),
                endTime: this.dateUtil.getDate(this.productCapacityEnd),
                userList: this.qualityUserList
            }
        };
        var endDate = new Date(this.productCapacityEnd.getTime() + 24 * 60 * 60 * 1000);
        var subTitle = this.productCapacityStart.getFullYear() + 'å¹´' + (this.productCapacityStart.getMonth() + 1)
            + 'æ' + this.productCapacityStart.getDate() + 'æ¥6æ¶~'
            + endDate.getFullYear() + 'å¹´' + (endDate.getMonth() + 1) + 'æ' + endDate.getDate() + 'æ¥6æ¶';
        this.http.get(url).subscribe(function (res) {
            res = res['fiviProduct'];
            _this.fiProductCapacityOption = {
                title: {
                    text: 'åäº§åFIäº§è½ä¿¡æ¯',
                    subtext: subTitle,
                    x: 'center',
                    y: 5
                },
                yAxis: {
                    type: 'category',
                    data: res['fiProduct'],
                    axisLabel: {
                        interval: 0,
                        color: '#000000',
                        textStyle: {
                            fontSize: '9'
                        }
                    }
                },
                xAxis: {
                    type: 'value',
                    min: 0
                },
                dataZoom: [
                    {
                        type: 'inside',
                        xAxisIndex: [0],
                        start: 1,
                        end: 100
                    },
                    {
                        type: 'inside',
                        yAxisIndex: [0],
                        start: 1,
                        end: 100
                    }
                ],
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [{
                        color: '#B8860B',
                        data: res['fiQty'],
                        type: 'bar'
                    }]
            };
            _this.isFiProductCapacityLoading = false;
            _this.viProductCapacityOption = {
                title: {
                    text: 'åäº§åVIäº§è½ä¿¡æ¯',
                    subtext: subTitle,
                    x: 'center',
                    y: 5
                },
                yAxis: {
                    type: 'category',
                    data: res['viProduct'],
                    axisLabel: {
                        interval: 0,
                        color: '#000000',
                        textStyle: {
                            fontSize: '9'
                        }
                    }
                },
                xAxis: {
                    type: 'value',
                    min: 0
                },
                dataZoom: [
                    {
                        type: 'inside',
                        xAxisIndex: [0],
                        start: 1,
                        end: 100
                    },
                    {
                        type: 'inside',
                        yAxisIndex: [0],
                        start: 1,
                        end: 100
                    }
                ],
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [{
                        color: '#BCD2EE',
                        data: res['viQty'],
                        type: 'bar'
                    }]
            };
            _this.isViProductCapacityLoading = false;
        });
    };
    InspectionComponent.prototype.setHourCapacityOption = function () {
        var _this = this;
        this.isFiHourCapacityLoading = true;
        this.isViHourCapacityLoading = true;
        var url = "assets/data/inspection.json";
        var options = {
            params: {
                userList: this.qualityUserList,
                time: this.dateUtil.getDate(this.hourCapacitySearchTime)
            }
        };
        this.http.get(url, options).subscribe(function (res) {
            res = res['fiviHour'];
            _this.isFiHourCapacityLoading = true;
            _this.isViHourCapacityLoading = true;
            var subTitle = _this.dateUtil.getFormatDate(_this.hourCapacitySearchTime, 'yyyyå¹´mmæddæ¥') + '6æ¶'
                + _this.dateUtil.getFormatDate(new Date(_this.hourCapacitySearchTime.getTime() + 24 * 60 * 60 * 1000), 'yyyyå¹´mmæddæ¥') + '5æ¶';
            var fiIndicator = [];
            var viIndicator = [];
            for (var i = 0; i < res['hour'].length; i++) {
                fiIndicator = fiIndicator.concat([{ text: res['hour'][i], max: res['fiMax'] }]);
                viIndicator = viIndicator.concat([{ text: res['hour'][i], max: res['viMax'] }]);
            }
            _this.fiHourCapacityOption = {
                title: {
                    text: 'å°æ¶å«FIäº§è½ä¿¡æ¯',
                    subtext: subTitle,
                    x: 'center',
                    y: 5
                },
                tooltip: {},
                radar: [
                    {
                        indicator: fiIndicator,
                        radius: 85,
                        center: ['50%', '60%']
                    }
                ],
                series: [
                    {
                        type: "radar",
                        name: 'FIå°æ¶å«äº§è½',
                        tooltip: {
                            trigger: 'item'
                        },
                        data: [
                            {
                                value: res['fiQty']
                            }
                        ]
                    }
                ]
            };
            _this.isFiHourCapacityLoading = false;
            _this.viHourCapacityOption = {
                title: {
                    text: 'å°æ¶å«VIäº§è½ä¿¡æ¯',
                    subtext: subTitle,
                    x: 'center',
                    y: 5
                },
                tooltip: {},
                radar: [
                    {
                        indicator: viIndicator,
                        radius: 85,
                        center: ['50%', '60%']
                    }
                ],
                series: [
                    {
                        type: "radar",
                        name: 'VIå°æ¶å«äº§è½',
                        tooltip: {
                            trigger: 'item'
                        },
                        data: [
                            {
                                value: res['viQty']
                            }
                        ]
                    }
                ]
            };
            _this.isViHourCapacityLoading = false;
        });
    };
    InspectionComponent.prototype.setDefectPictureOption = function () {
        var _this = this;
        this.isDefectPictureLoading = true;
        var url = "assets/data/inspection.json";
        var options = {
            params: {
                userList: this.quantityUserList,
                startTime: this.dateUtil.getDate(this.defectPictureStart),
                endTime: this.dateUtil.getDate(this.defectPictureEnd)
            }
        };
        this.http.get(url).subscribe(function (response) {
            var res = response['defectPicture'];
            var data = [];
            var legend = [];
            for (var i = 0; i < res.length; i++) {
                data = data.concat([{ value: res[i]['QTY'], name: res[i]['PATTERN'] }]);
                legend = legend.concat([res[i]['PATTERN']]);
            }
            _this.defectPictureOption = {
                title: {
                    text: ''
                },
                tooltip: {
                    trigger: 'item',
                    formatter: "{a} <br/>{b}: {c} ({d}%)"
                },
                legend: {
                    orient: 'horizontal',
                    x: 'center',
                    y: 'bottom',
                    data: legend
                },
                series: [
                    {
                        type: 'pie',
                        name: 'ä¸è¯ç»é¢',
                        radius: ['50%', '70%'],
                        avoidLabelOverlap: true,
                        label: {
                            normal: {
                                show: true
                            },
                            emphasis: {
                                show: true,
                                textStyle: {
                                    fontSize: '20',
                                    fontWeight: 'bold'
                                }
                            }
                        },
                        labelLine: {
                            normal: {
                                show: true
                            }
                        },
                        data: data
                    }
                ]
            };
            _this.isDefectPictureLoading = false;
        });
    };
    InspectionComponent.prototype.setDefectQtyOption = function () {
        var _this = this;
        this.isDefectQtyLoading = true;
        var url = 'assets/data/inspection.json';
        var options = {
            params: {
                userList: this.quantityUserList,
                startTime: this.dateUtil.getDate(this.defectQtyStart),
                endTime: this.dateUtil.getDate(this.defectQtyEnd)
            }
        };
        this.http.get(url, options).subscribe(function (res) {
            res = res['rtType'];
            _this.defectQtyOption = {
                title: {
                    text: 'è¿æ£ä¸è¯ç±»å(Top12)',
                    x: 'center',
                    y: 5
                },
                tooltip: {},
                xAxis: {
                    type: 'category',
                    data: res['defectCode'],
                    axisLabel: {
                        rotate: 45,
                        interval: 0,
                        textStyle: {
                            fontSize: '8'
                        }
                    }
                },
                yAxis: {
                    type: 'value',
                    min: 0
                },
                series: [
                    {
                        color: '#66CDAA',
                        name: 'ä¸è¯åç§°',
                        type: 'bar',
                        data: res['qty']
                    }
                ]
            };
            _this.isDefectQtyLoading = false;
        });
    };
    InspectionComponent.prototype.setDefectProductOption = function () {
        var _this = this;
        this.isDefectProductLoading = true;
        var url = 'assets/data/inspection.json';
        var options = {
            params: {
                startTime: this.dateUtil.getDate(this.defectProductStart),
                endTime: this.dateUtil.getDate(this.defectProductEnd),
                userList: this.quantityUserList
            }
        };
        this.http.get(url, options).subscribe(function (res) {
            res = res['rtProduct'];
            var subTitle = _this.dateUtil.getFormatDate(_this.defectProductStart, 'yyyyå¹´mmæddæ¥6æ¶') + '~'
                + _this.dateUtil.getFormatDate(new Date(_this.defectProductEnd.getTime() + 24 * 60 * 60 * 1000), 'yyyyå¹´mmæddæ¥5æ¶');
            _this.defectProductOption = {
                title: {
                    text: 'è¿æ£äº§åæ°éä¿¡æ¯',
                    subText: subTitle,
                    x: 'center',
                    y: 5
                },
                yAxis: {
                    type: 'category',
                    data: res['product'],
                    axisLabel: {
                        interval: 0,
                        color: '#000000',
                        textStyle: {
                            fontSize: '9'
                        }
                    }
                },
                xAxis: {
                    type: 'value',
                    min: 0
                },
                dataZoom: [
                    {
                        type: 'inside',
                        xAxisIndex: [0],
                        start: 1,
                        end: 100
                    },
                    {
                        type: 'inside',
                        yAxisIndex: [0],
                        start: 1,
                        end: 100
                    }
                ],
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [{
                        color: '#1C86EE',
                        data: res['qty'],
                        type: 'bar'
                    }]
            };
            _this.isDefectProductLoading = false;
        });
    };
    InspectionComponent.prototype.setPpmOption = function () {
        var _this = this;
        this.isPpmLoading = true;
        var url = 'assets/data/inspection.json';
        var options = {
            params: {
                userList: this.quantityUserList
            }
        };
        this.http.get(url, options).subscribe(function (res) {
            res = res['ppm'];
            _this.ppmOption = {
                title: {
                    text: 'èå·¥è¿æ£PPM',
                    x: 'center',
                    y: 5
                },
                xAxis: {
                    type: 'category',
                    data: res['date'],
                    axisLabel: {
                        interval: 0,
                        color: '#000000',
                        textStyle: {
                            fontSize: '9'
                        }
                    }
                },
                yAxis: {
                    type: 'value',
                    min: 0
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [
                    {
                        color: '#e6b600',
                        type: 'line',
                        name: 'ppm',
                        itemStyle: {
                            normal: {
                                borderWidth: 1
                            }
                        },
                        label: {
                            show: true,
                            position: 'insideBottom',
                            fontSize: 8,
                            color: '#000000',
                            formatter: function (params) {
                                return params.value;
                            }
                        },
                        data: res['ppm']
                    },
                    {
                        color: '#c12e34',
                        type: 'line',
                        name: 'ppm avg',
                        itemStyle: {
                            normal: {
                                borderWidth: 1
                            }
                        },
                        label: {
                            show: true,
                            position: 'insideBottom',
                            color: '#000000',
                            fontSize: 8,
                            formatter: function (params) {
                                return params.value;
                            }
                        },
                        data: res['avg']
                    }
                ]
            };
            _this.isPpmLoading = false;
        });
    };
    InspectionComponent.prototype.setLotNgOption = function () {
        var _this = this;
        this.isLotNgLoading = true;
        var url = "assets/data/inspection.json";
        var options = {
            params: {
                userList: this.quantityUserList,
                product: this.lotNgProduct
            }
        };
        this.http.get(url, options).subscribe(function (res) {
            res = res['lotNg'];
            _this.lotNgOption = {
                title: {
                    text: 'FI&VI LOT NGçæ¨ç§»å¾',
                    x: 'center',
                    y: 5
                },
                xAxis: {
                    type: 'category',
                    data: res['date'],
                    axisLabel: {
                        interval: 0,
                        rotate: 45,
                        textStyle: {
                            fontSize: '10'
                        },
                        color: '#000000',
                    }
                },
                yAxis: {
                    type: 'value',
                    min: 0
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [
                    {
                        color: '#2789e6',
                        type: 'line',
                        name: 'æLOT NGç',
                        itemStyle: {
                            normal: {
                                borderWidth: 1
                            }
                        },
                        label: {
                            show: true,
                            position: 'insideBottom',
                            color: '#000000',
                            fontSize: 8,
                            formatter: function (params) {
                                return params.value + '%';
                            }
                        },
                        data: res['monthlyRatio']
                    },
                    {
                        color: '#2789e6',
                        type: 'line',
                        name: 'å¨LOT NGç',
                        itemStyle: {
                            normal: {
                                borderWidth: 1
                            }
                        },
                        label: {
                            show: true,
                            position: 'insideBottom',
                            color: '#000000',
                            fontSize: 8,
                            formatter: function (params) {
                                return params.value + '%';
                            }
                        },
                        data: res['weeklyRatio']
                    },
                    {
                        color: '#2789e6',
                        type: 'line',
                        name: 'æ¥LOT NGç',
                        itemStyle: {
                            normal: {
                                borderWidth: 1
                            }
                        },
                        label: {
                            show: true,
                            position: 'insideBottom',
                            color: '#000000',
                            fontSize: 8,
                            formatter: function (params) {
                                return params.value + '%';
                            }
                        },
                        data: res['dailyRatio']
                    }
                ]
            };
            _this.isLotNgLoading = false;
        });
    };
    InspectionComponent.prototype.setRtPictureOption = function () {
        var _this = this;
        this.isRtPictureLoading = true;
        var url = "assets/data/inspection.json";
        var options = {
            params: {
                userList: this.quantityUserList,
                picture: this.rtPicture
            }
        };
        this.http.get(url, options).subscribe(function (res) {
            res = res['rtGood'];
            _this.rtPictureOption = {
                title: {
                    text: _this.rtPicture + 'æ£åºä¼ç§äººå',
                    x: 'center',
                    y: 5
                },
                xAxis: {
                    type: 'category',
                    data: res['staff'],
                    axisLabel: {
                        interval: 0,
                        rotate: 45,
                        textStyle: {
                            fontSize: '8'
                        },
                        color: '#000000',
                    }
                },
                yAxis: {
                    type: 'value',
                    min: 0
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        crossStyle: {
                            color: '#999'
                        }
                    }
                },
                series: [
                    {
                        color: '#1C86EE',
                        data: res['ppm'],
                        type: 'bar'
                    }
                ]
            };
            _this.isRtPictureLoading = false;
        });
    };
    InspectionComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-inspection',
            template: __webpack_require__("./src/app/outstandingcase/transparent-display/inspection/inspection.component.html"),
            styles: [__webpack_require__("./src/app/outstandingcase/transparent-display/inspection/inspection.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3_app_common_service_api_api_service__["a" /* ApiService */], __WEBPACK_IMPORTED_MODULE_1__angular_common_http__["b" /* HttpClient */]])
    ], InspectionComponent);
    return InspectionComponent;
}());



/***/ }),

/***/ "./src/app/outstandingcase/utils/date.util.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DateUtil; });
var DateUtil = /** @class */ (function () {
    function DateUtil() {
    }
    DateUtil.prototype.getDate = function (date) {
        var month = ((date.getMonth()) + 1) < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + '';
        var day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate() + '';
        return date.getFullYear() + month + day;
    };
    DateUtil.prototype.getNewDate = function (date, days) {
        return new Date(date.getTime() + days * 24 * 60 * 60 * 1000);
    };
    DateUtil.prototype.getDateShiftDay = function (date) {
        return date.getFullYear() + '' + (date.getMonth() + 1) + '' + date.getDate() + ' 060000';
    };
    DateUtil.prototype.getDateShiftNight = function (date) {
        return date.getFullYear() + '' + (date.getMonth() + 1) + '' + date.getDate() + ' 180000';
    };
    DateUtil.prototype.getFormatDate = function (date, str) {
        var year = date.getFullYear() + '';
        var month = (date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1) + '';
        var day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate() + '';
        var hour = date.getHours() < 10 ? '0' + date.getHours() : date.getHours() + '';
        var min = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes() + '';
        var second = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds() + '';
        str = str.replace(/yyyy/ig, year);
        str = str.replace(/mm/ig, month);
        str = str.replace(/dd/ig, day);
        str = str.replace(/hh/ig, hour);
        str = str.replace(/mi/ig, min);
        str = str.replace(/ss/ig, second);
        return str;
    };
    return DateUtil;
}());



/***/ })

});
//# sourceMappingURL=outstandingcase.module.chunk.js.map