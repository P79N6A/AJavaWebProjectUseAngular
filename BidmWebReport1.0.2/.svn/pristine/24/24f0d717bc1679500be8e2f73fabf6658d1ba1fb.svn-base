webpackJsonp(["fixreportforms.module"],{

/***/ "./node_modules/file-saver/dist/FileSaver.min.js":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(a,b){if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if("undefined"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){"use strict";function b(a,b){return"undefined"==typeof b?b={autoBom:!1}:"object"!=typeof b&&(console.warn("Deprecated: Expected third argument to be a object"),b={autoBom:!b}),b.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type)?new Blob(["\uFEFF",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open("GET",b),e.responseType="blob",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error("could not download file")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open("HEAD",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent("click"))}catch(c){var b=document.createEvent("MouseEvents");b.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof global&&global.global===global?global:void 0,a=f.saveAs||("object"!=typeof window||window!==f?function(){}:"download"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement("a");g=g||b.name||"download",j.download=g,j.rel="noopener","string"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target="_blank")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:"msSaveOrOpenBlob"in navigator?function(f,g,h){if(g=g||f.name||"download","string"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement("a");i.href=f,i.target="_blank",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open("","_blank"),e&&(e.document.title=e.document.body.innerText="downloading..."),"string"==typeof a)return c(a,b,d);var g="application/octet-stream"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\/[\d]+/.test(navigator.userAgent);if((i||g&&h)&&"object"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,"data:attachment/file;"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,"undefined"!=typeof module&&(module.exports=a)});

//# sourceMappingURL=FileSaver.min.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__("./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./src/app/fixreportforms/cellproductiondaily/cellproductiondaily.component.css":
/***/ (function(module, exports) {

module.exports = ".test{\r\n    text-align: center;\r\n    border-style: solid;\r\n}\r\n\r\n/* 设置 表头的样式 一般的样式 */\r\n\r\n.header1{\r\n    background-color:#BDD7EE !important;\r\n    border:solid 1.5px rgb(165, 164, 164) !important;\r\n}\r\n\r\n/* 设置 表头的 第四行的样式  */\r\n\r\n.header2{\r\n    font-size : 8px  !important;\r\n    text-align: center !important;\r\n    padding-left: 5px !important;\r\n    background-color:#BDD7EE !important;\r\n    border:solid 1.5px rgb(165, 164, 164) !important;\r\n}\r\n\r\n/* 设置 最后的 total 的四行的样式*/\r\n\r\n.setfooter{\r\n    font-size: 8px !important;\r\n    padding-left: 3px !important;\r\n}"

/***/ }),

/***/ "./src/app/fixreportforms/cellproductiondaily/cellproductiondaily.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"ui-g\">\n  <p-panel>\n    <p-header>\n      <div class=\"ui-g-12\" style=\"text-align: center ;padding:0%;margin:0%;height: 40px;\">\n        <h3>Cell 生产日报 - 2019/3/11</h3> \n      </div>\n    </p-header>\n    <div class=\"ui-panel-content\">\n      <p-table [value]=\"data\">\n        <ng-template pTemplate=\"header\">\n          <!-- 第一行 -->\n          <tr >\n            <th rowspan=\"4\" class=\"header1 header2 header2\">尺寸</th>\n            <th colspan=\"14\" class=\"header1 header2\">Daily</th>\n            <th colspan=\"12\" class=\"header1 header2\">Month</th>\n          </tr>\n\n          <!-- 第二行 -->\n          <tr>\n            <th colspan=\"3\" class=\"header1 header2\">Plan In (Sheet)</th>\n            <th colspan=\"6\" class=\"header1 header2\">Cut Out (pcs)</th>\n            <th colspan=\"5\" class=\"header1 header2\">Cell Out (pcs)</th>\n\n            <th colspan=\"4\" class=\"header1 header2\">Plan In (Sheet)</th>\n            <th colspan=\"8\" class=\"header1 header2\">Cell Out (pcs)</th>\n\n\n          </tr>\n\n          <!-- 第三行 -->\n          <tr>\n            <th rowspan=\"2\" class=\"header1 header2\">Plan</th>\n            <th rowspan=\"2\" class=\"header1 header2\">Act</th>\n            <th rowspan=\"2\" class=\"header1 header2\">Bal</th>\n\n            <th colspan=\"2\" class=\"header1 header2\">Plan</th>\n            <th colspan=\"2\" class=\"header1 header2\">Act</th>\n            <th colspan=\"2\" class=\"header1 header2\">Bal</th>\n\n            <th colspan=\"2\" class=\"header1 header2\">Plan</th>\n            <th colspan=\"2\" class=\"header1 header2\">Act</th>\n            <th colspan=\"1\" class=\"header1 header2\">Bal</th>\n\n            <th rowspan=\"2\" class=\"header1 header2\">Plan全月</th>\n            <th rowspan=\"2\" class=\"header1 header2\">Plan累计</th>\n            <th rowspan=\"2\" class=\"header1 header2\">Act</th>\n            <th rowspan=\"2\" class=\"header1 header2\">Bal</th>\n\n            <th colspan=\"2\" class=\"header1 header2\">Plan全月</th>\n            <th colspan=\"2\" class=\"header1 header2\">Plan累计</th>\n            <th colspan=\"2\" class=\"header1 header2\">Action</th>\n            <th colspan=\"2\" class=\"header1 header2\">Balance</th>\n          </tr>\n\n          <!-- 第四行 -->\n          <tr>\n            <th class=\"header1 header2\">pcs</th>\n            <th class=\"header2\">Sheet</th>\n            <th class=\"header1 header2\">pcs</th>\n            <th class=\"header2\">Sheet</th>\n            <th class=\"header1 header2\">pcs</th>\n            <th class=\"header2\">Sheet</th>\n\n            <th class=\"header1 header2\">pcs</th>\n            <th class=\"header2\">Sheet</th>\n            <th class=\"header1 header2\">pcs</th>\n            <th class=\"header2\">Sheet</th>\n            <th class=\"header1 header2\">pcs</th>\n           \n            <th class=\"header1 header2\">pcs</th>\n            <th class=\"header2\">Sheet</th>\n            <th class=\"header1 header2\">pcs</th>\n            <th class=\"header2\">Sheet</th>\n            <th class=\"header1 header2\">pcs</th>\n            <th class=\"header2\">Sheet</th>\n            <th class=\"header1 header2\">pcs</th>\n            <th class=\"header2\">Sheet</th>\n            \n\n          </tr>\n        </ng-template>\n\n        <ng-template pTemplate=\"footer\">\n          <!-- 最后的第一行 -->\n          <tr>\n            <td class=\"setfooter\">T P</td>\n            <td rowspan=\"2\" class=\"setfooter\">3900</td>\n            <td rowspan=\"2\" class=\"setfooter\">3811</td>\n            <td rowspan=\"2\" class=\"setfooter\">-89</td>\n\n            <td class=\"setfooter\">189328</td>\n            <td class=\"setfooter\">4390</td>\n            <td class=\"setfooter\">215135</td>\n            <td rowspan=\"2\" class=\"setfooter\">4700</td>\n            <td rowspan=\"2\" class=\"setfooter\">25807</td>\n            <td rowspan=\"2\" class=\"setfooter\">380</td>\n\n            <td class=\"setfooter\">190578</td>\n            <td rowspan=\"2\" class=\"setfooter\">4381</td>\n            <td class=\"setfooter\">160560</td>\n            <td rowspan=\"2\" class=\"setfooter\">4437</td>\n            <td class=\"setfooter\" style=\"color:red\">(30018)</td>\n\n            <td rowspan=\"2\" class=\"setfooter\">145000</td>\n            <td rowspan=\"2\" class=\"setfooter\">32900</td>\n            <td rowspan=\"2\" class=\"setfooter\">31332</td>\n            <td rowspan=\"2\" class=\"setfooter\">-1568</td>\n\n            <td class=\"setfooter\">9171980</td>\n            <td rowspan=\"2\" class=\"setfooter\">136707</td>\n            <td class=\"setfooter\">1396446</td>\n            <td rowspan=\"2\" class=\"setfooter\">31639</td>\n            <td class=\"setfooter\">1278500</td>\n            <td rowspan=\"2\" class=\"setfooter\">33524</td>\n            <td class=\"setfooter\" style=\"color:red\">117946</td>\n            <td rowspan=\"2\" class=\"setfooter\">4593</td>\n          </tr>\n\n          <!-- 第二行  -->\n          <tr>\n            <td class=\"setfooter\">T G</td>  \n\n            <td class=\"setfooter\">4390</td>\n            <td class=\"setfooter\">215435</td>\n            <td class=\"setfooter\">4770</td>\n            <td class=\"setfooter\">4381</td>\n            <td class=\"setfooter\">4437</td>\n            <td class=\"setfooter\">56</td>\n\n            <td class=\"setfooter\">136707</td>\n            <td class=\"setfooter\">31639</td>\n            <td class=\"setfooter\">33524</td>\n            <td class=\"setfooter\">1886</td>\n          </tr>\n\n            <!-- 最后的第三行 -->\n            <tr>\n                <td class=\"setfooter\">T P</td>\n                <td rowspan=\"2\" class=\"setfooter\">3900</td>\n                <td rowspan=\"2\" class=\"setfooter\">3811</td>\n                <td rowspan=\"2\" class=\"setfooter\">-89</td>\n    \n                <td class=\"setfooter\">189328</td>\n                <td class=\"setfooter\">4390</td>\n                <td class=\"setfooter\">215135</td>\n                <td rowspan=\"2\" class=\"setfooter\">4700</td>\n                <td rowspan=\"2\" class=\"setfooter\">25807</td>\n                <td rowspan=\"2\" class=\"setfooter\">380</td>\n    \n                <td class=\"setfooter\">190578</td>\n                <td rowspan=\"2\" class=\"setfooter\">4381</td>\n                <td class=\"setfooter\">160560</td>\n                <td rowspan=\"2\" class=\"setfooter\">4437</td>\n                <td class=\"setfooter\" style=\"color:red\">(30018)</td>\n    \n                <td rowspan=\"2\" class=\"setfooter\">145000</td>\n                <td rowspan=\"2\" class=\"setfooter\">32900</td>\n                <td rowspan=\"2\" class=\"setfooter\">31332</td>\n                <td rowspan=\"2\" class=\"setfooter\">-1568</td>\n    \n                <td class=\"setfooter\">9171980</td>\n                <td rowspan=\"2\" class=\"setfooter\">136707</td>\n                <td class=\"setfooter\">1396446</td>\n                <td rowspan=\"2\" class=\"setfooter\">31639</td>\n                <td class=\"setfooter\">1278500</td>\n                <td rowspan=\"2\" class=\"setfooter\">33524</td>\n                <td class=\"setfooter\" style=\"color:red\">117946</td>\n                <td rowspan=\"2\" class=\"setfooter\">4593</td>\n    \n              </tr>\n    \n              <!-- 第四行  -->\n              <tr>\n                <td class=\"setfooter\">T G</td>  \n    \n                <td class=\"setfooter\">4390</td>\n                <td class=\"setfooter\">215435</td>\n                <td class=\"setfooter\">4770</td>\n                <td class=\"setfooter\">4381</td>\n                <td class=\"setfooter\">4437</td>\n                <td class=\"setfooter\">56</td>\n    \n                <td class=\"setfooter\">136707</td>\n                <td class=\"setfooter\">31639</td>\n                <td class=\"setfooter\">33524</td>\n                <td class=\"setfooter\">1886</td>\n              </tr>\n    \n\n        </ng-template>\n      </p-table>\n    </div>\n  </p-panel>\n\n</div>"

/***/ }),

/***/ "./src/app/fixreportforms/cellproductiondaily/cellproductiondaily.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CellproductiondailyComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var CellproductiondailyComponent = /** @class */ (function () {
    function CellproductiondailyComponent() {
        //1.保存数据的数组
        this.data = [];
    }
    CellproductiondailyComponent.prototype.ngOnInit = function () {
    };
    CellproductiondailyComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-cellproductiondaily',
            template: __webpack_require__("./src/app/fixreportforms/cellproductiondaily/cellproductiondaily.component.html"),
            styles: [__webpack_require__("./src/app/fixreportforms/cellproductiondaily/cellproductiondaily.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], CellproductiondailyComponent);
    return CellproductiondailyComponent;
}());



/***/ }),

/***/ "./src/app/fixreportforms/factoryproduct/factoryproduct.component.css":
/***/ (function(module, exports) {

module.exports = "th {\r\n    font-weight: inherit !important;\r\n    padding: 0.1em 0em !important;\r\n    font-size: 12px !important;\r\n    border: 1px solid #A6A6A6 !important;\r\n  }\r\n  \r\n  .setWidth {\r\n    width: 10% !important;\r\n  }\r\n  \r\n  .header1 {\r\n    font-weight: bold !important;\r\n  }\r\n  \r\n  .blue {\r\n    background-color: #BDD7EE !important;\r\n  }\r\n  \r\n  .green {\r\n    background-color: rgb(222, 240, 211) !important;\r\n  }\r\n  \r\n  .yellow {\r\n    background-color: #FFF2CC !important;\r\n  }\r\n  \r\n  .jiachu {\r\n    font-weight: bold !important;\r\n    color: black !important;\r\n  }\r\n  \r\n  .setRightBorder {\r\n    border-right-color: black !important;\r\n  }"

/***/ }),

/***/ "./src/app/fixreportforms/factoryproduct/factoryproduct.component.html":
/***/ (function(module, exports) {

module.exports = "<p-growl [(value)]=\"msgs\" sticky=\"true\"></p-growl>\n<div class=\"ui-g\">\n  <p-panel>\n    <p-header>\n      <div class=\"ui-g-12\">\n        <h2 style=\"text-align:center;margin: 0px 10px\">各工厂生产情况详情</h2>\n      </div>\n    </p-header>\n    <div class=\"ui-panel-content\">\n      <div class=\"ui-helper-clearfix\">\n        <div style=\"float:right;padding: 5px 20px\">\n          请输入日期：\n          <p-calendar [(ngModel)]=\"dateName\" dateFormat=\"yy/mm/dd\" id=\"hourMonitorCalendar\" placeholder=\"年/月/日\"></p-calendar>\n          <p-button label=\"查询\" (click)=\"query()\"></p-button>\n          <p-button label=\"刷新\" (click)=\"refresh()\"></p-button>\n          <p-button label=\"导出\" (click)=\"exportTable()\"></p-button>\n        </div>\n      </div>\n\n      <p-table id=\"hourmonitor\">\n        <ng-template pTemplate=\"caption\" id=\"hourmonitor\">\n          Monitor by Hour-{{nowDay}}\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th width=\"3%\" class=\"header1 blue\">Fac</th>\n            <th colspan=\"2\" width=\"8%\" class=\"header1 blue\">Operation</th>\n            <th class=\"header1 blue\" *ngFor=\"let time of timekey; let i = index\" [ngStyle]=\"{'width':i == 24 ? '4%':''}\" [ngClass]=\"{setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{time}}</th>\n            <th width=\"6%\" class=\"header1 blue\">Remark</th>\n          </tr>\n\n          <!-- Array In -->\n          <tr>\n            <th rowspan=\"11\" class=\"header1 green\">Array</th>\n            <th rowspan=\"3\" class=\"header1 green\">In</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of ArrayInPlan; let i = index\" class=\"green\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n            <!-- remark  是可以进行编辑 的-->\n            <th pEditableColumn rowspan=\"3\">\n              <p-cellEditor>\n                  <ng-template pTemplate=\"input\">\n                    <textarea pInputTextArea rows=\"4\" cols=\"10\" [(ngModel)]=\"ArrayInRemark\" style=\"width:100%\" (change)=\"updateRemark('Array In',0)\"></textarea>\n                  </ng-template>\n                  <ng-template pTemplate=\"output\">\n                    {{ArrayInRemark}}\n                  </ng-template>\n              </p-cellEditor>\n            </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of ArrayInAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of ArrayInBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- Array Mov -->\n          <tr>\n            <th rowspan=\"4\" class=\"header1 green\">Mov</th>\n            <th class=\"header1 green\">PECVD</th>\n            <th *ngFor=\"let qty of ArrayMovPecvd;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n             <!-- remark  是可以进行编辑 的-->\n             <th pEditableColumn rowspan=\"4\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"4\" cols=\"10\" [(ngModel)]=\"ArrayMovRemark\" style=\"width:100%\" (change)=\"updateRemark('Array Mov',1)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{ArrayMovRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Sputter</th>\n            <th *ngFor=\"let qty of ArrayMovSputter;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Photo</th>\n            <th *ngFor=\"let qty of ArrayMovPhoto;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Etch</th>\n            <th *ngFor=\"let qty of ArrayMovEtch;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- Array Out -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 green\">Out</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of ArrayOutPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n             <!-- remark  是可以进行编辑 的-->\n             <th pEditableColumn rowspan=\"4\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"4\" cols=\"10\" [(ngModel)]=\"ArrayOutRemark\" style=\"width:100%\" (change)=\"updateRemark('Array Out',2)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{ArrayOutRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of ArrayOutAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of ArrayOutBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- Array WIP -->\n          <tr>\n            <th colspan=\"2\" class=\"header1 green\">WIP</th>\n            <th *ngFor=\"let qty of ArrayWip;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n          </tr>\n\n          <!-- CF In -->\n          <tr>\n            <th rowspan=\"14\" class=\"header1 yellow\">CF</th>\n            <th rowspan=\"3\" class=\"header1 yellow\">In</th>\n            <th class=\"header1 yellow\">Plan</th>\n            <th *ngFor=\"let qty of CfInPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"yellow\">{{qty}}</th>\n             <!-- remark  是可以进行编辑 的-->\n             <th pEditableColumn rowspan=\"3\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"4\" cols=\"10\" [(ngModel)]=\"CFInRemark\" style=\"width:100%\" (change)=\"updateRemark('CF In',3)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{CFInRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">Act</th>\n            <th *ngFor=\"let qty of CfInAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">Bal</th>\n            <th *ngFor=\"let qty of CfInBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- CF Mov -->\n          <tr>\n            <th rowspan=\"7\" class=\"header1 yellow\">Mov</th>\n            <th class=\"header1 yellow\">ITO</th>\n            <th *ngFor=\"let qty of CfMovIto;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n\n             <!-- remark  是可以进行编辑 的-->\n             <th pEditableColumn rowspan=\"7\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"8\" cols=\"10\" [(ngModel)]=\"CFMovRemark\" style=\"width:100%;height: 100%;\" (change)=\"updateRemark('CF Mov',4)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{CFMovRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">BM</th>\n            <th *ngFor=\"let qty of CfMovBm;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">R</th>\n            <th *ngFor=\"let qty of CfMovR;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">G</th>\n            <th *ngFor=\"let qty of CfMovG;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">B</th>\n            <th *ngFor=\"let qty of CfMovB;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">OC</th>\n            <th *ngFor=\"let qty of CfMovOc;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">PS</th>\n            <th *ngFor=\"let qty of CfMovPs;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- CF Out -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 yellow\">Out</th>\n            <th class=\"header1 yellow\">Plan</th>\n            <th *ngFor=\"let qty of CfOutPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"yellow\">{{qty}}</th>\n\n             <!-- remark  是可以进行编辑 的-->\n             <th pEditableColumn rowspan=\"4\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"4\" cols=\"10\" [(ngModel)]=\"CFOutRemark\" style=\"width:100%\" (change)=\"updateRemark('CF Out',5)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{CFOutRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">Act</th>\n            <th *ngFor=\"let qty of CfOutAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">Bal</th>\n            <th *ngFor=\"let qty of CfOutBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- CF WIP -->\n          <tr>\n            <th colspan=\"2\" class=\"header1 yellow\">WIP</th>\n            <th *ngFor=\"let qty of CfWip;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"yellow\">{{qty}}</th>\n          </tr>\n\n          <!-- Cell In -->\n          <tr>\n            <th rowspan=\"18\" class=\"header1 green\">Cell</th>\n            <th rowspan=\"3\" class=\"header1 green\">In</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of CellInPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n\n             <!-- remark  是可以进行编辑 的-->\n             <th pEditableColumn rowspan=\"4\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"4\" cols=\"10\" [(ngModel)]=\"CellInMovRemark\" style=\"width:100%\" (change)=\"updateRemark('Cell In&Mov',6)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{CellInMovRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of CellInAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of CellInBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- Cell Mov -->\n          <tr>\n            <th class=\"header1 green\">Mov</th>\n            <th class=\"header1 green\">Rub</th>\n            <th *ngFor=\"let qty of CellMov;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- Cell Assy -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 green\">Assy</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of CellAssyPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n     \n            <!-- remark  是可以进行编辑 的-->\n            <th pEditableColumn rowspan=\"3\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"4\" cols=\"10\" [(ngModel)]=\"CellAssyRemark\" style=\"width:100%\" (change)=\"updateRemark('Cell Assy',7)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{CellAssyRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of CellAssyAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of CellAssyBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- Cell Cut -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 green\">Cut</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of CellCutPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n          \n            <!-- remark  是可以进行编辑 的-->\n            <th pEditableColumn rowspan=\"3\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"4\" cols=\"10\" [(ngModel)]=\"CellCutRemark\" style=\"width:100%\" (change)=\"updateRemark('Cell Cut',8)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{CellCutRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of CellCutAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of CellCutBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- Cell Out -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 green\">Out</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of CellOutPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n            \n            <!-- remark  是可以进行编辑 的-->\n            <th pEditableColumn rowspan=\"3\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"4\" cols=\"10\" [(ngModel)]=\"CellOutRemark\" style=\"width:100%\" (change)=\"updateRemark('Cell Out',9)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{CellOutRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of CellOutAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of CellOutBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- Cell 120K -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 green\">120K</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of Cell120KPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n           \n            <!-- remark  是可以进行编辑 的-->\n            <th pEditableColumn rowspan=\"5\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"5\" cols=\"10\" [(ngModel)]=\"Cell120kWIPRemark\" style=\"width:100%\" (change)=\"updateRemark('Cell 120k&Wip',10)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{Cell120kWIPRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of Cell120KAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of Cell120KBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- Cell WIP -->\n          <tr>\n            <th rowspan=\"2\" class=\"header1 green\">WIP</th>\n            <th class=\"header1 green\">Assy</th>\n            <th *ngFor=\"let qty of CellWipAssy;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Cut</th>\n            <th *ngFor=\"let qty of CellWipCut;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n          </tr>\n\n          <!-- STK Bank -->\n          <tr>\n            <th rowspan=\"12\" class=\"header1 yellow\">STK</th>\n            <th rowspan=\"4\" class=\"header1 yellow\">Bank</th>\n            <th class=\"header1 yellow\">TFT</th>\n            <th *ngFor=\"let qty of StkBankTft;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n\n            <!-- remark  是可以进行编辑 的-->\n            <th pEditableColumn rowspan=\"12\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"14\" cols=\"10\" [(ngModel)]=\"STKRemark\" style=\"width:100%\" (change)=\"updateRemark('STK',11)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{STKRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">CF</th>\n            <th *ngFor=\"let qty of StkBankCf;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">Sort量</th>\n            <th *ngFor=\"let qty of StkBankSort;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">待Sort</th>\n            <th *ngFor=\"let qty of StkBankSortWait;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n\n          <!-- STK Mov -->\n          <tr>\n            <th rowspan=\"2\" class=\"header1 yellow\">Mov</th>\n            <th class=\"header1 yellow\">CellIn</th>\n            <th *ngFor=\"let qty of StkMovCellIn;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">Sort</th>\n            <th *ngFor=\"let qty of StkMovSort;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- STK STK -->\n          <tr>\n            <th rowspan=\"6\" class=\"header1 yellow\">STK</th>\n            <th class=\"header1 yellow\">ABuff</th>\n            <th *ngFor=\"let qty of StkStkABuff;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">CBuff</th>\n            <th *ngFor=\"let qty of StkStkCBuff;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">T1</th>\n            <th *ngFor=\"let qty of StkStkT1;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">T2</th>\n            <th *ngFor=\"let qty of StkStkT2;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">T3</th>\n            <th *ngFor=\"let qty of StkStkT3;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">T4</th>\n            <th *ngFor=\"let qty of StkStkT4;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- M1 In -->\n          <tr>\n            <th rowspan=\"13\" class=\"header1 green\">M1</th>\n            <th rowspan=\"3\" class=\"header1 green\">In</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of M1InPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n       \n             <!-- remark  是可以进行编辑 的-->\n             <th pEditableColumn rowspan=\"5\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"5\" cols=\"10\" [(ngModel)]=\"M1InMovRemark\" style=\"width:100%\" (change)=\"updateRemark('M1 In&Mov',12)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{M1InMovRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of M1InAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of M1InBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!--  M1 Mov -->\n          <tr>\n            <th class=\"header1 green\" rowspan=\"2\">Mov</th>\n            <th class=\"header1 green\">MMT</th>\n            <th *ngFor=\"let qty of M1MovMmt;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Assy</th>\n            <th *ngFor=\"let qty of M1MovAssy;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- M1 Packing -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 green\">Packing</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of M1PackingPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n            \n            <!-- remark  是可以进行编辑 的-->\n            <th pEditableColumn rowspan=\"5\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"5\" cols=\"10\" [(ngModel)]=\"M1PackingBankRemark\" style=\"width:100%\" (change)=\"updateRemark('M1 Packing&Bank',13)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{M1PackingBankRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of M1PackingAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of M1PackingBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n\n          <!-- M1 Bank -->\n          <tr>\n            <th rowspan=\"2\" class=\"header1 green\">Bank</th>\n            <th class=\"header1 green\">PCS</th>\n            <th *ngFor=\"let qty of M1BankPcs;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty | strFormat: 'k'}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">PCL</th>\n            <th *ngFor=\"let qty of M1BankPcl;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty | strFormat: 'k'}}</th>\n          </tr>\n\n          <!-- M1 WIP -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 green\">WIP</th>\n            <th class=\"header1 green\">M01</th>\n            <th *ngFor=\"let qty of M1WipM01;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n            \n             <!-- remark  是可以进行编辑 的-->\n             <th pEditableColumn rowspan=\"3\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"4\" cols=\"10\" [(ngModel)]=\"M1WIPRemark\" style=\"width:100%\" (change)=\"updateRemark('M1 WIP',14)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{M1WIPRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">M02</th>\n            <th *ngFor=\"let qty of M1WipM02;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">M06</th>\n            <th *ngFor=\"let qty of M1WipM06;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n\n          <!-- 2Cut In -->\n          <tr>\n            <th rowspan=\"7\" class=\"header1 yellow\">2Cut</th>\n            <th rowspan=\"3\" class=\"header1 yellow\">In</th>\n            <th class=\"header1 yellow\">Plan</th>\n            <th *ngFor=\"let qty of Cut2InPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"yellow\">{{qty}}</th>\n            \n             <!-- remark  是可以进行编辑 的-->\n             <th pEditableColumn rowspan=\"7\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"8\" cols=\"10\" [(ngModel)]=\"TwoCutRemark\" style=\"width:100%\" (change)=\"updateRemark('2Cut',15)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{TwoCutRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">Act</th>\n            <th *ngFor=\"let qty of Cut2InAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">Bal</th>\n            <th *ngFor=\"let qty of Cut2InBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- 2Cut Out -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 yellow\">Out</th>\n            <th class=\"header1 yellow\">Plan</th>\n            <th *ngFor=\"let qty of Cut2OutPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"yellow\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">Act</th>\n            <th *ngFor=\"let qty of Cut2OutAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 yellow\">Bal</th>\n            <th *ngFor=\"let qty of Cut2OutBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- 2Cut WIP -->\n          <tr>\n            <th colspan=\"2\" class=\"header1 yellow\">WIP</th>\n            <th *ngFor=\"let qty of Cut2Wip;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"yellow\">{{qty}}</th>\n          </tr>\n\n          <!-- M2 COG In -->\n          <tr>\n            <th rowspan=\"9\" class=\"header1 green\">M2<br>COG</th>\n            <th rowspan=\"3\" class=\"header1 green\">In</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of M2CogInPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n            \n            <!-- remark  是可以进行编辑 的-->\n            <th pEditableColumn rowspan=\"9\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"10\" cols=\"10\" [(ngModel)]=\"M2COGRemark\" style=\"width:100%\" (change)=\"updateRemark('M2 COG',16)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{M2COGRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of M2CogInAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of M2CogInBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- M2 COG Mov -->\n          <tr>\n            <th class=\"header1 green\" rowspan=\"2\">Mov</th>\n            <th class=\"header1 green\">MMT</th>\n            <th *ngFor=\"let qty of M2CogMovMmt;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Assy</th>\n            <th *ngFor=\"let qty of M2CogMovAssy;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- M2 COG WIP -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 green\">WIP</th>\n            <th class=\"header1 green\">M21</th>\n            <th *ngFor=\"let qty of M2CogWipM21;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">M22</th>\n            <th *ngFor=\"let qty of M2CogWipM22;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">M26</th>\n            <th *ngFor=\"let qty of M2CogWipM26;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- M2 COG Bank -->\n          <tr>\n            <th colspan=\"2\" class=\"header1 green\">Bank</th>\n            <th *ngFor=\"let qty of M2CogBank;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n          </tr>\n\n          <!-- M2 COF In -->\n          <tr>\n            <th rowspan=\"9\" class=\"header1 green\">M2<br>COF</th>\n            <th rowspan=\"3\" class=\"header1 green\">In</th>\n            <th class=\"header1 green\">Plan</th>\n            <th *ngFor=\"let qty of M2CofInPlan;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n           \n            <!-- remark  是可以进行编辑 的-->\n            <th pEditableColumn rowspan=\"9\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                      <textarea pInputTextArea rows=\"10\" cols=\"10\" [(ngModel)]=\"M2COFRemark\" style=\"width:100%\" (change)=\"updateRemark('M2 COF',17)\"></textarea>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                      {{M2COFRemark}}\n                    </ng-template>\n                </p-cellEditor>\n              </th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Act</th>\n            <th *ngFor=\"let qty of M2CofInAct;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Bal</th>\n            <th *ngFor=\"let qty of M2CofInBal;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- M2 COF MNT -->\n          <tr>\n            <th class=\"header1 green\" rowspan=\"2\">Mov</th>\n            <th class=\"header1 green\">MMT</th>\n            <th *ngFor=\"let qty of M2CofMovMmt;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">Assy</th>\n            <th *ngFor=\"let qty of M2CofMovAssy;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- M2 COF WIP -->\n          <tr>\n            <th rowspan=\"3\" class=\"header1 green\">WIP</th>\n            <th class=\"header1 green\">M21</th>\n            <th *ngFor=\"let qty of M2CofWipM21;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">M22</th>\n            <th *ngFor=\"let qty of M2CofWipM22;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n          <tr>\n            <th class=\"header1 green\">M26</th>\n            <th *ngFor=\"let qty of M2CofWipM26;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\">{{qty}}</th>\n          </tr>\n\n          <!-- M2 COF Bank -->\n          <tr>\n            <th colspan=\"2\" class=\"header1 green\">Bank</th>\n            <th *ngFor=\"let qty of M2CofBank;let i = index\" [ngClass]=\"{jiachu: i == 24 && qty !== '-',setRightBorder: i==3 || i==7 || i==11 || i==15 || i==19}\" class=\"green\">{{qty}}</th>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n  </p-panel>\n</div>"

/***/ }),

/***/ "./src/app/fixreportforms/factoryproduct/factoryproduct.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FactoryproductComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_file_saver__ = __webpack_require__("./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_file_saver__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var FactoryproductComponent = /** @class */ (function () {
    function FactoryproductComponent(apiService) {
        this.apiService = apiService;
        this.timekey = ['07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17',
            '18', '19', '20', '21', '22', '23', '00', '01', '02', '03', '04', '05', '06', 'TTL'];
        // 保存每一行数据的数组
        // Array
        this.ArrayInPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayInAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayInBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayMovPecvd = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayMovSputter = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayMovPhoto = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayMovEtch = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayOutPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayOutAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayOutBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayWip = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // CF
        this.CfInPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfInAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfInBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovIto = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovBm = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovR = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovG = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovB = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovOc = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovPs = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfOutPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfOutAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfOutBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfWip = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // Cell
        this.CellInPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellInAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellInBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellMov = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellAssyPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellAssyAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellAssyBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellCutPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellCutAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellCutBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellOutPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellOutAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellOutBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cell120KPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cell120KAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cell120KBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellWipAssy = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellWipCut = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // STK
        this.StkBankTft = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkBankCf = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkBankSort = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkBankSortWait = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkMovCellIn = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkMovSort = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkABuff = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkCBuff = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkT1 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkT2 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkT3 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkT4 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1InPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1InAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1InBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1MovMmt = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1MovAssy = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1PackingPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1PackingAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1PackingBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1BankPcs = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1BankPcl = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1WipM01 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1WipM02 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1WipM06 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // 2Cut
        this.Cut2InPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2InAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2InBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2OutPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2OutAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2OutBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2Wip = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // M2 COG
        this.M2CogInPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogInAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogInBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogMovMmt = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogMovAssy = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogWipM21 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogWipM22 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogWipM26 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogBank = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // M2 COF
        this.M2CofInPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofInAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofInBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofMovMmt = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofMovAssy = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofWipM21 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofWipM22 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofWipM26 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofBank = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.msgs = [];
        // 下面是remark  的 变量
        this.ArrayInRemark = '';
        this.ArrayMovRemark = '';
        this.ArrayOutRemark = '';
        this.CFInRemark = '';
        this.CFMovRemark = '';
        this.CFOutRemark = '';
        this.CellInMovRemark = '';
        this.CellAssyRemark = '';
        this.CellCutRemark = '';
        this.CellOutRemark = '';
        this.Cell120kWIPRemark = '';
        this.STKRemark = '';
        this.M1InMovRemark = '';
        this.M1PackingBankRemark = '';
        this.M1WIPRemark = '';
        this.TwoCutRemark = '';
        this.M2COGRemark = '';
        this.M2COFRemark = '';
        this.remarks = [this.ArrayInRemark, this.ArrayMovRemark, this.ArrayOutRemark,
            this.CFInRemark, this.CFMovRemark, this.CFOutRemark,
            this.CellInMovRemark, this.CellAssyRemark, this.CellCutRemark, this.CellOutRemark, this.Cell120kWIPRemark,
            this.STKRemark,
            this.M1InMovRemark, this.M1PackingBankRemark, this.M1WIPRemark,
            this.TwoCutRemark,
            this.M2COGRemark, this.M2COGRemark];
    }
    FactoryproductComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.nowTime = new Date();
        this.msgs.push({ severity: 'info', summary: '查询状态', detail: '正在查询 ! 请稍后...' });
        if (this.nowTime.getHours() < 7) {
            this.nowDay = new Date(this.nowTime.getTime() - 24 * 60 * 60 * 1000).toLocaleDateString();
            this.option = {
                params: {
                    dayControl: '-1'
                }
            };
        }
        else {
            this.nowDay = this.nowTime.toLocaleDateString();
            this.option = {
                params: {
                    dayControl: ''
                }
            };
        }
        this.apiService.get('/sc/hourmonitor', this.option).subscribe(function (res) {
            console.log(res);
            _this.setArrayData(res);
        }, function (err) {
            console.log(err);
        }, function () {
            _this.msgs = [{ severity: 'success', summary: '查询状态', detail: '查询完成 !' }];
            setTimeout(function () { _this.msgs = []; }, 2000);
        });
    };
    FactoryproductComponent.prototype.query = function () {
        var _this = this;
        if (this.dateName != null) {
            this.msgs.push({ severity: 'info', summary: '查询状态', detail: '正在查询 ! 请稍后...' });
            var year = this.dateName.getFullYear().toString();
            var month = void 0;
            var day = void 0;
            if (this.dateName.getMonth() < 9) {
                month = '0' + (this.dateName.getMonth() + 1);
            }
            else {
                month = (this.dateName.getMonth() + 1).toString();
            }
            if (this.dateName.getDate() < 10) {
                day = '0' + this.dateName.getDate();
            }
            else {
                day = this.dateName.getDate().toString();
            }
            this.option = {
                params: {
                    dateValue: year + month + day
                }
            };
            this.apiService.get('/sc/hourmonitorOneday', this.option).subscribe(function (res) {
                _this.setArrayData(res);
                _this.nowDay = _this.dateName.toLocaleDateString();
            }, function (err) {
                console.log(err);
            }, function () {
                _this.msgs = [{ severity: 'success', summary: '查询状态', detail: '查询完成 !' }];
                setTimeout(function () { _this.msgs = []; }, 2000);
                //这个位置 很刁钻 啊  ，在数据查询完成之后，在查询这个remark 新添加的查询 remark 的内容的操作
                _this.queryRemark();
            });
        }
    };
    // 为每一行的数组赋值
    FactoryproductComponent.prototype.setArrayData = function (data) {
        this.ArrayInPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayInAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayInBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayMovPecvd = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayMovSputter = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayMovPhoto = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayMovEtch = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayOutPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayOutAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayOutBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.ArrayWip = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // CF
        this.CfInPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfInAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfInBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovIto = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovBm = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovR = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovG = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovB = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovOc = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfMovPs = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfOutPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfOutAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfOutBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CfWip = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // Cell
        this.CellInPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellInAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellInBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellMov = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellAssyPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellAssyAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellAssyBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellCutPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellCutAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellCutBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellOutPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellOutAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellOutBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cell120KPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cell120KAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cell120KBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellWipAssy = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.CellWipCut = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // STK
        this.StkBankTft = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkBankCf = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkBankSort = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkBankSortWait = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkMovCellIn = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkMovSort = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkABuff = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkCBuff = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkT1 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkT2 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkT3 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.StkStkT4 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1InPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1InAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1InBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1MovMmt = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1MovAssy = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1PackingPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1PackingAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1PackingBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1BankPcs = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1BankPcl = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1WipM01 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1WipM02 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M1WipM06 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // 2Cut
        this.Cut2InPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2InAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2InBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2OutPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2OutAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2OutBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.Cut2Wip = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // M2 COG
        this.M2CogInPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogInAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogInBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogMovMmt = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogMovAssy = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogWipM21 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogWipM22 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogWipM26 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CogBank = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        // M2 COF
        this.M2CofInPlan = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofInAct = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofInBal = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofMovMmt = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofMovAssy = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofWipM21 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofWipM22 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofWipM26 = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.M2CofBank = ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',
            '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'];
        this.setDataPlanBal(data);
        this.setData(data, this.ArrayInAct, 'Array In');
        this.setData(data, this.ArrayMovPecvd, 'Array PECVD');
        this.setData(data, this.ArrayMovSputter, 'Array Sputter');
        this.setData(data, this.ArrayMovPhoto, 'Array Photo');
        this.setData(data, this.ArrayMovEtch, 'Array Etch');
        this.setData(data, this.ArrayOutAct, 'Array Out');
        this.setData(data, this.ArrayWip, 'Array WIP');
        this.setData(data, this.CfInAct, 'CF In');
        this.setData(data, this.CfMovIto, 'CF ITO');
        this.setData(data, this.CfMovBm, 'CF BM');
        this.setData(data, this.CfMovR, 'CF R');
        this.setData(data, this.CfMovG, 'CF G');
        this.setData(data, this.CfMovB, 'CF B');
        this.setData(data, this.CfMovOc, 'CF OC');
        this.setData(data, this.CfMovPs, 'CF PS');
        this.setData(data, this.CfOutAct, 'CF Out');
        this.setData(data, this.CfWip, 'CF WIP');
        this.setData(data, this.CellInAct, 'Cell In');
        this.setData(data, this.CellMov, 'Cell Rub');
        this.setData(data, this.CellAssyAct, 'Cell Assy');
        this.setData(data, this.CellCutAct, 'Cell Cut');
        this.setData(data, this.CellOutAct, 'Cell Out');
        this.setData(data, this.Cell120KAct, 'Cell 120K');
        this.setData(data, this.CellWipAssy, 'Cell Assy WIP');
        this.setData(data, this.CellWipCut, 'Cell Cut WIP');
        this.setData(data, this.StkBankTft, 'STK Bank TFT');
        this.setData(data, this.StkBankCf, 'STK Bank CF');
        this.setData(data, this.StkBankSort, 'STK Bank Sort量');
        this.setData(data, this.StkBankSortWait, 'STK Bank 待Sort');
        this.setData(data, this.StkMovCellIn, 'STK Cell In');
        this.setData(data, this.StkMovSort, 'STK Sort');
        this.setData(data, this.StkStkABuff, 'STK ABuff');
        this.setData(data, this.StkStkCBuff, 'STK CBuff');
        this.setData(data, this.StkStkT1, 'STK T1');
        this.setData(data, this.StkStkT2, 'STK T2');
        this.setData(data, this.StkStkT3, 'STK T3');
        this.setData(data, this.StkStkT4, 'STK T4');
        this.setData(data, this.M1InAct, 'M1 In');
        this.setData(data, this.M1MovMmt, 'M1 MMT');
        this.setData(data, this.M1MovAssy, 'M1 Assy');
        this.setData(data, this.M1PackingAct, 'M1 Packing');
        this.setData(data, this.M1BankPcs, 'M1Bank_PCS');
        this.setData(data, this.M1BankPcl, 'M1Bank_PCL');
        this.setData(data, this.M1WipM01, 'M1WIP_M01');
        this.setData(data, this.M1WipM02, 'M1WIP_M02');
        this.setData(data, this.M1WipM06, 'M1WIP_M06');
        this.setData(data, this.Cut2InAct, '2Cut In');
        this.setData(data, this.Cut2OutAct, '2Cut Out');
        this.setData(data, this.Cut2Wip, '2Cut_WIP');
        this.setData(data, this.M2CogInAct, 'M2 In COG');
        this.setData(data, this.M2CogMovMmt, 'M2 MMT COG');
        this.setData(data, this.M2CogMovAssy, 'M2 Assy COG');
        this.setData(data, this.M2CogWipM21, 'M2WIP M21 COG');
        this.setData(data, this.M2CogWipM22, 'M2WIP M22 COG');
        this.setData(data, this.M2CogWipM26, 'M2WIP M26 COG');
        this.setData(data, this.M2CogBank, 'M2 COG Bank');
        this.setData(data, this.M2CofInAct, 'M2 In COF');
        this.setData(data, this.M2CofMovMmt, 'M2 MMT COF');
        this.setData(data, this.M2CofMovAssy, 'M2 Assy COF');
        this.setData(data, this.M2CofWipM21, 'M2WIP M21 COF');
        this.setData(data, this.M2CofWipM22, 'M2WIP M22 COF');
        this.setData(data, this.M2CofWipM26, 'M2WIP M26 COF');
        this.setData(data, this.M2CofBank, 'M2 COF Bank');
    };
    // 为数组的06到05赋值，如果数据中没有，则不改变默认值,为数组最后一个元素赋值，求前面所有元素的和
    FactoryproductComponent.prototype.setData = function (data, array, operation) {
        var judgeOperation = (operation !== 'STK ABuff' && operation !== 'STK CBuff' && operation !== 'STK T1' &&
            operation !== 'STK T2' && operation !== 'STK T3' && operation !== 'STK T4');
        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
            var obj = data_1[_i];
            if (obj.item === operation) {
                switch (obj.hour) {
                    case '07':
                        if (obj.qty !== null) {
                            array[0] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '08':
                        if (obj.qty !== null) {
                            array[1] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '09':
                        if (obj.qty !== null) {
                            array[2] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '10':
                        if (obj.qty !== null) {
                            array[3] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '11':
                        if (obj.qty !== null) {
                            array[4] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '12':
                        if (obj.qty !== null) {
                            array[5] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '13':
                        if (obj.qty !== null) {
                            array[6] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '14':
                        if (obj.qty !== null) {
                            array[7] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '15':
                        if (obj.qty !== null) {
                            array[8] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '16':
                        if (obj.qty !== null) {
                            array[9] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '17':
                        if (obj.qty !== null) {
                            array[10] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '18':
                        if (obj.qty !== null) {
                            array[11] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '19':
                        if (obj.qty !== null) {
                            array[12] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '20':
                        if (obj.qty !== null) {
                            array[13] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '21':
                        if (obj.qty !== null) {
                            array[14] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '22':
                        if (obj.qty !== null) {
                            array[15] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '23':
                        if (obj.qty !== null) {
                            array[16] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '00':
                        if (obj.qty !== null) {
                            array[17] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '01':
                        if (obj.qty !== null) {
                            array[18] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '02':
                        if (obj.qty !== null) {
                            array[19] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '03':
                        if (obj.qty !== null) {
                            array[20] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '04':
                        if (obj.qty !== null) {
                            array[21] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '05':
                        if (obj.qty !== null) {
                            array[22] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                    case '06':
                        if (obj.qty !== null) {
                            array[23] = judgeOperation ? obj.qty.toString() : (parseFloat((obj.qty * 100).toFixed(1)) + '%');
                        }
                        break;
                }
            }
        }
        // 如果operation不在如下类型里面，数组的最后一个元素是前面所有数据的和，否则求求平均
        if (operation !== 'Array WIP' && operation !== 'CF WIP' && operation !== 'Cell Assy WIP' && operation !== 'Cell Cut WIP'
            && operation !== 'M1WIP_M01' && operation !== 'M1WIP_M02' && operation !== 'M1WIP_M06'
            && operation !== '2Cut_WIP' && operation !== 'M2WIP M21 COG' && operation !== 'M2WIP M22 COG' && operation !== 'M2WIP M26 COG'
            && operation !== 'M2WIP M21 COF' && operation !== 'M2WIP M22 COF' && operation !== 'M2WIP M26 COF'
            && operation !== 'STK Bank TFT' && operation !== 'STK Bank CF' && operation !== 'STK Bank Sort量'
            && operation !== 'STK Bank 待Sort' && operation !== 'M1Bank_PCS' && operation !== 'M1Bank_PCL'
            && operation !== 'M2 COG Bank' && operation !== 'M2 COF Bank') {
            if (judgeOperation) {
                var sum = 0;
                for (var _a = 0, array_1 = array; _a < array_1.length; _a++) {
                    var i = array_1[_a];
                    if (i !== '-') {
                        sum += parseInt(i, 10);
                    }
                }
                if (sum !== 0) {
                    array[24] = sum.toString();
                }
                else {
                    array[24] = '-';
                }
            }
            else {
                var sum = 0;
                var count = 0;
                for (var _b = 0, array_2 = array; _b < array_2.length; _b++) {
                    var i = array_2[_b];
                    if (i !== '-') {
                        sum += parseFloat(i);
                        count++;
                    }
                }
                if (sum !== 0) {
                    array[24] = parseFloat((sum / count).toFixed(1)) + '%';
                }
                else {
                    array[24] = '-';
                }
            }
        }
        else {
            var sum = 0;
            var count = 0;
            for (var _c = 0, array_3 = array; _c < array_3.length; _c++) {
                var i = array_3[_c];
                if (i !== '-') {
                    sum += parseInt(i, 10);
                    count++;
                }
            }
            if (sum !== 0) {
                array[24] = (sum / count).toFixed(0);
            }
            else {
                array[24] = '-';
            }
        }
        for (var key in array) {
            if (array.hasOwnProperty(key)) {
                if (array[key] === '0') {
                    array[key] = '-';
                }
            }
        }
    };
    FactoryproductComponent.prototype.setDataPlanBal = function (data) {
        var sumArrayIn = 0;
        var sumArrayOut = 0;
        var sumCfIn = 0;
        var sumCfOut = 0;
        var sumCellIn = 0;
        var sumCellAssy = 0;
        var sumCellCut = 0;
        var sumCellOut = 0;
        var sumCell120K = 0;
        var sumM1In = 0;
        var sumM1Packing = 0;
        var sum2CutIn = 0;
        var sum2CutOut = 0;
        var sumCogIn = 0;
        var sumCofIn = 0;
        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {
            var obj = data_2[_i];
            switch (obj.item) {
                case 'Array In':
                    this.setPlanBal(obj, this.ArrayInPlan, this.ArrayInBal);
                    this.getBalTtl(this.ArrayInBal);
                    sumArrayIn += obj.actplan;
                    break;
                case 'Array Out':
                    this.setPlanBal(obj, this.ArrayOutPlan, this.ArrayOutBal);
                    this.getBalTtl(this.ArrayOutBal);
                    sumArrayOut += obj.actplan;
                    break;
                case 'CF In':
                    this.setPlanBal(obj, this.CfInPlan, this.CfInBal);
                    this.getBalTtl(this.CfInBal);
                    sumCfIn += obj.actplan;
                    break;
                case 'CF Out':
                    this.setPlanBal(obj, this.CfOutPlan, this.CfOutBal);
                    this.getBalTtl(this.CfOutBal);
                    sumCfOut += obj.actplan;
                    break;
                case 'Cell In':
                    this.setPlanBal(obj, this.CellInPlan, this.CellInBal);
                    this.getBalTtl(this.CellInBal);
                    sumCellIn += obj.actplan;
                    break;
                case 'Cell Assy':
                    this.setPlanBal(obj, this.CellAssyPlan, this.CellAssyBal);
                    this.getBalTtl(this.CellAssyBal);
                    sumCellAssy += obj.actplan;
                    break;
                case 'Cell Cut':
                    this.setPlanBal(obj, this.CellCutPlan, this.CellCutBal);
                    this.getBalTtl(this.CellCutBal);
                    sumCellCut += obj.actplan;
                    break;
                case 'Cell Out':
                    this.setPlanBal(obj, this.CellOutPlan, this.CellOutBal);
                    this.getBalTtl(this.CellOutBal);
                    sumCellOut += obj.actplan;
                    break;
                case 'Cell 120K':
                    this.setPlanBal(obj, this.Cell120KPlan, this.Cell120KBal);
                    this.getBalTtl(this.Cell120KBal);
                    sumCell120K += obj.actplan;
                    break;
                case 'M1 In':
                    this.setPlanBal(obj, this.M1InPlan, this.M1InBal);
                    this.getBalTtl(this.M1InBal);
                    sumM1In += obj.actplan;
                    break;
                case 'M1 Packing':
                    this.setPlanBal(obj, this.M1PackingPlan, this.M1PackingBal);
                    this.getBalTtl(this.M1PackingBal);
                    sumM1Packing += obj.actplan;
                    break;
                case '2Cut In':
                    this.setPlanBal(obj, this.Cut2InPlan, this.Cut2InBal);
                    this.getBalTtl(this.Cut2InBal);
                    sum2CutIn += obj.actplan;
                    break;
                case '2Cut Out':
                    this.setPlanBal(obj, this.Cut2OutPlan, this.Cut2OutBal);
                    this.getBalTtl(this.Cut2OutBal);
                    sum2CutOut += obj.actplan;
                    break;
                case 'M2 In COG':
                    this.setPlanBal(obj, this.M2CogInPlan, this.M2CogInBal);
                    this.getBalTtl(this.M2CogInBal);
                    sumCogIn += obj.actplan;
                    break;
                case 'M2 In COF':
                    this.setPlanBal(obj, this.M2CofInPlan, this.M2CofInBal);
                    this.getBalTtl(this.M2CofInBal);
                    sumCofIn += obj.actplan;
                    break;
            }
        }
        this.setPlan(sumArrayIn, this.ArrayInPlan);
        this.setPlan(sumArrayOut, this.ArrayOutPlan);
        this.setPlan(sumCfIn, this.CfInPlan);
        this.setPlan(sumCfOut, this.CfOutPlan);
        this.setPlan(sumCellIn, this.CellInPlan);
        this.setPlan(sumCellAssy, this.CellAssyPlan);
        this.setPlan(sumCellCut, this.CellCutPlan);
        this.setPlan(sumCellOut, this.CellOutPlan);
        this.setPlan(sumCell120K, this.Cell120KPlan);
        this.setPlan(sum2CutIn, this.Cut2InPlan);
        this.setPlan(sum2CutOut, this.Cut2OutPlan);
        this.setPlan(sumM1In, this.M1InPlan);
        this.setPlan(sumM1Packing, this.M1PackingPlan);
        this.setPlan(sumCogIn, this.M2CogInPlan);
        this.setPlan(sumCofIn, this.M2CofInPlan);
    };
    FactoryproductComponent.prototype.setPlan = function (sum, array) {
        if (sum !== 0) {
            array[24] = sum.toString();
        }
    };
    FactoryproductComponent.prototype.setPlanBal = function (obj, plan, bal) {
        switch (obj.hour) {
            case '07':
                if (obj.planqty !== null) {
                    plan[0] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[0] = obj.balqty.toString();
                }
                break;
            case '08':
                if (obj.planqty !== null) {
                    plan[1] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[1] = obj.balqty.toString();
                }
                break;
            case '09':
                if (obj.planqty !== null) {
                    plan[2] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[2] = obj.balqty.toString();
                }
                break;
            case '10':
                if (obj.planqty !== null) {
                    plan[3] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[3] = obj.balqty.toString();
                }
                break;
            case '11':
                if (obj.planqty !== null) {
                    plan[4] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[4] = obj.balqty.toString();
                }
                break;
            case '12':
                if (obj.planqty !== null) {
                    plan[5] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[5] = obj.balqty.toString();
                }
                break;
            case '13':
                if (obj.planqty !== null) {
                    plan[6] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[6] = obj.balqty.toString();
                }
                break;
            case '14':
                if (obj.planqty !== null) {
                    plan[7] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[7] = obj.balqty.toString();
                }
                break;
            case '15':
                if (obj.planqty !== null) {
                    plan[8] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[8] = obj.balqty.toString();
                }
                break;
            case '16':
                if (obj.planqty !== null) {
                    plan[9] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[9] = obj.balqty.toString();
                }
                break;
            case '17':
                if (obj.planqty !== null) {
                    plan[10] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[10] = obj.balqty.toString();
                }
                break;
            case '18':
                if (obj.planqty !== null) {
                    plan[11] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[11] = obj.balqty.toString();
                }
                break;
            case '19':
                if (obj.planqty !== null) {
                    plan[12] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[12] = obj.balqty.toString();
                }
                break;
            case '20':
                if (obj.planqty !== null) {
                    plan[13] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[13] = obj.balqty.toString();
                }
                break;
            case '21':
                if (obj.planqty !== null) {
                    plan[14] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[14] = obj.balqty.toString();
                }
                break;
            case '22':
                if (obj.planqty !== null) {
                    plan[15] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[15] = obj.balqty.toString();
                }
                break;
            case '23':
                if (obj.planqty !== null) {
                    plan[16] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[16] = obj.balqty.toString();
                }
                break;
            case '00':
                if (obj.planqty !== null) {
                    plan[17] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[17] = obj.balqty.toString();
                }
                break;
            case '01':
                if (obj.planqty !== null) {
                    plan[18] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[18] = obj.balqty.toString();
                }
                break;
            case '02':
                if (obj.planqty !== null) {
                    plan[19] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[19] = obj.balqty.toString();
                }
                break;
            case '03':
                if (obj.planqty !== null) {
                    plan[20] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[20] = obj.balqty.toString();
                }
                break;
            case '04':
                if (obj.planqty !== null) {
                    plan[21] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[21] = obj.balqty.toString();
                }
                break;
            case '05':
                if (obj.planqty !== null) {
                    plan[22] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[22] = obj.balqty.toString();
                }
                break;
            case '06':
                if (obj.planqty !== null) {
                    plan[23] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    bal[23] = obj.balqty.toString();
                }
                break;
        }
    };
    FactoryproductComponent.prototype.getBalTtl = function (array) {
        var sum = 0;
        if (array[0] !== '-') {
            sum += parseInt(array[0], 10);
        }
        if (array[1] !== '-') {
            sum += parseInt(array[1], 10);
        }
        if (array[2] !== '-') {
            sum += parseInt(array[2], 10);
        }
        if (array[3] !== '-') {
            sum += parseInt(array[3], 10);
        }
        if (array[4] !== '-') {
            sum += parseInt(array[4], 10);
        }
        if (array[5] !== '-') {
            sum += parseInt(array[5], 10);
        }
        if (array[6] !== '-') {
            sum += parseInt(array[6], 10);
        }
        if (array[7] !== '-') {
            sum += parseInt(array[7], 10);
        }
        if (array[8] !== '-') {
            sum += parseInt(array[8], 10);
        }
        if (array[9] !== '-') {
            sum += parseInt(array[9], 10);
        }
        if (array[10] !== '-') {
            sum += parseInt(array[10], 10);
        }
        if (array[11] !== '-') {
            sum += parseInt(array[11], 10);
        }
        if (array[12] !== '-') {
            sum += parseInt(array[12], 10);
        }
        if (array[13] !== '-') {
            sum += parseInt(array[13], 10);
        }
        if (array[14] !== '-') {
            sum += parseInt(array[14], 10);
        }
        if (array[15] !== '-') {
            sum += parseInt(array[15], 10);
        }
        if (array[16] !== '-') {
            sum += parseInt(array[16], 10);
        }
        if (array[17] !== '-') {
            sum += parseInt(array[17], 10);
        }
        if (array[18] !== '-') {
            sum += parseInt(array[18], 10);
        }
        if (array[19] !== '-') {
            sum += parseInt(array[19], 10);
        }
        if (array[20] !== '-') {
            sum += parseInt(array[20], 10);
        }
        if (array[21] !== '-') {
            sum += parseInt(array[21], 10);
        }
        if (array[22] !== '-') {
            sum += parseInt(array[22], 10);
        }
        if (array[23] !== '-') {
            sum += parseInt(array[23], 10);
        }
        if (sum !== 0) {
            array[24] = sum.toString();
        }
    };
    FactoryproductComponent.prototype.getPlanTtl = function (obj, plan) {
        var sum = 0;
        if (obj.actplan !== null) {
            sum += obj.actplan;
        }
        if (sum !== 0) {
            plan[24] = sum.toString();
        }
    };
    FactoryproductComponent.prototype.refresh = function () {
        var _this = this;
        this.msgs.push({ severity: 'info', summary: '查询状态', detail: '正在刷新 ! 请稍后...' });
        this.dateName = null;
        this.nowTime = new Date();
        if (this.nowTime.getHours() < 6) {
            this.nowDay = new Date(this.nowTime.getTime() - 24 * 60 * 60 * 1000).toLocaleDateString();
            this.option = {
                params: {
                    dayControl: '-1'
                }
            };
        }
        else {
            this.nowDay = this.nowTime.toLocaleDateString();
            this.option = {
                params: {
                    dayControl: ''
                }
            };
        }
        this.apiService.get('/sc/hourmonitor', this.option).subscribe(function (res) {
            _this.setArrayData(res);
        }, function (err) {
            console.log(err);
        }, function () {
            _this.msgs = [{ severity: 'success', summary: '查询状态', detail: '刷新完成 !' }];
            setTimeout(function () { _this.msgs = []; }, 2000);
        });
        //新添加的查询 remark 的内容的操作
        this.queryRemark();
    };
    FactoryproductComponent.prototype.exportTable = function () {
        var blob = new Blob([document.getElementById('hourmonitor').innerHTML], {
            type: 'application/octet-stream;charset=utf-8'
        });
        Object(__WEBPACK_IMPORTED_MODULE_2_file_saver__["saveAs"])(blob, '小时段监控' + this.nowDay + '.xls');
    };
    // 下面是  remark  的内容改变了之后的 往数据库中写入数据的操作
    FactoryproductComponent.prototype.updateRemark = function (item, id) {
        this.remarks = [this.ArrayInRemark, this.ArrayMovRemark, this.ArrayOutRemark,
            this.CFInRemark, this.CFMovRemark, this.CFOutRemark,
            this.CellInMovRemark, this.CellAssyRemark, this.CellCutRemark, this.CellOutRemark, this.Cell120kWIPRemark,
            this.STKRemark,
            this.M1InMovRemark, this.M1PackingBankRemark, this.M1WIPRemark,
            this.TwoCutRemark,
            this.M2COGRemark, this.M2COFRemark];
        var remarkstr = this.remarks[id];
        var option = {
            params: {
                datename: this.nowDay,
                report: 'HourMonitor',
                item: item,
                remark: remarkstr
            }
        };
        var url = '/keyinremartk';
        this.apiService.get(url, option).subscribe(function (res) {
            //这里面其实什么都不用写
        }, function (error) { console.log(error); });
    };
    //下面 是 从 数据表中 读取 remark 的操作
    FactoryproductComponent.prototype.queryRemark = function () {
        var _this = this;
        var option = {
            params: {
                datename: this.nowDay,
                report: 'HourMonitor',
            }
        };
        var url = '/queryRemark';
        this.apiService.get(url, option).subscribe(function (res) {
            if (Array.isArray(res)) {
                for (var _i = 0, res_1 = res; _i < res_1.length; _i++) {
                    var object = res_1[_i];
                    var item = object['item'];
                    var remark = object['remark'];
                    switch (item) {
                        case 'Array In': {
                            _this.ArrayInRemark = remark;
                            break;
                        }
                        case 'Array Mov': {
                            _this.ArrayMovRemark = remark;
                            break;
                        }
                        case 'Array Out': {
                            _this.ArrayOutRemark = remark;
                            break;
                        }
                        case 'CF In': {
                            _this.CFInRemark = remark;
                            break;
                        }
                        case 'CF Mov': {
                            _this.CFMovRemark = remark;
                            break;
                        }
                        case 'CF Out': {
                            _this.CFOutRemark = remark;
                            break;
                        }
                        case 'Cell In&Mov': {
                            _this.CellInMovRemark = remark;
                            break;
                        }
                        case 'Cell Assy': {
                            _this.CellAssyRemark = remark;
                            break;
                        }
                        case 'Cell Cut': {
                            _this.CellCutRemark = remark;
                            break;
                        }
                        case 'Cell Out': {
                            _this.CellOutRemark = remark;
                            break;
                        }
                        case 'Cell 120k&Wip': {
                            _this.Cell120kWIPRemark = remark;
                            break;
                        }
                        case 'STK': {
                            _this.STKRemark = remark;
                            break;
                        }
                        case 'M1 In&Mov': {
                            _this.M1InMovRemark = remark;
                            break;
                        }
                        case 'M1 Packing&Bank': {
                            _this.M1PackingBankRemark = remark;
                            break;
                        }
                        case 'M1 WIP': {
                            _this.M1WIPRemark = remark;
                            break;
                        }
                        case '2Cut': {
                            _this.TwoCutRemark = remark;
                            break;
                        }
                        case 'M2 COG': {
                            _this.M2COGRemark = remark;
                            break;
                        }
                        case 'M2 COF': {
                            _this.M2COFRemark = remark;
                            break;
                        }
                    }
                }
            }
        }, function (error) { console.log(error); });
    };
    FactoryproductComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-factoryproduct',
            template: __webpack_require__("./src/app/fixreportforms/factoryproduct/factoryproduct.component.html"),
            styles: [__webpack_require__("./src/app/fixreportforms/factoryproduct/factoryproduct.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__["a" /* ApiService */]])
    ], FactoryproductComponent);
    return FactoryproductComponent;
}());



/***/ }),

/***/ "./src/app/fixreportforms/factoryproduct/pipe/str-format.pipe.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StrFormatPipe; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var StrFormatPipe = /** @class */ (function () {
    function StrFormatPipe() {
    }
    StrFormatPipe.prototype.transform = function (value, args) {
        if (value.length > 5) {
            if (!args) {
                args = 'k';
            }
            if (value === '-') {
                return value;
            }
            else {
                if (args === 'k') {
                    return ((parseInt(value, 10) / 1000).toFixed(0) + 'k');
                }
                else if (args === 'w') {
                    return ((parseInt(value, 10) / 10000).toFixed(0) + 'w');
                }
            }
        }
        else {
            return value;
        }
    };
    StrFormatPipe = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'strFormat'
        })
    ], StrFormatPipe);
    return StrFormatPipe;
}());



/***/ }),

/***/ "./src/app/fixreportforms/fixreportforms-routing.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FixreportformsRoutingModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__gsproduct_gsproduct_component__ = __webpack_require__("./src/app/fixreportforms/gsproduct/gsproduct.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__factoryproduct_factoryproduct_component__ = __webpack_require__("./src/app/fixreportforms/factoryproduct/factoryproduct.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sortbank_sortbank_component__ = __webpack_require__("./src/app/fixreportforms/sortbank/sortbank.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__cellproductiondaily_cellproductiondaily_component__ = __webpack_require__("./src/app/fixreportforms/cellproductiondaily/cellproductiondaily.component.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var routes = [
    {
        path: 'gsproduct',
        component: __WEBPACK_IMPORTED_MODULE_2__gsproduct_gsproduct_component__["a" /* GsproductComponent */],
        data: {
            tabLable: '公司生产情况信息',
            destroy: false
        }
    },
    {
        path: 'factoryproduct',
        component: __WEBPACK_IMPORTED_MODULE_3__factoryproduct_factoryproduct_component__["a" /* FactoryproductComponent */],
        data: {
            tabLable: '各工厂生产情况信息',
            destroy: false
        }
    },
    {
        path: 'sortbank',
        component: __WEBPACK_IMPORTED_MODULE_4__sortbank_sortbank_component__["a" /* SortbankComponent */],
        data: {
            tabLable: 'SortBank情况信息',
            destroy: false
        }
    },
    {
        path: 'cellproductiondaily',
        component: __WEBPACK_IMPORTED_MODULE_5__cellproductiondaily_cellproductiondaily_component__["a" /* CellproductiondailyComponent */],
        data: {
            tabLable: 'cell生产日报',
            destroy: false
        }
    },
];
var FixreportformsRoutingModule = /** @class */ (function () {
    function FixreportformsRoutingModule() {
    }
    FixreportformsRoutingModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [__WEBPACK_IMPORTED_MODULE_1__angular_router__["RouterModule"].forChild(routes)],
            exports: [__WEBPACK_IMPORTED_MODULE_1__angular_router__["RouterModule"]]
        })
    ], FixreportformsRoutingModule);
    return FixreportformsRoutingModule;
}());



/***/ }),

/***/ "./src/app/fixreportforms/fixreportforms.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FixreportformsModule", function() { return FixreportformsModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__("./node_modules/@angular/common/esm5/common.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fixreportforms_routing_module__ = __webpack_require__("./src/app/fixreportforms/fixreportforms-routing.module.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__gsproduct_gsproduct_component__ = __webpack_require__("./src/app/fixreportforms/gsproduct/gsproduct.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__factoryproduct_factoryproduct_component__ = __webpack_require__("./src/app/fixreportforms/factoryproduct/factoryproduct.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__sortbank_sortbank_component__ = __webpack_require__("./src/app/fixreportforms/sortbank/sortbank.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__("./node_modules/@angular/forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__ = __webpack_require__("./node_modules/primeng/primeng.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_primeng_primeng___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_primeng_primeng__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_primeng_button__ = __webpack_require__("./node_modules/primeng/button.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_primeng_button___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_primeng_button__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_primeng_panel__ = __webpack_require__("./node_modules/primeng/panel.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_primeng_panel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_primeng_panel__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_primeng_table__ = __webpack_require__("./node_modules/primeng/table.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_primeng_table___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_primeng_table__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_primeng_dialog__ = __webpack_require__("./node_modules/primeng/dialog.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_primeng_dialog___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_primeng_dialog__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_primeng_chart__ = __webpack_require__("./node_modules/primeng/chart.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_primeng_chart___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_primeng_chart__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_ngx_echarts__ = __webpack_require__("./node_modules/ngx-echarts/ngx-echarts.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_primeng_growl__ = __webpack_require__("./node_modules/primeng/growl.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_primeng_growl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_primeng_growl__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__boe_pages_echarts_panel_service__ = __webpack_require__("./src/app/boe/pages/echarts/panel.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__boe_ui_boe_list_service_file_upload_service__ = __webpack_require__("./src/app/boe-ui/boe-list/service/file-upload.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_primeng_components_common_messageservice__ = __webpack_require__("./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_primeng_components_common_messageservice___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_primeng_components_common_messageservice__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__toumingdisplan_cstpnl_pipe_zero_convert_pipe__ = __webpack_require__("./src/app/toumingdisplan/cstpnl/pipe/zero-convert.pipe.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__factoryproduct_pipe_str_format_pipe__ = __webpack_require__("./src/app/fixreportforms/factoryproduct/pipe/str-format.pipe.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__cellproductiondaily_cellproductiondaily_component__ = __webpack_require__("./src/app/fixreportforms/cellproductiondaily/cellproductiondaily.component.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






















var FixreportformsModule = /** @class */ (function () {
    function FixreportformsModule() {
    }
    FixreportformsModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"],
                __WEBPACK_IMPORTED_MODULE_2__fixreportforms_routing_module__["a" /* FixreportformsRoutingModule */],
                __WEBPACK_IMPORTED_MODULE_6__angular_forms__["FormsModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["DropdownModule"],
                __WEBPACK_IMPORTED_MODULE_8_primeng_button__["ButtonModule"],
                __WEBPACK_IMPORTED_MODULE_9_primeng_panel__["PanelModule"],
                __WEBPACK_IMPORTED_MODULE_10_primeng_table__["TableModule"],
                __WEBPACK_IMPORTED_MODULE_11_primeng_dialog__["DialogModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["InputTextModule"],
                __WEBPACK_IMPORTED_MODULE_12_primeng_chart__["ChartModule"],
                __WEBPACK_IMPORTED_MODULE_13_ngx_echarts__["a" /* NgxEchartsModule */],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["SplitButtonModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["MultiSelectModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["CalendarModule"],
                __WEBPACK_IMPORTED_MODULE_14_primeng_growl__["GrowlModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["InputSwitchModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["FileUploadModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["PaginatorModule"],
                __WEBPACK_IMPORTED_MODULE_7_primeng_primeng__["TabViewModule"] // 切换标签的模块
            ],
            declarations: [__WEBPACK_IMPORTED_MODULE_3__gsproduct_gsproduct_component__["a" /* GsproductComponent */], __WEBPACK_IMPORTED_MODULE_4__factoryproduct_factoryproduct_component__["a" /* FactoryproductComponent */], __WEBPACK_IMPORTED_MODULE_5__sortbank_sortbank_component__["a" /* SortbankComponent */], __WEBPACK_IMPORTED_MODULE_19__toumingdisplan_cstpnl_pipe_zero_convert_pipe__["a" /* ZeroConvertPipe */], __WEBPACK_IMPORTED_MODULE_20__factoryproduct_pipe_str_format_pipe__["a" /* StrFormatPipe */], __WEBPACK_IMPORTED_MODULE_21__cellproductiondaily_cellproductiondaily_component__["a" /* CellproductiondailyComponent */]],
            providers: [__WEBPACK_IMPORTED_MODULE_15__common_service_api_api_service__["a" /* ApiService */], __WEBPACK_IMPORTED_MODULE_16__boe_pages_echarts_panel_service__["a" /* PanelService */], __WEBPACK_IMPORTED_MODULE_17__boe_ui_boe_list_service_file_upload_service__["a" /* FileUploadService */], __WEBPACK_IMPORTED_MODULE_18_primeng_components_common_messageservice__["MessageService"]]
        })
    ], FixreportformsModule);
    return FixreportformsModule;
}());



/***/ }),

/***/ "./src/app/fixreportforms/gsproduct/gsproduct.component.css":
/***/ (function(module, exports) {

module.exports = "#dropdown,#dropdown1,#dropdown2  {\r\n    text-align: center;\r\n  }\r\n  th {\r\n    font-weight: initial !important;\r\n    padding: 0.2em 0.1em !important;\r\n    font-size: 12px;\r\n    border: 1px solid #A6A6A6 !important;\r\n  }\r\n  .setHeader {\r\n    background-color: #BDD7EE !important;\r\n    font-weight: bold !important;\r\n  }\r\n  .setGreen {\r\n    background-color: rgb(222, 240, 211) !important;\r\n  }\r\n  .setYellow {\r\n    background-color: #FFF2CC !important;\r\n  }"

/***/ }),

/***/ "./src/app/fixreportforms/gsproduct/gsproduct.component.html":
/***/ (function(module, exports) {

module.exports = "<p-growl [(value)]=\"msgs\"></p-growl>\n<div class=\"ui-g\">\n  <p-panel class=\"ui-g-12\">\n    <p-header>\n      <div class=\"ui-g-12\">\n        <h2 style=\"text-align:center;margin: 0px 10px\">固定报表</h2>\n      </div>\n    </p-header>\n    <div class=\"ui-panel-content\">\n      <div class=\"ui-helper-clearfix\">\n        <div style=\"float:right;padding: 5px 20px\">\n          <ng-container *ngIf=\"showM1M2\">\n            <label for=\"dropdown\">Line:</label>\n            <p-dropdown id=\"dropdown1\" [options]=\"departmentLine\" [(ngModel)] = \"line\" placeholder=\"请选择\" showClear=\"true\" (onChange)=\"dtFilter()\"></p-dropdown>\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <label for=\"dropdown\">Cell:</label>\n            <p-dropdown id=\"dropdown2\" [options]=\"departmentCell\" [(ngModel)] = \"cell\" placeholder=\"请选择\" showClear=\"true\" (onChange)=\"dtFilter()\"></p-dropdown>\n            &nbsp;&nbsp;&nbsp;&nbsp;\n          </ng-container>\n          <label for=\"dropdown\">工厂:</label>\n          <p-dropdown id=\"dropdown\" [options]=\"department\" [(ngModel)]=\"factory\" (onChange)=\"select($event.value)\"></p-dropdown>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <label for=\"hourMonitorCalendar\">日期:</label>\n          <p-calendar [(ngModel)]=\"dateName\" dateFormat=\"yy/mm/dd\" id=\"hourMonitorCalendar\" placeholder=\"年/月/日\"></p-calendar>\n          <p-button label=\"查询\" (click)=\"query()\"></p-button>\n          <p-button label=\"刷新\" (click)=\"refresh()\"></p-button>\n          <p-button label=\"导出\" (click)=\"exportTable()\"></p-button>\n        </div>\n      </div>\n\n      <p-table autoLayout=\"true\" *ngIf=\"showArrayCF\">\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th colspan=\"4\" class=\"setHeader\">{{factory1}} In</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">{{factory1}} No.</th>\n            <th class=\"setHeader\">{{factory1}}</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"3\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of arrayInTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of arrayInTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of arrayInTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of dataArrayIn; let i = index\">\n            <tr>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.productspecname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.arrayproductspecname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.modeltype}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan7}}</th>\n              <th class=\"setGreen\">{{obj.plan8}}</th>\n              <th class=\"setGreen\">{{obj.plan9}}</th>\n              <th class=\"setGreen\">{{obj.plan10}}</th>\n              <th class=\"setGreen\">{{obj.plan11}}</th>\n              <th class=\"setGreen\">{{obj.plan12}}</th>\n              <th class=\"setGreen\">{{obj.plan13}}</th>\n              <th class=\"setGreen\">{{obj.plan14}}</th>\n              <th class=\"setGreen\">{{obj.plan15}}</th>\n              <th class=\"setGreen\">{{obj.plan16}}</th>\n              <th class=\"setGreen\">{{obj.plan17}}</th>\n              <th class=\"setGreen\">{{obj.plan18}}</th>\n              <th class=\"setGreen\">{{obj.plan19}}</th>\n              <th class=\"setGreen\">{{obj.plan20}}</th>\n              <th class=\"setGreen\">{{obj.plan21}}</th>\n              <th class=\"setGreen\">{{obj.plan22}}</th>\n              <th class=\"setGreen\">{{obj.plan23}}</th>\n              <th class=\"setGreen\">{{obj.plan0}}</th>\n              <th class=\"setGreen\">{{obj.plan1}}</th>\n              <th class=\"setGreen\">{{obj.plan2}}</th>\n              <th class=\"setGreen\">{{obj.plan3}}</th>\n              <th class=\"setGreen\">{{obj.plan4}}</th>\n              <th class=\"setGreen\">{{obj.plan5}}</th>\n              <th class=\"setGreen\">{{obj.plan6}}</th>\n              <th class=\"setGreen\">{{obj.planTtl | zeroConvert}}</th>\n              <th rowspan=\"3\">{{obj.remark}}</th>\n            </tr>\n            <tr>\n              <th class=\"setYellow\">Act</th>\n              <th class=\"setYellow\">{{obj.act7}}</th>\n              <th class=\"setYellow\">{{obj.act8}}</th>\n              <th class=\"setYellow\">{{obj.act9}}</th>\n              <th class=\"setYellow\">{{obj.act10}}</th>\n              <th class=\"setYellow\">{{obj.act11}}</th>\n              <th class=\"setYellow\">{{obj.act12}}</th>\n              <th class=\"setYellow\">{{obj.act13}}</th>\n              <th class=\"setYellow\">{{obj.act14}}</th>\n              <th class=\"setYellow\">{{obj.act15}}</th>\n              <th class=\"setYellow\">{{obj.act16}}</th>\n              <th class=\"setYellow\">{{obj.act17}}</th>\n              <th class=\"setYellow\">{{obj.act18}}</th>\n              <th class=\"setYellow\">{{obj.act19}}</th>\n              <th class=\"setYellow\">{{obj.act20}}</th>\n              <th class=\"setYellow\">{{obj.act21}}</th>\n              <th class=\"setYellow\">{{obj.act22}}</th>\n              <th class=\"setYellow\">{{obj.act23}}</th>\n              <th class=\"setYellow\">{{obj.act0}}</th>\n              <th class=\"setYellow\">{{obj.act1}}</th>\n              <th class=\"setYellow\">{{obj.act2}}</th>\n              <th class=\"setYellow\">{{obj.act3}}</th>\n              <th class=\"setYellow\">{{obj.act4}}</th>\n              <th class=\"setYellow\">{{obj.act5}}</th>\n              <th class=\"setYellow\">{{obj.act6}}</th>\n              <th class=\"setYellow\">{{obj.actTtl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal7}}</th>\n              <th>{{obj.bal8}}</th>\n              <th>{{obj.bal9}}</th>\n              <th>{{obj.bal10}}</th>\n              <th>{{obj.bal11}}</th>\n              <th>{{obj.bal12}}</th>\n              <th>{{obj.bal13}}</th>\n              <th>{{obj.bal14}}</th>\n              <th>{{obj.bal15}}</th>\n              <th>{{obj.bal16}}</th>\n              <th>{{obj.bal17}}</th>\n              <th>{{obj.bal18}}</th>\n              <th>{{obj.bal19}}</th>\n              <th>{{obj.bal20}}</th>\n              <th>{{obj.bal21}}</th>\n              <th>{{obj.bal22}}</th>\n              <th>{{obj.bal23}}</th>\n              <th>{{obj.bal0}}</th>\n              <th>{{obj.bal1}}</th>\n              <th>{{obj.bal2}}</th>\n              <th>{{obj.bal3}}</th>\n              <th>{{obj.bal4}}</th>\n              <th>{{obj.bal5}}</th>\n              <th>{{obj.bal6}}</th>\n              <th>{{obj.balTtl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n          <tr>\n            <th colspan=\"4\" class=\"setHeader\">{{factory1}} Out</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">{{factory1}} No.</th>\n            <th class=\"setHeader\">{{factory1}}</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"3\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of arrayOutTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of arrayOutTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of arrayOutTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of dataArrayOut; let i = index\">\n            <tr>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.productspecname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.arrayproductspecname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.modeltype}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan7}}</th>\n              <th class=\"setGreen\">{{obj.plan8}}</th>\n              <th class=\"setGreen\">{{obj.plan9}}</th>\n              <th class=\"setGreen\">{{obj.plan10}}</th>\n              <th class=\"setGreen\">{{obj.plan11}}</th>\n              <th class=\"setGreen\">{{obj.plan12}}</th>\n              <th class=\"setGreen\">{{obj.plan13}}</th>\n              <th class=\"setGreen\">{{obj.plan14}}</th>\n              <th class=\"setGreen\">{{obj.plan15}}</th>\n              <th class=\"setGreen\">{{obj.plan16}}</th>\n              <th class=\"setGreen\">{{obj.plan17}}</th>\n              <th class=\"setGreen\">{{obj.plan18}}</th>\n              <th class=\"setGreen\">{{obj.plan19}}</th>\n              <th class=\"setGreen\">{{obj.plan20}}</th>\n              <th class=\"setGreen\">{{obj.plan21}}</th>\n              <th class=\"setGreen\">{{obj.plan22}}</th>\n              <th class=\"setGreen\">{{obj.plan23}}</th>\n              <th class=\"setGreen\">{{obj.plan0}}</th>\n              <th class=\"setGreen\">{{obj.plan1}}</th>\n              <th class=\"setGreen\">{{obj.plan2}}</th>\n              <th class=\"setGreen\">{{obj.plan3}}</th>\n              <th class=\"setGreen\">{{obj.plan4}}</th>\n              <th class=\"setGreen\">{{obj.plan5}}</th>\n              <th class=\"setGreen\">{{obj.plan6}}</th>\n              <th class=\"setGreen\">{{obj.planTtl | zeroConvert}}</th>\n              <th rowspan=\"3\">{{obj.remark}}</th>\n            </tr>\n            <tr>\n              <th class=\"setYellow\">Act</th>\n              <th class=\"setYellow\">{{obj.act7}}</th>\n              <th class=\"setYellow\">{{obj.act8}}</th>\n              <th class=\"setYellow\">{{obj.act9}}</th>\n              <th class=\"setYellow\">{{obj.act10}}</th>\n              <th class=\"setYellow\">{{obj.act11}}</th>\n              <th class=\"setYellow\">{{obj.act12}}</th>\n              <th class=\"setYellow\">{{obj.act13}}</th>\n              <th class=\"setYellow\">{{obj.act14}}</th>\n              <th class=\"setYellow\">{{obj.act15}}</th>\n              <th class=\"setYellow\">{{obj.act16}}</th>\n              <th class=\"setYellow\">{{obj.act17}}</th>\n              <th class=\"setYellow\">{{obj.act18}}</th>\n              <th class=\"setYellow\">{{obj.act19}}</th>\n              <th class=\"setYellow\">{{obj.act20}}</th>\n              <th class=\"setYellow\">{{obj.act21}}</th>\n              <th class=\"setYellow\">{{obj.act22}}</th>\n              <th class=\"setYellow\">{{obj.act23}}</th>\n              <th class=\"setYellow\">{{obj.act0}}</th>\n              <th class=\"setYellow\">{{obj.act1}}</th>\n              <th class=\"setYellow\">{{obj.act2}}</th>\n              <th class=\"setYellow\">{{obj.act3}}</th>\n              <th class=\"setYellow\">{{obj.act4}}</th>\n              <th class=\"setYellow\">{{obj.act5}}</th>\n              <th class=\"setYellow\">{{obj.act6}}</th>\n              <th class=\"setYellow\">{{obj.actTtl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal7}}</th>\n              <th>{{obj.bal8}}</th>\n              <th>{{obj.bal9}}</th>\n              <th>{{obj.bal10}}</th>\n              <th>{{obj.bal11}}</th>\n              <th>{{obj.bal12}}</th>\n              <th>{{obj.bal13}}</th>\n              <th>{{obj.bal14}}</th>\n              <th>{{obj.bal15}}</th>\n              <th>{{obj.bal16}}</th>\n              <th>{{obj.bal17}}</th>\n              <th>{{obj.bal18}}</th>\n              <th>{{obj.bal19}}</th>\n              <th>{{obj.bal20}}</th>\n              <th>{{obj.bal21}}</th>\n              <th>{{obj.bal22}}</th>\n              <th>{{obj.bal23}}</th>\n              <th>{{obj.bal0}}</th>\n              <th>{{obj.bal1}}</th>\n              <th>{{obj.bal2}}</th>\n              <th>{{obj.bal3}}</th>\n              <th>{{obj.bal4}}</th>\n              <th>{{obj.bal5}}</th>\n              <th>{{obj.bal6}}</th>\n              <th>{{obj.balTtl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n        </ng-template>\n      </p-table>\n\n      <p-table autoLayout=\"true\" *ngIf=\"showCell\">\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th colspan=\"6\" class=\"setHeader\">Cell In</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th class=\"setHeader\">Line</th>\n            <th class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">Cell NO.</th>\n            <th class=\"setHeader\">Cell</th>\n            <th class=\"setHeader\">线体产能</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"4\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th rowspan=\"3\" class=\"setGreen\">{{ttlCellInChanNeng}}</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of cellInTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of cellInTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of cellInTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of dataCellIn; let i = index\">\n            <tr>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.line}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.productname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.productspecname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.model_type}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.channeng}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan7}}</th>\n              <th class=\"setGreen\">{{obj.plan8}}</th>\n              <th class=\"setGreen\">{{obj.plan9}}</th>\n              <th class=\"setGreen\">{{obj.plan10}}</th>\n              <th class=\"setGreen\">{{obj.plan11}}</th>\n              <th class=\"setGreen\">{{obj.plan12}}</th>\n              <th class=\"setGreen\">{{obj.plan13}}</th>\n              <th class=\"setGreen\">{{obj.plan14}}</th>\n              <th class=\"setGreen\">{{obj.plan15}}</th>\n              <th class=\"setGreen\">{{obj.plan16}}</th>\n              <th class=\"setGreen\">{{obj.plan17}}</th>\n              <th class=\"setGreen\">{{obj.plan18}}</th>\n              <th class=\"setGreen\">{{obj.plan19}}</th>\n              <th class=\"setGreen\">{{obj.plan20}}</th>\n              <th class=\"setGreen\">{{obj.plan21}}</th>\n              <th class=\"setGreen\">{{obj.plan22}}</th>\n              <th class=\"setGreen\">{{obj.plan23}}</th>\n              <th class=\"setGreen\">{{obj.plan0}}</th>\n              <th class=\"setGreen\">{{obj.plan1}}</th>\n              <th class=\"setGreen\">{{obj.plan2}}</th>\n              <th class=\"setGreen\">{{obj.plan3}}</th>\n              <th class=\"setGreen\">{{obj.plan4}}</th>\n              <th class=\"setGreen\">{{obj.plan5}}</th>\n              <th class=\"setGreen\">{{obj.plan6}}</th>\n              <th class=\"setGreen\">{{obj.planTtl | zeroConvert}}</th>\n              <th rowspan=\"3\">{{obj.remark}}</th>\n            </tr>\n            <tr>\n              <th class=\"setYellow\">Act</th>\n              <th class=\"setYellow\">{{obj.act7}}</th>\n              <th class=\"setYellow\">{{obj.act8}}</th>\n              <th class=\"setYellow\">{{obj.act9}}</th>\n              <th class=\"setYellow\">{{obj.act10}}</th>\n              <th class=\"setYellow\">{{obj.act11}}</th>\n              <th class=\"setYellow\">{{obj.act12}}</th>\n              <th class=\"setYellow\">{{obj.act13}}</th>\n              <th class=\"setYellow\">{{obj.act14}}</th>\n              <th class=\"setYellow\">{{obj.act15}}</th>\n              <th class=\"setYellow\">{{obj.act16}}</th>\n              <th class=\"setYellow\">{{obj.act17}}</th>\n              <th class=\"setYellow\">{{obj.act18}}</th>\n              <th class=\"setYellow\">{{obj.act19}}</th>\n              <th class=\"setYellow\">{{obj.act20}}</th>\n              <th class=\"setYellow\">{{obj.act21}}</th>\n              <th class=\"setYellow\">{{obj.act22}}</th>\n              <th class=\"setYellow\">{{obj.act23}}</th>\n              <th class=\"setYellow\">{{obj.act0}}</th>\n              <th class=\"setYellow\">{{obj.act1}}</th>\n              <th class=\"setYellow\">{{obj.act2}}</th>\n              <th class=\"setYellow\">{{obj.act3}}</th>\n              <th class=\"setYellow\">{{obj.act4}}</th>\n              <th class=\"setYellow\">{{obj.act5}}</th>\n              <th class=\"setYellow\">{{obj.act6}}</th>\n              <th class=\"setYellow\">{{obj.actTtl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal7}}</th>\n              <th>{{obj.bal8}}</th>\n              <th>{{obj.bal9}}</th>\n              <th>{{obj.bal10}}</th>\n              <th>{{obj.bal11}}</th>\n              <th>{{obj.bal12}}</th>\n              <th>{{obj.bal13}}</th>\n              <th>{{obj.bal14}}</th>\n              <th>{{obj.bal15}}</th>\n              <th>{{obj.bal16}}</th>\n              <th>{{obj.bal17}}</th>\n              <th>{{obj.bal18}}</th>\n              <th>{{obj.bal19}}</th>\n              <th>{{obj.bal20}}</th>\n              <th>{{obj.bal21}}</th>\n              <th>{{obj.bal22}}</th>\n              <th>{{obj.bal23}}</th>\n              <th>{{obj.bal0}}</th>\n              <th>{{obj.bal1}}</th>\n              <th>{{obj.bal2}}</th>\n              <th>{{obj.bal3}}</th>\n              <th>{{obj.bal4}}</th>\n              <th>{{obj.bal5}}</th>\n              <th>{{obj.bal6}}</th>\n              <th>{{obj.balTtl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n          <tr>\n            <th colspan=\"6\" class=\"setHeader\">Assy In</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th class=\"setHeader\">Line</th>\n            <th class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">Cell NO.</th>\n            <th class=\"setHeader\">Cell</th>\n            <th class=\"setHeader\">线体产能</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"4\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th rowspan=\"3\" class=\"setGreen\">{{ttlCellAssyChanNeng}}</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of cellAssyInTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of cellAssyInTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of cellAssyInTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of dataCellAssyIn; let i = index\">\n            <tr>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.line}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.productname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.productspecname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.model_type}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.channeng}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan7}}</th>\n              <th class=\"setGreen\">{{obj.plan8}}</th>\n              <th class=\"setGreen\">{{obj.plan9}}</th>\n              <th class=\"setGreen\">{{obj.plan10}}</th>\n              <th class=\"setGreen\">{{obj.plan11}}</th>\n              <th class=\"setGreen\">{{obj.plan12}}</th>\n              <th class=\"setGreen\">{{obj.plan13}}</th>\n              <th class=\"setGreen\">{{obj.plan14}}</th>\n              <th class=\"setGreen\">{{obj.plan15}}</th>\n              <th class=\"setGreen\">{{obj.plan16}}</th>\n              <th class=\"setGreen\">{{obj.plan17}}</th>\n              <th class=\"setGreen\">{{obj.plan18}}</th>\n              <th class=\"setGreen\">{{obj.plan19}}</th>\n              <th class=\"setGreen\">{{obj.plan20}}</th>\n              <th class=\"setGreen\">{{obj.plan21}}</th>\n              <th class=\"setGreen\">{{obj.plan22}}</th>\n              <th class=\"setGreen\">{{obj.plan23}}</th>\n              <th class=\"setGreen\">{{obj.plan0}}</th>\n              <th class=\"setGreen\">{{obj.plan1}}</th>\n              <th class=\"setGreen\">{{obj.plan2}}</th>\n              <th class=\"setGreen\">{{obj.plan3}}</th>\n              <th class=\"setGreen\">{{obj.plan4}}</th>\n              <th class=\"setGreen\">{{obj.plan5}}</th>\n              <th class=\"setGreen\">{{obj.plan6}}</th>\n              <th class=\"setGreen\">{{obj.planTtl | zeroConvert}}</th>\n              <th rowspan=\"3\">{{obj.remark}}</th>\n            </tr>\n            <tr>\n              <th class=\"setYellow\">Act</th>\n              <th class=\"setYellow\">{{obj.act7}}</th>\n              <th class=\"setYellow\">{{obj.act8}}</th>\n              <th class=\"setYellow\">{{obj.act9}}</th>\n              <th class=\"setYellow\">{{obj.act10}}</th>\n              <th class=\"setYellow\">{{obj.act11}}</th>\n              <th class=\"setYellow\">{{obj.act12}}</th>\n              <th class=\"setYellow\">{{obj.act13}}</th>\n              <th class=\"setYellow\">{{obj.act14}}</th>\n              <th class=\"setYellow\">{{obj.act15}}</th>\n              <th class=\"setYellow\">{{obj.act16}}</th>\n              <th class=\"setYellow\">{{obj.act17}}</th>\n              <th class=\"setYellow\">{{obj.act18}}</th>\n              <th class=\"setYellow\">{{obj.act19}}</th>\n              <th class=\"setYellow\">{{obj.act20}}</th>\n              <th class=\"setYellow\">{{obj.act21}}</th>\n              <th class=\"setYellow\">{{obj.act22}}</th>\n              <th class=\"setYellow\">{{obj.act23}}</th>\n              <th class=\"setYellow\">{{obj.act0}}</th>\n              <th class=\"setYellow\">{{obj.act1}}</th>\n              <th class=\"setYellow\">{{obj.act2}}</th>\n              <th class=\"setYellow\">{{obj.act3}}</th>\n              <th class=\"setYellow\">{{obj.act4}}</th>\n              <th class=\"setYellow\">{{obj.act5}}</th>\n              <th class=\"setYellow\">{{obj.act6}}</th>\n              <th class=\"setYellow\">{{obj.actTtl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal7}}</th>\n              <th>{{obj.bal8}}</th>\n              <th>{{obj.bal9}}</th>\n              <th>{{obj.bal10}}</th>\n              <th>{{obj.bal11}}</th>\n              <th>{{obj.bal12}}</th>\n              <th>{{obj.bal13}}</th>\n              <th>{{obj.bal14}}</th>\n              <th>{{obj.bal15}}</th>\n              <th>{{obj.bal16}}</th>\n              <th>{{obj.bal17}}</th>\n              <th>{{obj.bal18}}</th>\n              <th>{{obj.bal19}}</th>\n              <th>{{obj.bal20}}</th>\n              <th>{{obj.bal21}}</th>\n              <th>{{obj.bal22}}</th>\n              <th>{{obj.bal23}}</th>\n              <th>{{obj.bal0}}</th>\n              <th>{{obj.bal1}}</th>\n              <th>{{obj.bal2}}</th>\n              <th>{{obj.bal3}}</th>\n              <th>{{obj.bal4}}</th>\n              <th>{{obj.bal5}}</th>\n              <th>{{obj.bal6}}</th>\n              <th>{{obj.balTtl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n          <tr>\n            <th colspan=\"6\" class=\"setHeader\">Cut In</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"2\" class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">Cell NO.</th>\n            <th class=\"setHeader\">Cell</th>\n            <th class=\"setHeader\">线体产能</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"4\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th rowspan=\"3\" class=\"setGreen\">{{ttlCellCutInChanNeng}}</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of cellCutInTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of cellCutInTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of cellCutInTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of dataCutIn; let i = index\">\n            <tr>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" colspan=\"2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.productname}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.productspecname}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.model_type}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.channeng}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan[\"7\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"8\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"9\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"10\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"11\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"12\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"13\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"14\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"15\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"16\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"17\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"18\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"19\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"20\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"21\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"22\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"23\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"0\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"1\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"2\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"3\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"4\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"5\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"6\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan.ttl | zeroConvert}}</th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\">{{obj.remark}}</th>\n            </tr>\n            <tr *ngFor=\"let act of obj.acts\">\n              <th class=\"setYellow\">{{act.oper}}</th>\n              <th class=\"setYellow\">{{act[\"7\"]}}</th>\n              <th class=\"setYellow\">{{act[\"8\"]}}</th>\n              <th class=\"setYellow\">{{act[\"9\"]}}</th>\n              <th class=\"setYellow\">{{act[\"10\"]}}</th>\n              <th class=\"setYellow\">{{act[\"11\"]}}</th>\n              <th class=\"setYellow\">{{act[\"12\"]}}</th>\n              <th class=\"setYellow\">{{act[\"13\"]}}</th>\n              <th class=\"setYellow\">{{act[\"14\"]}}</th>\n              <th class=\"setYellow\">{{act[\"15\"]}}</th>\n              <th class=\"setYellow\">{{act[\"16\"]}}</th>\n              <th class=\"setYellow\">{{act[\"17\"]}}</th>\n              <th class=\"setYellow\">{{act[\"18\"]}}</th>\n              <th class=\"setYellow\">{{act[\"19\"]}}</th>\n              <th class=\"setYellow\">{{act[\"20\"]}}</th>\n              <th class=\"setYellow\">{{act[\"21\"]}}</th>\n              <th class=\"setYellow\">{{act[\"22\"]}}</th>\n              <th class=\"setYellow\">{{act[\"23\"]}}</th>\n              <th class=\"setYellow\">{{act[\"0\"]}}</th>\n              <th class=\"setYellow\">{{act[\"1\"]}}</th>\n              <th class=\"setYellow\">{{act[\"2\"]}}</th>\n              <th class=\"setYellow\">{{act[\"3\"]}}</th>\n              <th class=\"setYellow\">{{act[\"4\"]}}</th>\n              <th class=\"setYellow\">{{act[\"5\"]}}</th>\n              <th class=\"setYellow\">{{act[\"6\"]}}</th>\n              <th class=\"setYellow\">{{act.ttl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal[\"7\"]}}</th>\n              <th>{{obj.bal[\"8\"]}}</th>\n              <th>{{obj.bal[\"9\"]}}</th>\n              <th>{{obj.bal[\"10\"]}}</th>\n              <th>{{obj.bal[\"11\"]}}</th>\n              <th>{{obj.bal[\"12\"]}}</th>\n              <th>{{obj.bal[\"13\"]}}</th>\n              <th>{{obj.bal[\"14\"]}}</th>\n              <th>{{obj.bal[\"15\"]}}</th>\n              <th>{{obj.bal[\"16\"]}}</th>\n              <th>{{obj.bal[\"17\"]}}</th>\n              <th>{{obj.bal[\"18\"]}}</th>\n              <th>{{obj.bal[\"19\"]}}</th>\n              <th>{{obj.bal[\"20\"]}}</th>\n              <th>{{obj.bal[\"21\"]}}</th>\n              <th>{{obj.bal[\"22\"]}}</th>\n              <th>{{obj.bal[\"23\"]}}</th>\n              <th>{{obj.bal[\"0\"]}}</th>\n              <th>{{obj.bal[\"1\"]}}</th>\n              <th>{{obj.bal[\"2\"]}}</th>\n              <th>{{obj.bal[\"3\"]}}</th>\n              <th>{{obj.bal[\"4\"]}}</th>\n              <th>{{obj.bal[\"5\"]}}</th>\n              <th>{{obj.bal[\"6\"]}}</th>\n              <th>{{obj.bal.ttl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n          <tr>\n            <th colspan=\"6\" class=\"setHeader\">Cell Out</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"2\" class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">Cell NO.</th>\n            <th class=\"setHeader\">Cell</th>\n            <th class=\"setHeader\">线体产能</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"4\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th rowspan=\"3\" class=\"setGreen\">{{ttlCellOutChanNeng}}</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of cellOutTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of cellOutTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of cellOutTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of dataCellOut; let i = index\">\n            <tr>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" colspan=\"2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.productname}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.productspecname}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.model_type}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.channeng}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan[\"7\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"8\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"9\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"10\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"11\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"12\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"13\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"14\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"15\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"16\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"17\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"18\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"19\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"20\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"21\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"22\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"23\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"0\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"1\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"2\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"3\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"4\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"5\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"6\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan.ttl | zeroConvert}}</th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\">{{obj.remark}}</th>\n            </tr>\n            <tr *ngFor=\"let act of obj.acts\">\n              <th class=\"setYellow\">{{act.oper}}</th>\n              <th class=\"setYellow\">{{act[\"7\"]}}</th>\n              <th class=\"setYellow\">{{act[\"8\"]}}</th>\n              <th class=\"setYellow\">{{act[\"9\"]}}</th>\n              <th class=\"setYellow\">{{act[\"10\"]}}</th>\n              <th class=\"setYellow\">{{act[\"11\"]}}</th>\n              <th class=\"setYellow\">{{act[\"12\"]}}</th>\n              <th class=\"setYellow\">{{act[\"13\"]}}</th>\n              <th class=\"setYellow\">{{act[\"14\"]}}</th>\n              <th class=\"setYellow\">{{act[\"15\"]}}</th>\n              <th class=\"setYellow\">{{act[\"16\"]}}</th>\n              <th class=\"setYellow\">{{act[\"17\"]}}</th>\n              <th class=\"setYellow\">{{act[\"18\"]}}</th>\n              <th class=\"setYellow\">{{act[\"19\"]}}</th>\n              <th class=\"setYellow\">{{act[\"20\"]}}</th>\n              <th class=\"setYellow\">{{act[\"21\"]}}</th>\n              <th class=\"setYellow\">{{act[\"22\"]}}</th>\n              <th class=\"setYellow\">{{act[\"23\"]}}</th>\n              <th class=\"setYellow\">{{act[\"0\"]}}</th>\n              <th class=\"setYellow\">{{act[\"1\"]}}</th>\n              <th class=\"setYellow\">{{act[\"2\"]}}</th>\n              <th class=\"setYellow\">{{act[\"3\"]}}</th>\n              <th class=\"setYellow\">{{act[\"4\"]}}</th>\n              <th class=\"setYellow\">{{act[\"5\"]}}</th>\n              <th class=\"setYellow\">{{act[\"6\"]}}</th>\n              <th class=\"setYellow\">{{act.ttl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal[\"7\"]}}</th>\n              <th>{{obj.bal[\"8\"]}}</th>\n              <th>{{obj.bal[\"9\"]}}</th>\n              <th>{{obj.bal[\"10\"]}}</th>\n              <th>{{obj.bal[\"11\"]}}</th>\n              <th>{{obj.bal[\"12\"]}}</th>\n              <th>{{obj.bal[\"13\"]}}</th>\n              <th>{{obj.bal[\"14\"]}}</th>\n              <th>{{obj.bal[\"15\"]}}</th>\n              <th>{{obj.bal[\"16\"]}}</th>\n              <th>{{obj.bal[\"17\"]}}</th>\n              <th>{{obj.bal[\"18\"]}}</th>\n              <th>{{obj.bal[\"19\"]}}</th>\n              <th>{{obj.bal[\"20\"]}}</th>\n              <th>{{obj.bal[\"21\"]}}</th>\n              <th>{{obj.bal[\"22\"]}}</th>\n              <th>{{obj.bal[\"23\"]}}</th>\n              <th>{{obj.bal[\"0\"]}}</th>\n              <th>{{obj.bal[\"1\"]}}</th>\n              <th>{{obj.bal[\"2\"]}}</th>\n              <th>{{obj.bal[\"3\"]}}</th>\n              <th>{{obj.bal[\"4\"]}}</th>\n              <th>{{obj.bal[\"5\"]}}</th>\n              <th>{{obj.bal[\"6\"]}}</th>\n              <th>{{obj.bal.ttl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n          <tr>\n            <th colspan=\"6\" class=\"setHeader\">120K</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th class=\"setHeader\">Line</th>\n            <th class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">Cell NO.</th>\n            <th class=\"setHeader\">Cell</th>\n            <th class=\"setHeader\">线体产能</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"4\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th rowspan=\"3\" class=\"setGreen\">{{ttlCell120KChanNeng}}</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of cell120KTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of cell120KTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of cell120KTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of dataCell120K; let i = index\">\n            <tr>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.line}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.productname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.productspecname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.model_type}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.channeng}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan7}}</th>\n              <th class=\"setGreen\">{{obj.plan8}}</th>\n              <th class=\"setGreen\">{{obj.plan9}}</th>\n              <th class=\"setGreen\">{{obj.plan10}}</th>\n              <th class=\"setGreen\">{{obj.plan11}}</th>\n              <th class=\"setGreen\">{{obj.plan12}}</th>\n              <th class=\"setGreen\">{{obj.plan13}}</th>\n              <th class=\"setGreen\">{{obj.plan14}}</th>\n              <th class=\"setGreen\">{{obj.plan15}}</th>\n              <th class=\"setGreen\">{{obj.plan16}}</th>\n              <th class=\"setGreen\">{{obj.plan17}}</th>\n              <th class=\"setGreen\">{{obj.plan18}}</th>\n              <th class=\"setGreen\">{{obj.plan19}}</th>\n              <th class=\"setGreen\">{{obj.plan20}}</th>\n              <th class=\"setGreen\">{{obj.plan21}}</th>\n              <th class=\"setGreen\">{{obj.plan22}}</th>\n              <th class=\"setGreen\">{{obj.plan23}}</th>\n              <th class=\"setGreen\">{{obj.plan0}}</th>\n              <th class=\"setGreen\">{{obj.plan1}}</th>\n              <th class=\"setGreen\">{{obj.plan2}}</th>\n              <th class=\"setGreen\">{{obj.plan3}}</th>\n              <th class=\"setGreen\">{{obj.plan4}}</th>\n              <th class=\"setGreen\">{{obj.plan5}}</th>\n              <th class=\"setGreen\">{{obj.plan6}}</th>\n              <th class=\"setGreen\">{{obj.planTtl | zeroConvert}}</th>\n              <th rowspan=\"3\">{{obj.remark}}</th>\n            </tr>\n            <tr>\n              <th class=\"setYellow\">Act</th>\n              <th class=\"setYellow\">{{obj.act7}}</th>\n              <th class=\"setYellow\">{{obj.act8}}</th>\n              <th class=\"setYellow\">{{obj.act9}}</th>\n              <th class=\"setYellow\">{{obj.act10}}</th>\n              <th class=\"setYellow\">{{obj.act11}}</th>\n              <th class=\"setYellow\">{{obj.act12}}</th>\n              <th class=\"setYellow\">{{obj.act13}}</th>\n              <th class=\"setYellow\">{{obj.act14}}</th>\n              <th class=\"setYellow\">{{obj.act15}}</th>\n              <th class=\"setYellow\">{{obj.act16}}</th>\n              <th class=\"setYellow\">{{obj.act17}}</th>\n              <th class=\"setYellow\">{{obj.act18}}</th>\n              <th class=\"setYellow\">{{obj.act19}}</th>\n              <th class=\"setYellow\">{{obj.act20}}</th>\n              <th class=\"setYellow\">{{obj.act21}}</th>\n              <th class=\"setYellow\">{{obj.act22}}</th>\n              <th class=\"setYellow\">{{obj.act23}}</th>\n              <th class=\"setYellow\">{{obj.act0}}</th>\n              <th class=\"setYellow\">{{obj.act1}}</th>\n              <th class=\"setYellow\">{{obj.act2}}</th>\n              <th class=\"setYellow\">{{obj.act3}}</th>\n              <th class=\"setYellow\">{{obj.act4}}</th>\n              <th class=\"setYellow\">{{obj.act5}}</th>\n              <th class=\"setYellow\">{{obj.act6}}</th>\n              <th class=\"setYellow\">{{obj.actTtl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal7}}</th>\n              <th>{{obj.bal8}}</th>\n              <th>{{obj.bal9}}</th>\n              <th>{{obj.bal10}}</th>\n              <th>{{obj.bal11}}</th>\n              <th>{{obj.bal12}}</th>\n              <th>{{obj.bal13}}</th>\n              <th>{{obj.bal14}}</th>\n              <th>{{obj.bal15}}</th>\n              <th>{{obj.bal16}}</th>\n              <th>{{obj.bal17}}</th>\n              <th>{{obj.bal18}}</th>\n              <th>{{obj.bal19}}</th>\n              <th>{{obj.bal20}}</th>\n              <th>{{obj.bal21}}</th>\n              <th>{{obj.bal22}}</th>\n              <th>{{obj.bal23}}</th>\n              <th>{{obj.bal0}}</th>\n              <th>{{obj.bal1}}</th>\n              <th>{{obj.bal2}}</th>\n              <th>{{obj.bal3}}</th>\n              <th>{{obj.bal4}}</th>\n              <th>{{obj.bal5}}</th>\n              <th>{{obj.bal6}}</th>\n              <th>{{obj.balTtl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n          <tr>\n            <th colspan=\"6\" class=\"setHeader\">2Cut In</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"2\" class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">Cell NO.</th>\n            <th class=\"setHeader\">Cell</th>\n            <th class=\"setHeader\">线体产能</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"4\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th rowspan=\"3\" class=\"setGreen\">{{ttlCell2CutInChanNeng}}</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of cell2CutInTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of cell2CutInTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of cell2CutInTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of data2CutIn; let i = index\">\n            <tr>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" colspan=\"2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.productname}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.productspecname}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.model_type}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.channeng}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan[\"7\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"8\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"9\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"10\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"11\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"12\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"13\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"14\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"15\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"16\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"17\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"18\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"19\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"20\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"21\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"22\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"23\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"0\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"1\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"2\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"3\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"4\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"5\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"6\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan.ttl | zeroConvert}}</th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\">{{obj.remark}}</th>\n            </tr>\n            <tr *ngFor=\"let act of obj.acts\">\n              <th class=\"setYellow\">{{act.oper}}</th>\n              <th class=\"setYellow\">{{act[\"7\"]}}</th>\n              <th class=\"setYellow\">{{act[\"8\"]}}</th>\n              <th class=\"setYellow\">{{act[\"9\"]}}</th>\n              <th class=\"setYellow\">{{act[\"10\"]}}</th>\n              <th class=\"setYellow\">{{act[\"11\"]}}</th>\n              <th class=\"setYellow\">{{act[\"12\"]}}</th>\n              <th class=\"setYellow\">{{act[\"13\"]}}</th>\n              <th class=\"setYellow\">{{act[\"14\"]}}</th>\n              <th class=\"setYellow\">{{act[\"15\"]}}</th>\n              <th class=\"setYellow\">{{act[\"16\"]}}</th>\n              <th class=\"setYellow\">{{act[\"17\"]}}</th>\n              <th class=\"setYellow\">{{act[\"18\"]}}</th>\n              <th class=\"setYellow\">{{act[\"19\"]}}</th>\n              <th class=\"setYellow\">{{act[\"20\"]}}</th>\n              <th class=\"setYellow\">{{act[\"21\"]}}</th>\n              <th class=\"setYellow\">{{act[\"22\"]}}</th>\n              <th class=\"setYellow\">{{act[\"23\"]}}</th>\n              <th class=\"setYellow\">{{act[\"0\"]}}</th>\n              <th class=\"setYellow\">{{act[\"1\"]}}</th>\n              <th class=\"setYellow\">{{act[\"2\"]}}</th>\n              <th class=\"setYellow\">{{act[\"3\"]}}</th>\n              <th class=\"setYellow\">{{act[\"4\"]}}</th>\n              <th class=\"setYellow\">{{act[\"5\"]}}</th>\n              <th class=\"setYellow\">{{act[\"6\"]}}</th>\n              <th class=\"setYellow\">{{act.ttl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal[\"7\"]}}</th>\n              <th>{{obj.bal[\"8\"]}}</th>\n              <th>{{obj.bal[\"9\"]}}</th>\n              <th>{{obj.bal[\"10\"]}}</th>\n              <th>{{obj.bal[\"11\"]}}</th>\n              <th>{{obj.bal[\"12\"]}}</th>\n              <th>{{obj.bal[\"13\"]}}</th>\n              <th>{{obj.bal[\"14\"]}}</th>\n              <th>{{obj.bal[\"15\"]}}</th>\n              <th>{{obj.bal[\"16\"]}}</th>\n              <th>{{obj.bal[\"17\"]}}</th>\n              <th>{{obj.bal[\"18\"]}}</th>\n              <th>{{obj.bal[\"19\"]}}</th>\n              <th>{{obj.bal[\"20\"]}}</th>\n              <th>{{obj.bal[\"21\"]}}</th>\n              <th>{{obj.bal[\"22\"]}}</th>\n              <th>{{obj.bal[\"23\"]}}</th>\n              <th>{{obj.bal[\"0\"]}}</th>\n              <th>{{obj.bal[\"1\"]}}</th>\n              <th>{{obj.bal[\"2\"]}}</th>\n              <th>{{obj.bal[\"3\"]}}</th>\n              <th>{{obj.bal[\"4\"]}}</th>\n              <th>{{obj.bal[\"5\"]}}</th>\n              <th>{{obj.bal[\"6\"]}}</th>\n              <th>{{obj.bal.ttl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n          <tr>\n            <th colspan=\"6\" class=\"setHeader\">2Cut Out</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"2\" class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">Cell NO.</th>\n            <th class=\"setHeader\">Cell</th>\n            <th class=\"setHeader\">线体产能</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"4\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th rowspan=\"3\" class=\"setGreen\">{{ttlCell2CutOutChanNeng}}</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of cell2CutOutTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of cell2CutOutTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of cell2CutOutTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of data2CutOut; let i = index\">\n            <tr>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" colspan=\"2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.productname}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.productspecname}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.model_type}}\n              </th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.channeng}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan[\"7\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"8\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"9\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"10\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"11\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"12\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"13\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"14\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"15\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"16\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"17\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"18\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"19\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"20\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"21\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"22\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"23\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"0\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"1\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"2\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"3\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"4\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"5\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan[\"6\"]}}</th>\n              <th class=\"setGreen\">{{obj.plan.ttl | zeroConvert}}</th>\n              <th [attr.rowspan]=\"obj.acts.length + 2\">{{obj.remark}}</th>\n            </tr>\n            <tr *ngFor=\"let act of obj.acts\">\n              <th class=\"setYellow\">{{act.oper}}</th>\n              <th class=\"setYellow\">{{act[\"7\"]}}</th>\n              <th class=\"setYellow\">{{act[\"8\"]}}</th>\n              <th class=\"setYellow\">{{act[\"9\"]}}</th>\n              <th class=\"setYellow\">{{act[\"10\"]}}</th>\n              <th class=\"setYellow\">{{act[\"11\"]}}</th>\n              <th class=\"setYellow\">{{act[\"12\"]}}</th>\n              <th class=\"setYellow\">{{act[\"13\"]}}</th>\n              <th class=\"setYellow\">{{act[\"14\"]}}</th>\n              <th class=\"setYellow\">{{act[\"15\"]}}</th>\n              <th class=\"setYellow\">{{act[\"16\"]}}</th>\n              <th class=\"setYellow\">{{act[\"17\"]}}</th>\n              <th class=\"setYellow\">{{act[\"18\"]}}</th>\n              <th class=\"setYellow\">{{act[\"19\"]}}</th>\n              <th class=\"setYellow\">{{act[\"20\"]}}</th>\n              <th class=\"setYellow\">{{act[\"21\"]}}</th>\n              <th class=\"setYellow\">{{act[\"22\"]}}</th>\n              <th class=\"setYellow\">{{act[\"23\"]}}</th>\n              <th class=\"setYellow\">{{act[\"0\"]}}</th>\n              <th class=\"setYellow\">{{act[\"1\"]}}</th>\n              <th class=\"setYellow\">{{act[\"2\"]}}</th>\n              <th class=\"setYellow\">{{act[\"3\"]}}</th>\n              <th class=\"setYellow\">{{act[\"4\"]}}</th>\n              <th class=\"setYellow\">{{act[\"5\"]}}</th>\n              <th class=\"setYellow\">{{act[\"6\"]}}</th>\n              <th class=\"setYellow\">{{act.ttl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal[\"7\"]}}</th>\n              <th>{{obj.bal[\"8\"]}}</th>\n              <th>{{obj.bal[\"9\"]}}</th>\n              <th>{{obj.bal[\"10\"]}}</th>\n              <th>{{obj.bal[\"11\"]}}</th>\n              <th>{{obj.bal[\"12\"]}}</th>\n              <th>{{obj.bal[\"13\"]}}</th>\n              <th>{{obj.bal[\"14\"]}}</th>\n              <th>{{obj.bal[\"15\"]}}</th>\n              <th>{{obj.bal[\"16\"]}}</th>\n              <th>{{obj.bal[\"17\"]}}</th>\n              <th>{{obj.bal[\"18\"]}}</th>\n              <th>{{obj.bal[\"19\"]}}</th>\n              <th>{{obj.bal[\"20\"]}}</th>\n              <th>{{obj.bal[\"21\"]}}</th>\n              <th>{{obj.bal[\"22\"]}}</th>\n              <th>{{obj.bal[\"23\"]}}</th>\n              <th>{{obj.bal[\"0\"]}}</th>\n              <th>{{obj.bal[\"1\"]}}</th>\n              <th>{{obj.bal[\"2\"]}}</th>\n              <th>{{obj.bal[\"3\"]}}</th>\n              <th>{{obj.bal[\"4\"]}}</th>\n              <th>{{obj.bal[\"5\"]}}</th>\n              <th>{{obj.bal[\"6\"]}}</th>\n              <th>{{obj.bal.ttl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n        </ng-template>\n      </p-table>\n\n      <p-table autoLayout=\"true\" *ngIf=\"showM1M2\">\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th colspan=\"6\" class=\"setHeader\">{{module_factory1}} In</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th class=\"setHeader\">Line</th>\n            <th class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">FGCode</th>\n            <th class=\"setHeader\">Cell</th>\n            <th class=\"setHeader\">线体产能</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"4\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th rowspan=\"3\" class=\"setGreen\">{{ttlMdlChanNeng}}</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of mdlInTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of mdlInTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of mdlInTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of dataMdlIn; let i = index\">\n            <tr>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.line}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.productname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.fgcode}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.model_type}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.channeng}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan7}}</th>\n              <th class=\"setGreen\">{{obj.plan8}}</th>\n              <th class=\"setGreen\">{{obj.plan9}}</th>\n              <th class=\"setGreen\">{{obj.plan10}}</th>\n              <th class=\"setGreen\">{{obj.plan11}}</th>\n              <th class=\"setGreen\">{{obj.plan12}}</th>\n              <th class=\"setGreen\">{{obj.plan13}}</th>\n              <th class=\"setGreen\">{{obj.plan14}}</th>\n              <th class=\"setGreen\">{{obj.plan15}}</th>\n              <th class=\"setGreen\">{{obj.plan16}}</th>\n              <th class=\"setGreen\">{{obj.plan17}}</th>\n              <th class=\"setGreen\">{{obj.plan18}}</th>\n              <th class=\"setGreen\">{{obj.plan19}}</th>\n              <th class=\"setGreen\">{{obj.plan20}}</th>\n              <th class=\"setGreen\">{{obj.plan21}}</th>\n              <th class=\"setGreen\">{{obj.plan22}}</th>\n              <th class=\"setGreen\">{{obj.plan23}}</th>\n              <th class=\"setGreen\">{{obj.plan0}}</th>\n              <th class=\"setGreen\">{{obj.plan1}}</th>\n              <th class=\"setGreen\">{{obj.plan2}}</th>\n              <th class=\"setGreen\">{{obj.plan3}}</th>\n              <th class=\"setGreen\">{{obj.plan4}}</th>\n              <th class=\"setGreen\">{{obj.plan5}}</th>\n              <th class=\"setGreen\">{{obj.plan6}}</th>\n              <th class=\"setGreen\">{{obj.planTtl | zeroConvert}}</th>\n              <th rowspan=\"3\">{{obj.remark}}</th>\n            </tr>\n            <tr>\n              <th class=\"setYellow\">Act</th>\n              <th class=\"setYellow\">{{obj.act7}}</th>\n              <th class=\"setYellow\">{{obj.act8}}</th>\n              <th class=\"setYellow\">{{obj.act9}}</th>\n              <th class=\"setYellow\">{{obj.act10}}</th>\n              <th class=\"setYellow\">{{obj.act11}}</th>\n              <th class=\"setYellow\">{{obj.act12}}</th>\n              <th class=\"setYellow\">{{obj.act13}}</th>\n              <th class=\"setYellow\">{{obj.act14}}</th>\n              <th class=\"setYellow\">{{obj.act15}}</th>\n              <th class=\"setYellow\">{{obj.act16}}</th>\n              <th class=\"setYellow\">{{obj.act17}}</th>\n              <th class=\"setYellow\">{{obj.act18}}</th>\n              <th class=\"setYellow\">{{obj.act19}}</th>\n              <th class=\"setYellow\">{{obj.act20}}</th>\n              <th class=\"setYellow\">{{obj.act21}}</th>\n              <th class=\"setYellow\">{{obj.act22}}</th>\n              <th class=\"setYellow\">{{obj.act23}}</th>\n              <th class=\"setYellow\">{{obj.act0}}</th>\n              <th class=\"setYellow\">{{obj.act1}}</th>\n              <th class=\"setYellow\">{{obj.act2}}</th>\n              <th class=\"setYellow\">{{obj.act3}}</th>\n              <th class=\"setYellow\">{{obj.act4}}</th>\n              <th class=\"setYellow\">{{obj.act5}}</th>\n              <th class=\"setYellow\">{{obj.act6}}</th>\n              <th class=\"setYellow\">{{obj.actTtl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal7}}</th>\n              <th>{{obj.bal8}}</th>\n              <th>{{obj.bal9}}</th>\n              <th>{{obj.bal10}}</th>\n              <th>{{obj.bal11}}</th>\n              <th>{{obj.bal12}}</th>\n              <th>{{obj.bal13}}</th>\n              <th>{{obj.bal14}}</th>\n              <th>{{obj.bal15}}</th>\n              <th>{{obj.bal16}}</th>\n              <th>{{obj.bal17}}</th>\n              <th>{{obj.bal18}}</th>\n              <th>{{obj.bal19}}</th>\n              <th>{{obj.bal20}}</th>\n              <th>{{obj.bal21}}</th>\n              <th>{{obj.bal22}}</th>\n              <th>{{obj.bal23}}</th>\n              <th>{{obj.bal0}}</th>\n              <th>{{obj.bal1}}</th>\n              <th>{{obj.bal2}}</th>\n              <th>{{obj.bal3}}</th>\n              <th>{{obj.bal4}}</th>\n              <th>{{obj.bal5}}</th>\n              <th>{{obj.bal6}}</th>\n              <th>{{obj.balTtl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n          <tr>\n            <th colspan=\"6\" class=\"setHeader\">{{module_factory2}} In</th>\n            <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n          </tr>\n          <tr>\n            <th class=\"setHeader\">Line</th>\n            <th class=\"setHeader\">ProName</th>\n            <th class=\"setHeader\">FGCode</th>\n            <th class=\"setHeader\">Cell</th>\n            <th class=\"setHeader\">线体产能</th>\n            <th class=\"setHeader\">Oper</th>\n            <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n          </tr>\n          <tr>\n            <th colspan=\"4\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n            <th rowspan=\"3\" class=\"setGreen\">{{ttlAssyChanNeng}}</th>\n            <th class=\"setGreen\">Plan</th>\n            <th *ngFor=\"let qty of assyInTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n            <th rowspan=\"3\"></th>\n          </tr>\n          <tr>\n            <th class=\"setYellow\">Act</th>\n            <th *ngFor=\"let qty of assyInTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n          </tr>\n          <tr>\n            <th>Bal</th>\n            <th *ngFor=\"let qty of assyInTtlBal\">{{qty | zeroConvert}}</th>\n          </tr>\n          <ng-container *ngFor=\"let obj of dataAssyIn; let i = index\">\n            <tr>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.line}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.productname}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">{{obj.fgcode}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.model_type}}\n              </th>\n              <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                {{obj.channeng}}\n              </th>\n              <th class=\"setGreen\">Plan</th>\n              <th class=\"setGreen\">{{obj.plan7}}</th>\n              <th class=\"setGreen\">{{obj.plan8}}</th>\n              <th class=\"setGreen\">{{obj.plan9}}</th>\n              <th class=\"setGreen\">{{obj.plan10}}</th>\n              <th class=\"setGreen\">{{obj.plan11}}</th>\n              <th class=\"setGreen\">{{obj.plan12}}</th>\n              <th class=\"setGreen\">{{obj.plan13}}</th>\n              <th class=\"setGreen\">{{obj.plan14}}</th>\n              <th class=\"setGreen\">{{obj.plan15}}</th>\n              <th class=\"setGreen\">{{obj.plan16}}</th>\n              <th class=\"setGreen\">{{obj.plan17}}</th>\n              <th class=\"setGreen\">{{obj.plan18}}</th>\n              <th class=\"setGreen\">{{obj.plan19}}</th>\n              <th class=\"setGreen\">{{obj.plan20}}</th>\n              <th class=\"setGreen\">{{obj.plan21}}</th>\n              <th class=\"setGreen\">{{obj.plan22}}</th>\n              <th class=\"setGreen\">{{obj.plan23}}</th>\n              <th class=\"setGreen\">{{obj.plan0}}</th>\n              <th class=\"setGreen\">{{obj.plan1}}</th>\n              <th class=\"setGreen\">{{obj.plan2}}</th>\n              <th class=\"setGreen\">{{obj.plan3}}</th>\n              <th class=\"setGreen\">{{obj.plan4}}</th>\n              <th class=\"setGreen\">{{obj.plan5}}</th>\n              <th class=\"setGreen\">{{obj.plan6}}</th>\n              <th class=\"setGreen\">{{obj.planTtl | zeroConvert}}</th>\n              <th rowspan=\"3\">{{obj.remark}}</th>\n            </tr>\n            <tr>\n              <th class=\"setYellow\">Act</th>\n              <th class=\"setYellow\">{{obj.act7}}</th>\n              <th class=\"setYellow\">{{obj.act8}}</th>\n              <th class=\"setYellow\">{{obj.act9}}</th>\n              <th class=\"setYellow\">{{obj.act10}}</th>\n              <th class=\"setYellow\">{{obj.act11}}</th>\n              <th class=\"setYellow\">{{obj.act12}}</th>\n              <th class=\"setYellow\">{{obj.act13}}</th>\n              <th class=\"setYellow\">{{obj.act14}}</th>\n              <th class=\"setYellow\">{{obj.act15}}</th>\n              <th class=\"setYellow\">{{obj.act16}}</th>\n              <th class=\"setYellow\">{{obj.act17}}</th>\n              <th class=\"setYellow\">{{obj.act18}}</th>\n              <th class=\"setYellow\">{{obj.act19}}</th>\n              <th class=\"setYellow\">{{obj.act20}}</th>\n              <th class=\"setYellow\">{{obj.act21}}</th>\n              <th class=\"setYellow\">{{obj.act22}}</th>\n              <th class=\"setYellow\">{{obj.act23}}</th>\n              <th class=\"setYellow\">{{obj.act0}}</th>\n              <th class=\"setYellow\">{{obj.act1}}</th>\n              <th class=\"setYellow\">{{obj.act2}}</th>\n              <th class=\"setYellow\">{{obj.act3}}</th>\n              <th class=\"setYellow\">{{obj.act4}}</th>\n              <th class=\"setYellow\">{{obj.act5}}</th>\n              <th class=\"setYellow\">{{obj.act6}}</th>\n              <th class=\"setYellow\">{{obj.actTtl | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th>{{obj.bal7}}</th>\n              <th>{{obj.bal8}}</th>\n              <th>{{obj.bal9}}</th>\n              <th>{{obj.bal10}}</th>\n              <th>{{obj.bal11}}</th>\n              <th>{{obj.bal12}}</th>\n              <th>{{obj.bal13}}</th>\n              <th>{{obj.bal14}}</th>\n              <th>{{obj.bal15}}</th>\n              <th>{{obj.bal16}}</th>\n              <th>{{obj.bal17}}</th>\n              <th>{{obj.bal18}}</th>\n              <th>{{obj.bal19}}</th>\n              <th>{{obj.bal20}}</th>\n              <th>{{obj.bal21}}</th>\n              <th>{{obj.bal22}}</th>\n              <th>{{obj.bal23}}</th>\n              <th>{{obj.bal0}}</th>\n              <th>{{obj.bal1}}</th>\n              <th>{{obj.bal2}}</th>\n              <th>{{obj.bal3}}</th>\n              <th>{{obj.bal4}}</th>\n              <th>{{obj.bal5}}</th>\n              <th>{{obj.bal6}}</th>\n              <th>{{obj.balTtl | zeroConvert}}</th>\n            </tr>\n          </ng-container>\n          <ng-container *ngIf=\"showPacking\">\n            <tr>\n              <th colspan=\"6\" class=\"setHeader\">Packing</th>\n              <th colspan=\"26\" class=\"setHeader\">Monitor By Hour-{{nowDay}}</th>\n            </tr>\n            <tr>\n              <th class=\"setHeader\">Line</th>\n              <th class=\"setHeader\">ProName</th>\n              <th class=\"setHeader\">FGCode</th>\n              <th class=\"setHeader\">Cell</th>\n              <th class=\"setHeader\">线体产能</th>\n              <th class=\"setHeader\">Oper</th>\n              <th *ngFor=\"let hour of timeArray\" class=\"setHeader\">{{hour}}</th>\n            </tr>\n            <tr>\n              <th colspan=\"4\" rowspan=\"3\" class=\"setGreen\">TTL</th>\n              <th rowspan=\"3\" class=\"setGreen\">{{ttlPackingChanNeng}}</th>\n              <th class=\"setGreen\">Plan</th>\n              <th *ngFor=\"let qty of PackingInTtlPlan\" class=\"setGreen\">{{qty | zeroConvert}}</th>\n              <th rowspan=\"3\"></th>\n            </tr>\n            <tr>\n              <th class=\"setYellow\">Act</th>\n              <th *ngFor=\"let qty of PackingInTtlAct\" class=\"setYellow\">{{qty | zeroConvert}}</th>\n            </tr>\n            <tr>\n              <th>Bal</th>\n              <th *ngFor=\"let qty of PackingInTtlBal\">{{qty | zeroConvert}}</th>\n            </tr>\n            <ng-container *ngFor=\"let obj of dataPacking; let i = index\">\n              <tr>\n                <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                  {{obj.line}}\n                </th>\n                <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                  {{obj.productname}}\n                </th>\n                <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                  {{obj.fgcode}}\n                </th>\n                <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                  {{obj.model_type}}\n                </th>\n                <th rowspan=\"3\" [ngClass]=\"{setGreen: (i % 2) == 1,setYellow:(i % 2) == 0}\">\n                  {{obj.channeng}}\n                </th>\n                <th class=\"setGreen\">Plan</th>\n                <th class=\"setGreen\">{{obj.plan7}}</th>\n                <th class=\"setGreen\">{{obj.plan8}}</th>\n                <th class=\"setGreen\">{{obj.plan9}}</th>\n                <th class=\"setGreen\">{{obj.plan10}}</th>\n                <th class=\"setGreen\">{{obj.plan11}}</th>\n                <th class=\"setGreen\">{{obj.plan12}}</th>\n                <th class=\"setGreen\">{{obj.plan13}}</th>\n                <th class=\"setGreen\">{{obj.plan14}}</th>\n                <th class=\"setGreen\">{{obj.plan15}}</th>\n                <th class=\"setGreen\">{{obj.plan16}}</th>\n                <th class=\"setGreen\">{{obj.plan17}}</th>\n                <th class=\"setGreen\">{{obj.plan18}}</th>\n                <th class=\"setGreen\">{{obj.plan19}}</th>\n                <th class=\"setGreen\">{{obj.plan20}}</th>\n                <th class=\"setGreen\">{{obj.plan21}}</th>\n                <th class=\"setGreen\">{{obj.plan22}}</th>\n                <th class=\"setGreen\">{{obj.plan23}}</th>\n                <th class=\"setGreen\">{{obj.plan0}}</th>\n                <th class=\"setGreen\">{{obj.plan1}}</th>\n                <th class=\"setGreen\">{{obj.plan2}}</th>\n                <th class=\"setGreen\">{{obj.plan3}}</th>\n                <th class=\"setGreen\">{{obj.plan4}}</th>\n                <th class=\"setGreen\">{{obj.plan5}}</th>\n                <th class=\"setGreen\">{{obj.plan6}}</th>\n                <th class=\"setGreen\">{{obj.planTtl | zeroConvert}}</th>\n                <th rowspan=\"3\">{{obj.remark}}</th>\n              </tr>\n              <tr>\n                <th class=\"setYellow\">Act</th>\n                <th class=\"setYellow\">{{obj.act7}}</th>\n                <th class=\"setYellow\">{{obj.act8}}</th>\n                <th class=\"setYellow\">{{obj.act9}}</th>\n                <th class=\"setYellow\">{{obj.act10}}</th>\n                <th class=\"setYellow\">{{obj.act11}}</th>\n                <th class=\"setYellow\">{{obj.act12}}</th>\n                <th class=\"setYellow\">{{obj.act13}}</th>\n                <th class=\"setYellow\">{{obj.act14}}</th>\n                <th class=\"setYellow\">{{obj.act15}}</th>\n                <th class=\"setYellow\">{{obj.act16}}</th>\n                <th class=\"setYellow\">{{obj.act17}}</th>\n                <th class=\"setYellow\">{{obj.act18}}</th>\n                <th class=\"setYellow\">{{obj.act19}}</th>\n                <th class=\"setYellow\">{{obj.act20}}</th>\n                <th class=\"setYellow\">{{obj.act21}}</th>\n                <th class=\"setYellow\">{{obj.act22}}</th>\n                <th class=\"setYellow\">{{obj.act23}}</th>\n                <th class=\"setYellow\">{{obj.act0}}</th>\n                <th class=\"setYellow\">{{obj.act1}}</th>\n                <th class=\"setYellow\">{{obj.act2}}</th>\n                <th class=\"setYellow\">{{obj.act3}}</th>\n                <th class=\"setYellow\">{{obj.act4}}</th>\n                <th class=\"setYellow\">{{obj.act5}}</th>\n                <th class=\"setYellow\">{{obj.act6}}</th>\n                <th class=\"setYellow\">{{obj.actTtl | zeroConvert}}</th>\n              </tr>\n              <tr>\n                <th>Bal</th>\n                <th>{{obj.bal7}}</th>\n                <th>{{obj.bal8}}</th>\n                <th>{{obj.bal9}}</th>\n                <th>{{obj.bal10}}</th>\n                <th>{{obj.bal11}}</th>\n                <th>{{obj.bal12}}</th>\n                <th>{{obj.bal13}}</th>\n                <th>{{obj.bal14}}</th>\n                <th>{{obj.bal15}}</th>\n                <th>{{obj.bal16}}</th>\n                <th>{{obj.bal17}}</th>\n                <th>{{obj.bal18}}</th>\n                <th>{{obj.bal19}}</th>\n                <th>{{obj.bal20}}</th>\n                <th>{{obj.bal21}}</th>\n                <th>{{obj.bal22}}</th>\n                <th>{{obj.bal23}}</th>\n                <th>{{obj.bal0}}</th>\n                <th>{{obj.bal1}}</th>\n                <th>{{obj.bal2}}</th>\n                <th>{{obj.bal3}}</th>\n                <th>{{obj.bal4}}</th>\n                <th>{{obj.bal5}}</th>\n                <th>{{obj.bal6}}</th>\n                <th>{{obj.balTtl | zeroConvert}}</th>\n              </tr>\n            </ng-container>\n          </ng-container>\n        </ng-template>\n      </p-table>\n    </div>\n  </p-panel>\n</div>"

/***/ }),

/***/ "./src/app/fixreportforms/gsproduct/gsproduct.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GsproductComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_productionData__ = __webpack_require__("./src/app/fixreportforms/gsproduct/model/productionData.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_productionDataMod__ = __webpack_require__("./src/app/fixreportforms/gsproduct/model/productionDataMod.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_productionCellIn__ = __webpack_require__("./src/app/fixreportforms/gsproduct/model/productionCellIn.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_productionCellCut__ = __webpack_require__("./src/app/fixreportforms/gsproduct/model/productionCellCut.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var GsproductComponent = /** @class */ (function () {
    function GsproductComponent(apiService) {
        this.apiService = apiService;
        // array和cf对象数组
        this.dataArrayIn = [];
        this.dataArrayOut = [];
        // module每一行数据对象的数组
        this.dataMdlIn = [];
        this.dataAssyIn = [];
        this.dataPacking = [];
        // cell不分线别的每一行数据对象数组
        this.dataCellIn = [];
        this.dataCellAssyIn = [];
        this.dataCell120K = [];
        // cell分线别的每一行数据对象数组
        this.dataCutIn = [];
        this.dataCellOut = [];
        this.data2CutIn = [];
        this.data2CutOut = [];
        this.backupRes = [];
        this.ifQuery = false; // 判断是否执行过query方法
        this.line = null;
        this.cell = null;
        this.msgs = [];
    }
    GsproductComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.timeArray = ['07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19',
            '20', '21', '22', '23', '00', '01', '02', '03', '04', '05', '06', 'TTL', 'Remark'];
        this.department = [
            { label: 'ARRAY', value: 'array' },
            { label: 'CF', value: 'cf' },
            { label: 'CELL', value: 'cell' },
            { label: 'M1', value: 'm1' },
            { label: 'M2', value: 'm2' }
        ];
        this.setOption();
        this.showArrayCF = true;
        this.showM1M2 = false;
        this.showCell = false;
        this.apiService.get('/sc/productioninfo', this.option).subscribe(function (res) {
            _this.factory1 = 'Array';
            _this.setTtl(res);
            _this.setDataArray(res);
        });
    };
    GsproductComponent.prototype.setOption = function () {
        this.nowTime = new Date();
        if (this.nowTime.getHours() < 7) {
            this.nowDay = new Date(this.nowTime.getTime() - 24 * 60 * 60 * 1000).toLocaleDateString();
            this.option = {
                params: {
                    dayControl: '-1'
                }
            };
        }
        else {
            this.nowDay = this.nowTime.toLocaleDateString();
            this.option = {
                params: {
                    dayControl: ''
                }
            };
        }
    };
    GsproductComponent.prototype.setOptionQ = function () {
        var year = this.dateName.getFullYear().toString();
        var month;
        var day;
        if (this.dateName.getMonth() < 9) {
            month = '0' + (this.dateName.getMonth() + 1);
        }
        else {
            month = (this.dateName.getMonth() + 1).toString();
        }
        if (this.dateName.getDate() < 10) {
            day = '0' + this.dateName.getDate();
        }
        else {
            day = this.dateName.getDate().toString();
        }
        this.option = {
            params: {
                dateValue: year + month + day
            }
        };
    };
    GsproductComponent.prototype.setTimeData = function (obj, productionData) {
        switch (obj.hour) {
            case '07':
                if (obj.planqty !== null) {
                    productionData.plan7 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act7 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal7 = obj.balqty.toString();
                }
                break;
            case '08':
                if (obj.planqty !== null) {
                    productionData.plan8 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act8 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal8 = obj.balqty.toString();
                }
                break;
            case '09':
                if (obj.planqty !== null) {
                    productionData.plan9 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act9 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal9 = obj.balqty.toString();
                }
                break;
            case '10':
                if (obj.planqty !== null) {
                    productionData.plan10 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act10 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal10 = obj.balqty.toString();
                }
                break;
            case '11':
                if (obj.planqty !== null) {
                    productionData.plan11 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act11 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal11 = obj.balqty.toString();
                }
                break;
            case '12':
                if (obj.planqty !== null) {
                    productionData.plan12 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act12 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal12 = obj.balqty.toString();
                }
                break;
            case '13':
                if (obj.planqty !== null) {
                    productionData.plan13 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act13 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal13 = obj.balqty.toString();
                }
                break;
            case '14':
                if (obj.planqty !== null) {
                    productionData.plan14 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act14 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal14 = obj.balqty.toString();
                }
                break;
            case '15':
                if (obj.planqty !== null) {
                    productionData.plan15 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act15 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal15 = obj.balqty.toString();
                }
                break;
            case '16':
                if (obj.planqty !== null) {
                    productionData.plan16 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act16 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal16 = obj.balqty.toString();
                }
                break;
            case '17':
                if (obj.planqty !== null) {
                    productionData.plan17 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act17 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal17 = obj.balqty.toString();
                }
                break;
            case '18':
                if (obj.planqty !== null) {
                    productionData.plan18 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act18 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal18 = obj.balqty.toString();
                }
                break;
            case '19':
                if (obj.planqty !== null) {
                    productionData.plan19 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act19 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal19 = obj.balqty.toString();
                }
                break;
            case '20':
                if (obj.planqty !== null) {
                    productionData.plan20 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act20 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal20 = obj.balqty.toString();
                }
                break;
            case '21':
                if (obj.planqty !== null) {
                    productionData.plan21 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act21 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal21 = obj.balqty.toString();
                }
                break;
            case '22':
                if (obj.planqty !== null) {
                    productionData.plan22 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act22 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal22 = obj.balqty.toString();
                }
                break;
            case '23':
                if (obj.planqty !== null) {
                    productionData.plan23 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act23 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal23 = obj.balqty.toString();
                }
                break;
            case '00':
                if (obj.planqty !== null) {
                    productionData.plan0 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act0 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal0 = obj.balqty.toString();
                }
                break;
            case '01':
                if (obj.planqty !== null) {
                    productionData.plan1 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act1 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal1 = obj.balqty.toString();
                }
                break;
            case '02':
                if (obj.planqty !== null) {
                    productionData.plan2 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act2 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal2 = obj.balqty.toString();
                }
                break;
            case '03':
                if (obj.planqty !== null) {
                    productionData.plan3 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act3 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal3 = obj.balqty.toString();
                }
                break;
            case '04':
                if (obj.planqty !== null) {
                    productionData.plan4 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act4 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal4 = obj.balqty.toString();
                }
                break;
            case '05':
                if (obj.planqty !== null) {
                    productionData.plan5 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act5 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal5 = obj.balqty.toString();
                }
                break;
            case '06':
                if (obj.planqty !== null) {
                    productionData.plan6 = obj.planqty.toString();
                }
                if (obj.qty !== null) {
                    productionData.act6 = obj.qty.toString();
                }
                if (obj.balqty !== null) {
                    productionData.bal6 = obj.balqty.toString();
                }
                break;
        }
    };
    GsproductComponent.prototype.setIimeDataXianTi = function (obj, propPlan, propBal) {
        switch (obj.hour) {
            case '07':
                if (obj.planqty !== null) {
                    propPlan['7'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['7'] = obj.balqty.toString();
                }
                break;
            case '08':
                if (obj.planqty !== null) {
                    propPlan['8'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['8'] = obj.balqty.toString();
                }
                break;
            case '09':
                if (obj.planqty !== null) {
                    propPlan['9'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['9'] = obj.balqty.toString();
                }
                break;
            case '10':
                if (obj.planqty !== null) {
                    propPlan['10'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['10'] = obj.balqty.toString();
                }
                break;
            case '11':
                if (obj.planqty !== null) {
                    propPlan['11'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['11'] = obj.balqty.toString();
                }
                break;
            case '12':
                if (obj.planqty !== null) {
                    propPlan['12'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['12'] = obj.balqty.toString();
                }
                break;
            case '13':
                if (obj.planqty !== null) {
                    propPlan['13'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['13'] = obj.balqty.toString();
                }
                break;
            case '14':
                if (obj.planqty !== null) {
                    propPlan['14'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['14'] = obj.balqty.toString();
                }
                break;
            case '15':
                if (obj.planqty !== null) {
                    propPlan['15'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['15'] = obj.balqty.toString();
                }
                break;
            case '16':
                if (obj.planqty !== null) {
                    propPlan['16'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['16'] = obj.balqty.toString();
                }
                break;
            case '17':
                if (obj.planqty !== null) {
                    propPlan['17'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['17'] = obj.balqty.toString();
                }
                break;
            case '18':
                if (obj.planqty !== null) {
                    propPlan['18'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['18'] = obj.balqty.toString();
                }
                break;
            case '19':
                if (obj.planqty !== null) {
                    propPlan['19'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['19'] = obj.balqty.toString();
                }
                break;
            case '20':
                if (obj.planqty !== null) {
                    propPlan['20'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['20'] = obj.balqty.toString();
                }
                break;
            case '21':
                if (obj.planqty !== null) {
                    propPlan['21'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['21'] = obj.balqty.toString();
                }
                break;
            case '22':
                if (obj.planqty !== null) {
                    propPlan['22'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['22'] = obj.balqty.toString();
                }
                break;
            case '23':
                if (obj.planqty !== null) {
                    propPlan['23'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['23'] = obj.balqty.toString();
                }
                break;
            case '00':
                if (obj.planqty !== null) {
                    propPlan['0'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['0'] = obj.balqty.toString();
                }
                break;
            case '01':
                if (obj.planqty !== null) {
                    propPlan['1'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['1'] = obj.balqty.toString();
                }
                break;
            case '02':
                if (obj.planqty !== null) {
                    propPlan['2'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['2'] = obj.balqty.toString();
                }
                break;
            case '03':
                if (obj.planqty !== null) {
                    propPlan['3'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['3'] = obj.balqty.toString();
                }
                break;
            case '04':
                if (obj.planqty !== null) {
                    propPlan['4'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['4'] = obj.balqty.toString();
                }
                break;
            case '05':
                if (obj.planqty !== null) {
                    propPlan['5'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['5'] = obj.balqty.toString();
                }
                break;
            case '06':
                if (obj.planqty !== null) {
                    propPlan['6'] = obj.planqty.toString();
                }
                if (obj.balqty !== null) {
                    propBal['6'] = obj.balqty.toString();
                }
                break;
        }
    };
    GsproductComponent.prototype.getSum = function (nowHour, productionData) {
        if (nowHour >= 7 || nowHour <= 6) {
            if (productionData.plan7 !== '-') {
                productionData.planTtl += parseInt(productionData.plan7, 10);
            }
            if (nowHour >= 8 || nowHour <= 6) {
                if (productionData.plan8 !== '-') {
                    productionData.planTtl += parseInt(productionData.plan8, 10);
                }
                if (nowHour >= 9 || nowHour <= 6) {
                    if (productionData.plan9 !== '-') {
                        productionData.planTtl += parseInt(productionData.plan9, 10);
                    }
                    if (nowHour >= 10 || nowHour <= 6) {
                        if (productionData.plan10 !== '-') {
                            productionData.planTtl += parseInt(productionData.plan10, 10);
                        }
                        if (nowHour >= 11 || nowHour <= 6) {
                            if (productionData.plan11 !== '-') {
                                productionData.planTtl += parseInt(productionData.plan11, 10);
                            }
                            if (nowHour >= 12 || nowHour <= 6) {
                                if (productionData.plan12 !== '-') {
                                    productionData.planTtl += parseInt(productionData.plan12, 10);
                                }
                                if (nowHour >= 13 || nowHour <= 6) {
                                    if (productionData.plan13 !== '-') {
                                        productionData.planTtl += parseInt(productionData.plan13, 10);
                                    }
                                    if (nowHour >= 14 || nowHour <= 6) {
                                        if (productionData.plan14 !== '-') {
                                            productionData.planTtl += parseInt(productionData.plan14, 10);
                                        }
                                        if (nowHour >= 15 || nowHour <= 6) {
                                            if (productionData.plan15 !== '-') {
                                                productionData.planTtl += parseInt(productionData.plan15, 10);
                                            }
                                            if (nowHour >= 16 || nowHour <= 6) {
                                                if (productionData.plan16 !== '-') {
                                                    productionData.planTtl += parseInt(productionData.plan16, 10);
                                                }
                                                if (nowHour >= 17 || nowHour <= 6) {
                                                    if (productionData.plan17 !== '-') {
                                                        productionData.planTtl += parseInt(productionData.plan17, 10);
                                                    }
                                                    if (nowHour >= 18 || nowHour <= 6) {
                                                        if (productionData.plan18 !== '-') {
                                                            productionData.planTtl += parseInt(productionData.plan18, 10);
                                                        }
                                                        if (nowHour >= 19 || nowHour <= 6) {
                                                            if (productionData.plan19 !== '-') {
                                                                productionData.planTtl += parseInt(productionData.plan19, 10);
                                                            }
                                                            if (nowHour >= 20 || nowHour <= 6) {
                                                                if (productionData.plan20 !== '-') {
                                                                    productionData.planTtl += parseInt(productionData.plan20, 10);
                                                                }
                                                                if (nowHour >= 21 || nowHour <= 6) {
                                                                    if (productionData.plan21 !== '-') {
                                                                        productionData.planTtl += parseInt(productionData.plan21, 10);
                                                                    }
                                                                    if (nowHour >= 22 || nowHour <= 6) {
                                                                        if (productionData.plan22 !== '-') {
                                                                            productionData.planTtl += parseInt(productionData.plan22, 10);
                                                                        }
                                                                        if (nowHour >= 23 || nowHour <= 6) {
                                                                            if (productionData.plan23 !== '-') {
                                                                                productionData.planTtl += parseInt(productionData.plan23, 10);
                                                                            }
                                                                            if (nowHour >= 0 && nowHour <= 6) {
                                                                                if (productionData.plan0 !== '-') {
                                                                                    productionData.planTtl += parseInt(productionData.plan0, 10);
                                                                                }
                                                                                if (nowHour >= 1 && nowHour <= 6) {
                                                                                    if (productionData.plan1 !== '-') {
                                                                                        productionData.planTtl += parseInt(productionData.plan1, 10);
                                                                                    }
                                                                                    if (nowHour >= 2 && nowHour <= 6) {
                                                                                        if (productionData.plan2 !== '-') {
                                                                                            productionData.planTtl += parseInt(productionData.plan2, 10);
                                                                                        }
                                                                                        if (nowHour >= 3 && nowHour <= 6) {
                                                                                            if (productionData.plan3 !== '-') {
                                                                                                productionData.planTtl += parseInt(productionData.plan3, 10);
                                                                                            }
                                                                                            if (nowHour >= 4 && nowHour <= 6) {
                                                                                                if (productionData.plan4 !== '-') {
                                                                                                    productionData.planTtl += parseInt(productionData.plan4, 10);
                                                                                                }
                                                                                                if (nowHour >= 5 && nowHour <= 6) {
                                                                                                    if (productionData.plan5 !== '-') {
                                                                                                        productionData.planTtl += parseInt(productionData.plan5, 10);
                                                                                                    }
                                                                                                    if (nowHour === 6) {
                                                                                                        if (productionData.plan6 !== '-') {
                                                                                                            productionData.planTtl += parseInt(productionData.plan6, 10);
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    GsproductComponent.prototype.getSumCell = function (nowHour, productionData) {
        if (nowHour >= 7 || nowHour <= 6) {
            if (productionData['7'] !== '-') {
                productionData.ttl += parseInt(productionData['7'], 10);
            }
            if (nowHour >= 8 || nowHour <= 6) {
                if (productionData['8'] !== '-') {
                    productionData.ttl += parseInt(productionData['8'], 10);
                }
                if (nowHour >= 9 || nowHour <= 6) {
                    if (productionData['9'] !== '-') {
                        productionData.ttl += parseInt(productionData['9'], 10);
                    }
                    if (nowHour >= 10 || nowHour <= 6) {
                        if (productionData['10'] !== '-') {
                            productionData.ttl += parseInt(productionData['10'], 10);
                        }
                        if (nowHour >= 11 || nowHour <= 6) {
                            if (productionData['11'] !== '-') {
                                productionData.ttl += parseInt(productionData['11'], 10);
                            }
                            if (nowHour >= 12 || nowHour <= 6) {
                                if (productionData['12'] !== '-') {
                                    productionData.ttl += parseInt(productionData['12'], 10);
                                }
                                if (nowHour >= 13 || nowHour <= 6) {
                                    if (productionData['13'] !== '-') {
                                        productionData.ttl += parseInt(productionData['13'], 10);
                                    }
                                    if (nowHour >= 14 || nowHour <= 6) {
                                        if (productionData['14'] !== '-') {
                                            productionData.ttl += parseInt(productionData['14'], 10);
                                        }
                                        if (nowHour >= 15 || nowHour <= 6) {
                                            if (productionData['15'] !== '-') {
                                                productionData.ttl += parseInt(productionData['15'], 10);
                                            }
                                            if (nowHour >= 16 || nowHour <= 6) {
                                                if (productionData['16'] !== '-') {
                                                    productionData.ttl += parseInt(productionData['16'], 10);
                                                }
                                                if (nowHour >= 17 || nowHour <= 6) {
                                                    if (productionData['17'] !== '-') {
                                                        productionData.ttl += parseInt(productionData['17'], 10);
                                                    }
                                                    if (nowHour >= 18 || nowHour <= 6) {
                                                        if (productionData['18'] !== '-') {
                                                            productionData.ttl += parseInt(productionData['18'], 10);
                                                        }
                                                        if (nowHour >= 19 || nowHour <= 6) {
                                                            if (productionData['19'] !== '-') {
                                                                productionData.ttl += parseInt(productionData['19'], 10);
                                                            }
                                                            if (nowHour >= 20 || nowHour <= 6) {
                                                                if (productionData['20'] !== '-') {
                                                                    productionData.ttl += parseInt(productionData['20'], 10);
                                                                }
                                                                if (nowHour >= 21 || nowHour <= 6) {
                                                                    if (productionData['21'] !== '-') {
                                                                        productionData.ttl += parseInt(productionData['21'], 10);
                                                                    }
                                                                    if (nowHour >= 22 || nowHour <= 6) {
                                                                        if (productionData['22'] !== '-') {
                                                                            productionData.ttl += parseInt(productionData['22'], 10);
                                                                        }
                                                                        if (nowHour >= 23 || nowHour <= 6) {
                                                                            if (productionData['23'] !== '-') {
                                                                                productionData.ttl += parseInt(productionData['23'], 10);
                                                                            }
                                                                            if (nowHour >= 0 && nowHour <= 6) {
                                                                                if (productionData['0'] !== '-') {
                                                                                    productionData.ttl += parseInt(productionData['0'], 10);
                                                                                }
                                                                                if (nowHour >= 1 && nowHour <= 6) {
                                                                                    if (productionData['1'] !== '-') {
                                                                                        productionData.ttl += parseInt(productionData['1'], 10);
                                                                                    }
                                                                                    if (nowHour >= 2 && nowHour <= 6) {
                                                                                        if (productionData['2'] !== '-') {
                                                                                            productionData.ttl += parseInt(productionData['2'], 10);
                                                                                        }
                                                                                        if (nowHour >= 3 && nowHour <= 6) {
                                                                                            if (productionData['3'] !== '-') {
                                                                                                productionData.ttl += parseInt(productionData['3'], 10);
                                                                                            }
                                                                                            if (nowHour >= 4 && nowHour <= 6) {
                                                                                                if (productionData['4'] !== '-') {
                                                                                                    productionData.ttl += parseInt(productionData['4'], 10);
                                                                                                }
                                                                                                if (nowHour >= 5 && nowHour <= 6) {
                                                                                                    if (productionData['5'] !== '-') {
                                                                                                        productionData.ttl += parseInt(productionData['5'], 10);
                                                                                                    }
                                                                                                    if (nowHour === 6) {
                                                                                                        if (productionData['6'] !== '-') {
                                                                                                            productionData.ttl += parseInt(productionData['6'], 10);
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    GsproductComponent.prototype.getSumAll = function (productionData) {
        if (productionData.plan7 !== '-') {
            productionData.planTtl += parseInt(productionData.plan7, 10);
        }
        if (productionData.plan8 !== '-') {
            productionData.planTtl += parseInt(productionData.plan8, 10);
        }
        if (productionData.plan9 !== '-') {
            productionData.planTtl += parseInt(productionData.plan9, 10);
        }
        if (productionData.plan10 !== '-') {
            productionData.planTtl += parseInt(productionData.plan10, 10);
        }
        if (productionData.plan11 !== '-') {
            productionData.planTtl += parseInt(productionData.plan11, 10);
        }
        if (productionData.plan12 !== '-') {
            productionData.planTtl += parseInt(productionData.plan12, 10);
        }
        if (productionData.plan13 !== '-') {
            productionData.planTtl += parseInt(productionData.plan13, 10);
        }
        if (productionData.plan14 !== '-') {
            productionData.planTtl += parseInt(productionData.plan14, 10);
        }
        if (productionData.plan15 !== '-') {
            productionData.planTtl += parseInt(productionData.plan15, 10);
        }
        if (productionData.plan16 !== '-') {
            productionData.planTtl += parseInt(productionData.plan16, 10);
        }
        if (productionData.plan17 !== '-') {
            productionData.planTtl += parseInt(productionData.plan17, 10);
        }
        if (productionData.plan18 !== '-') {
            productionData.planTtl += parseInt(productionData.plan18, 10);
        }
        if (productionData.plan19 !== '-') {
            productionData.planTtl += parseInt(productionData.plan19, 10);
        }
        if (productionData.plan20 !== '-') {
            productionData.planTtl += parseInt(productionData.plan20, 10);
        }
        if (productionData.plan21 !== '-') {
            productionData.planTtl += parseInt(productionData.plan21, 10);
        }
        if (productionData.plan22 !== '-') {
            productionData.planTtl += parseInt(productionData.plan22, 10);
        }
        if (productionData.plan23 !== '-') {
            productionData.planTtl += parseInt(productionData.plan23, 10);
        }
        if (productionData.plan0 !== '-') {
            productionData.planTtl += parseInt(productionData.plan0, 10);
        }
        if (productionData.plan1 !== '-') {
            productionData.planTtl += parseInt(productionData.plan1, 10);
        }
        if (productionData.plan2 !== '-') {
            productionData.planTtl += parseInt(productionData.plan2, 10);
        }
        if (productionData.plan3 !== '-') {
            productionData.planTtl += parseInt(productionData.plan3, 10);
        }
        if (productionData.plan4 !== '-') {
            productionData.planTtl += parseInt(productionData.plan4, 10);
        }
        if (productionData.plan5 !== '-') {
            productionData.planTtl += parseInt(productionData.plan5, 10);
        }
        if (productionData.plan6 !== '-') {
            productionData.planTtl += parseInt(productionData.plan6, 10);
        }
    };
    GsproductComponent.prototype.getSumCellAll = function (productionData) {
        if (productionData['7'] !== '-') {
            productionData.ttl += parseInt(productionData['7'], 10);
        }
        if (productionData['8'] !== '-') {
            productionData.ttl += parseInt(productionData['8'], 10);
        }
        if (productionData['9'] !== '-') {
            productionData.ttl += parseInt(productionData['9'], 10);
        }
        if (productionData['10'] !== '-') {
            productionData.ttl += parseInt(productionData['10'], 10);
        }
        if (productionData['11'] !== '-') {
            productionData.ttl += parseInt(productionData['11'], 10);
        }
        if (productionData['12'] !== '-') {
            productionData.ttl += parseInt(productionData['12'], 10);
        }
        if (productionData['13'] !== '-') {
            productionData.ttl += parseInt(productionData['13'], 10);
        }
        if (productionData['14'] !== '-') {
            productionData.ttl += parseInt(productionData['14'], 10);
        }
        if (productionData['15'] !== '-') {
            productionData.ttl += parseInt(productionData['15'], 10);
        }
        if (productionData['16'] !== '-') {
            productionData.ttl += parseInt(productionData['16'], 10);
        }
        if (productionData['17'] !== '-') {
            productionData.ttl += parseInt(productionData['17'], 10);
        }
        if (productionData['18'] !== '-') {
            productionData.ttl += parseInt(productionData['18'], 10);
        }
        if (productionData['19'] !== '-') {
            productionData.ttl += parseInt(productionData['19'], 10);
        }
        if (productionData['20'] !== '-') {
            productionData.ttl += parseInt(productionData['20'], 10);
        }
        if (productionData['21'] !== '-') {
            productionData.ttl += parseInt(productionData['21'], 10);
        }
        if (productionData['22'] !== '-') {
            productionData.ttl += parseInt(productionData['22'], 10);
        }
        if (productionData['23'] !== '-') {
            productionData.ttl += parseInt(productionData['23'], 10);
        }
        if (productionData['0'] !== '-') {
            productionData.ttl += parseInt(productionData['0'], 10);
        }
        if (productionData['1'] !== '-') {
            productionData.ttl += parseInt(productionData['1'], 10);
        }
        if (productionData['2'] !== '-') {
            productionData.ttl += parseInt(productionData['2'], 10);
        }
        if (productionData['3'] !== '-') {
            productionData.ttl += parseInt(productionData['3'], 10);
        }
        if (productionData['4'] !== '-') {
            productionData.ttl += parseInt(productionData['4'], 10);
        }
        if (productionData['5'] !== '-') {
            productionData.ttl += parseInt(productionData['5'], 10);
        }
        if (productionData['6'] !== '-') {
            productionData.ttl += parseInt(productionData['6'], 10);
        }
    };
    GsproductComponent.prototype.getRowTtl = function (productionData) {
        var nowTime = new Date();
        var nowHour = nowTime.getHours();
        var nowDay = '' + nowTime.getFullYear() + nowTime.getMonth() + nowTime.getDate();
        if (!this.ifQuery) {
            this.getSum(nowHour, productionData);
        }
        else {
            var selectDay = '' + this.dateName.getFullYear() + this.dateName.getMonth() + this.dateName.getDate();
            if (nowHour >= 7) {
                if (selectDay === nowDay) {
                    this.getSum(nowHour, productionData);
                }
                else {
                    this.getSumAll(productionData);
                }
            }
            else {
                var nowTimePre = new Date(nowTime.getTime() - 24 * 60 * 60 * 1000);
                var nowDayPre = '' + nowTimePre.getFullYear() + nowTimePre.getMonth() + nowTimePre.getDate();
                if (selectDay === nowDayPre) {
                    this.getSum(nowHour, productionData);
                }
                else {
                    this.getSumAll(productionData);
                }
            }
        }
        if (productionData.act7 !== '-') {
            productionData.actTtl += parseInt(productionData.act7, 10);
        }
        if (productionData.act8 !== '-') {
            productionData.actTtl += parseInt(productionData.act8, 10);
        }
        if (productionData.act9 !== '-') {
            productionData.actTtl += parseInt(productionData.act9, 10);
        }
        if (productionData.act10 !== '-') {
            productionData.actTtl += parseInt(productionData.act10, 10);
        }
        if (productionData.act11 !== '-') {
            productionData.actTtl += parseInt(productionData.act11, 10);
        }
        if (productionData.act12 !== '-') {
            productionData.actTtl += parseInt(productionData.act12, 10);
        }
        if (productionData.act13 !== '-') {
            productionData.actTtl += parseInt(productionData.act13, 10);
        }
        if (productionData.act14 !== '-') {
            productionData.actTtl += parseInt(productionData.act14, 10);
        }
        if (productionData.act15 !== '-') {
            productionData.actTtl += parseInt(productionData.act15, 10);
        }
        if (productionData.act16 !== '-') {
            productionData.actTtl += parseInt(productionData.act16, 10);
        }
        if (productionData.act17 !== '-') {
            productionData.actTtl += parseInt(productionData.act17, 10);
        }
        if (productionData.act18 !== '-') {
            productionData.actTtl += parseInt(productionData.act18, 10);
        }
        if (productionData.act19 !== '-') {
            productionData.actTtl += parseInt(productionData.act19, 10);
        }
        if (productionData.act20 !== '-') {
            productionData.actTtl += parseInt(productionData.act20, 10);
        }
        if (productionData.act21 !== '-') {
            productionData.actTtl += parseInt(productionData.act21, 10);
        }
        if (productionData.act22 !== '-') {
            productionData.actTtl += parseInt(productionData.act22, 10);
        }
        if (productionData.act23 !== '-') {
            productionData.actTtl += parseInt(productionData.act23, 10);
        }
        if (productionData.act0 !== '-') {
            productionData.actTtl += parseInt(productionData.act0, 10);
        }
        if (productionData.act1 !== '-') {
            productionData.actTtl += parseInt(productionData.act1, 10);
        }
        if (productionData.act2 !== '-') {
            productionData.actTtl += parseInt(productionData.act2, 10);
        }
        if (productionData.act3 !== '-') {
            productionData.actTtl += parseInt(productionData.act3, 10);
        }
        if (productionData.act4 !== '-') {
            productionData.actTtl += parseInt(productionData.act4, 10);
        }
        if (productionData.act5 !== '-') {
            productionData.actTtl += parseInt(productionData.act5, 10);
        }
        if (productionData.act6 !== '-') {
            productionData.actTtl += parseInt(productionData.act6, 10);
        }
        if (productionData.bal7 !== '-') {
            productionData.balTtl += parseInt(productionData.bal7, 10);
        }
        if (productionData.bal8 !== '-') {
            productionData.balTtl += parseInt(productionData.bal8, 10);
        }
        if (productionData.bal9 !== '-') {
            productionData.balTtl += parseInt(productionData.bal9, 10);
        }
        if (productionData.bal10 !== '-') {
            productionData.balTtl += parseInt(productionData.bal10, 10);
        }
        if (productionData.bal11 !== '-') {
            productionData.balTtl += parseInt(productionData.bal11, 10);
        }
        if (productionData.bal12 !== '-') {
            productionData.balTtl += parseInt(productionData.bal12, 10);
        }
        if (productionData.bal13 !== '-') {
            productionData.balTtl += parseInt(productionData.bal13, 10);
        }
        if (productionData.bal14 !== '-') {
            productionData.balTtl += parseInt(productionData.bal14, 10);
        }
        if (productionData.bal15 !== '-') {
            productionData.balTtl += parseInt(productionData.bal15, 10);
        }
        if (productionData.bal16 !== '-') {
            productionData.balTtl += parseInt(productionData.bal16, 10);
        }
        if (productionData.bal17 !== '-') {
            productionData.balTtl += parseInt(productionData.bal17, 10);
        }
        if (productionData.bal18 !== '-') {
            productionData.balTtl += parseInt(productionData.bal18, 10);
        }
        if (productionData.bal19 !== '-') {
            productionData.balTtl += parseInt(productionData.bal19, 10);
        }
        if (productionData.bal20 !== '-') {
            productionData.balTtl += parseInt(productionData.bal20, 10);
        }
        if (productionData.bal21 !== '-') {
            productionData.balTtl += parseInt(productionData.bal21, 10);
        }
        if (productionData.bal22 !== '-') {
            productionData.balTtl += parseInt(productionData.bal22, 10);
        }
        if (productionData.bal23 !== '-') {
            productionData.balTtl += parseInt(productionData.bal23, 10);
        }
        if (productionData.bal0 !== '-') {
            productionData.balTtl += parseInt(productionData.bal0, 10);
        }
        if (productionData.bal1 !== '-') {
            productionData.balTtl += parseInt(productionData.bal1, 10);
        }
        if (productionData.bal2 !== '-') {
            productionData.balTtl += parseInt(productionData.bal2, 10);
        }
        if (productionData.bal3 !== '-') {
            productionData.balTtl += parseInt(productionData.bal3, 10);
        }
        if (productionData.bal4 !== '-') {
            productionData.balTtl += parseInt(productionData.bal4, 10);
        }
        if (productionData.bal5 !== '-') {
            productionData.balTtl += parseInt(productionData.bal5, 10);
        }
        if (productionData.bal6 !== '-') {
            productionData.balTtl += parseInt(productionData.bal6, 10);
        }
    };
    GsproductComponent.prototype.getDataPlanRowTtl = function (productionData) {
        var nowTime = new Date();
        var nowHour = nowTime.getHours();
        var nowDay = '' + nowTime.getFullYear() + nowTime.getMonth() + nowTime.getDate();
        if (!this.ifQuery) {
            this.getSumCell(nowHour, productionData);
        }
        else {
            var selectDay = '' + this.dateName.getFullYear() + this.dateName.getMonth() + this.dateName.getDate();
            if (nowHour >= 7) {
                if (selectDay === nowDay) {
                    this.getSumCell(nowHour, productionData);
                }
                else {
                    this.getSumCellAll(productionData);
                }
            }
            else {
                var nowTimePre = new Date(nowTime.getTime() - 24 * 60 * 60 * 1000);
                var nowDayPre = '' + nowTimePre.getFullYear() + nowTimePre.getMonth() + nowTimePre.getDate();
                if (selectDay === nowDayPre) {
                    this.getSumCell(nowHour, productionData);
                }
                else {
                    this.getSumCellAll(productionData);
                }
            }
        }
    };
    GsproductComponent.prototype.setDataArray = function (data) {
        this.dataArrayIn = [];
        this.dataArrayOut = [];
        var arrayIn = [];
        var arrayOut = [];
        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
            var obj = data_1[_i];
            if (obj.item.substr(-2) === 'In') {
                arrayIn.push(obj);
            }
            else {
                arrayOut.push(obj);
            }
        }
        // 为dataArrayIn赋值，根据arrayproductspecname去重，每有一个arrayproductspecname创建一个对象放进数组中
        this.setReduceDataArray(arrayIn, this.dataArrayIn);
        this.setReduceDataArray(arrayOut, this.dataArrayOut);
    };
    GsproductComponent.prototype.setDataMod = function (data) {
        this.dataMdlIn = [];
        this.dataAssyIn = [];
        this.dataPacking = [];
        var mdlIn = [];
        var assyIn = [];
        var packing = [];
        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {
            var obj = data_2[_i];
            if (obj.item === 'M1 In' || obj.item === 'M2 In COG') {
                mdlIn.push(obj);
            }
            else if (obj.item === 'M1 Assy' || obj.item === 'M2 In COF') {
                assyIn.push(obj);
            }
            else {
                packing.push(obj);
            }
        }
        this.setReducteDataMod(mdlIn, this.dataMdlIn);
        this.setReducteDataMod(assyIn, this.dataAssyIn);
        this.setReducteDataMod(packing, this.dataPacking);
    };
    GsproductComponent.prototype.setDataCell = function (data) {
        this.dataCellIn = [];
        this.dataCellAssyIn = [];
        this.dataCell120K = [];
        var cellIn = [];
        var cellAssyIn = [];
        var cell120K = [];
        for (var _i = 0, data_3 = data; _i < data_3.length; _i++) {
            var obj = data_3[_i];
            if (obj.item === 'Cell In') {
                cellIn.push(obj);
            }
            else if (obj.item === 'Cell Assy') {
                cellAssyIn.push(obj);
            }
            else if (obj.item === 'Cell 120K') {
                cell120K.push(obj);
            }
        }
        this.setReducteDataCell(cellIn, this.dataCellIn);
        this.setReducteDataCell(cellAssyIn, this.dataCellAssyIn);
        this.setReducteDataCell(cell120K, this.dataCell120K);
    };
    GsproductComponent.prototype.setDataCellChangeXianTi = function (data) {
        this.dataCutIn = [];
        this.dataCellOut = [];
        this.data2CutIn = [];
        this.data2CutOut = [];
        var cutIn = [];
        var cellOut = [];
        var cut2In = [];
        var cut2Out = [];
        for (var _i = 0, data_4 = data; _i < data_4.length; _i++) {
            var obj = data_4[_i];
            if (obj.item === 'Cell Cut') {
                cutIn.push(obj);
            }
            else if (obj.item === 'Cell Out') {
                cellOut.push(obj);
            }
            else if (obj.item === '2Cut In') {
                cut2In.push(obj);
            }
            else if (obj.item === '2Cut Out') {
                cut2Out.push(obj);
            }
        }
        this.setReducteDataCellChangeXianTi(cutIn, this.dataCutIn);
        this.setReducteDataCellChangeXianTi(cellOut, this.dataCellOut);
        this.setReducteDataCellChangeXianTi(cut2In, this.data2CutIn);
        this.setReducteDataCellChangeXianTi(cut2Out, this.data2CutOut);
    };
    GsproductComponent.prototype.getIndex24PlanActAndBal = function (act, bal, i) {
        act[24] += act[i];
        bal[24] += bal[i];
    };
    // 求array和cf的ttl的plan act 和bal 数组
    GsproductComponent.prototype.setTtl = function (data) {
        this.arrayInTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.arrayInTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.arrayInTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.arrayOutTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.arrayOutTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.arrayOutTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        for (var _i = 0, data_5 = data; _i < data_5.length; _i++) {
            var obj = data_5[_i];
            if (obj.item.substr(-2) === 'In') {
                this.getDataWithTime(obj, this.arrayInTtlPlan, this.arrayInTtlAct, this.arrayInTtlBal);
                this.arrayInTtlPlan[24] += obj.actplan;
            }
            else {
                this.getDataWithTime(obj, this.arrayOutTtlPlan, this.arrayOutTtlAct, this.arrayOutTtlBal);
                this.arrayOutTtlPlan[24] += obj.actplan;
            }
        }
        for (var index = 0; index < this.arrayInTtlAct.length - 1; index++) {
            this.arrayInTtlAct[24] += this.arrayInTtlAct[index];
            this.arrayInTtlBal[24] += this.arrayInTtlBal[index];
            this.arrayOutTtlAct[24] += this.arrayOutTtlAct[index];
            this.arrayOutTtlBal[24] += this.arrayOutTtlBal[index];
        }
    };
    GsproductComponent.prototype.setTtlMod = function (data) {
        this.mdlInTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.mdlInTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.mdlInTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.assyInTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.assyInTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.assyInTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.PackingInTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.PackingInTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.PackingInTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        for (var _i = 0, data_6 = data; _i < data_6.length; _i++) {
            var obj = data_6[_i];
            if (obj.item === 'M1 In' || obj.item === 'M2 In COG') {
                this.getDataWithTime(obj, this.mdlInTtlPlan, this.mdlInTtlAct, this.mdlInTtlBal);
                this.mdlInTtlPlan[24] += obj.actplan;
            }
            else if (obj.item === 'M1 Assy' || obj.item === 'M2 In COF') {
                this.getDataWithTime(obj, this.assyInTtlPlan, this.assyInTtlAct, this.assyInTtlBal);
                this.assyInTtlPlan[24] += obj.actplan;
            }
            else if (obj.item === 'M1 Packing') {
                this.getDataWithTime(obj, this.PackingInTtlPlan, this.PackingInTtlAct, this.PackingInTtlBal);
                this.PackingInTtlPlan[24] += obj.actplan;
            }
        }
        for (var index = 0; index < this.mdlInTtlPlan.length - 1; index++) {
            this.mdlInTtlAct[24] += this.mdlInTtlAct[index];
            this.mdlInTtlBal[24] += this.mdlInTtlBal[index];
            this.assyInTtlAct[24] += this.assyInTtlAct[index];
            this.assyInTtlBal[24] += this.assyInTtlBal[index];
            this.PackingInTtlAct[24] += this.PackingInTtlAct[index];
            this.PackingInTtlBal[24] += this.PackingInTtlBal[index];
        }
    };
    GsproductComponent.prototype.setTtlCell = function (data, time) {
        if (time === 'first') {
            this.cellInTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellInTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellInTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellAssyInTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellAssyInTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellAssyInTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cell120KTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cell120KTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cell120KTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellCutInTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellCutInTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellCutInTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellOutTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellOutTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cellOutTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cell2CutInTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cell2CutInTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cell2CutInTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cell2CutOutTtlPlan = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cell2CutOutTtlAct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            this.cell2CutOutTtlBal = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        }
        for (var _i = 0, data_7 = data; _i < data_7.length; _i++) {
            var obj = data_7[_i];
            switch (obj.item) {
                case 'Cell In':
                    this.getDataWithTime(obj, this.cellInTtlPlan, this.cellInTtlAct, this.cellInTtlBal);
                    this.cellInTtlPlan[24] += obj.actplan;
                    break;
                case 'Cell Assy':
                    this.getDataWithTime(obj, this.cellAssyInTtlPlan, this.cellAssyInTtlAct, this.cellAssyInTtlBal);
                    this.cellAssyInTtlPlan[24] += obj.actplan;
                    break;
                case 'Cell 120K':
                    this.getDataWithTime(obj, this.cell120KTtlPlan, this.cell120KTtlAct, this.cell120KTtlBal);
                    this.cell120KTtlPlan[24] += obj.actplan;
                    break;
                case 'Cell Cut':
                    this.getDataWithTime(obj, this.cellCutInTtlPlan, this.cellCutInTtlAct, this.cellCutInTtlBal);
                    this.cellCutInTtlPlan[24] += obj.actplan;
                    break;
                case 'Cell Out':
                    this.getDataWithTime(obj, this.cellOutTtlPlan, this.cellOutTtlAct, this.cellOutTtlBal);
                    this.cellOutTtlPlan[24] += obj.actplan;
                    break;
                case '2Cut In':
                    this.getDataWithTime(obj, this.cell2CutInTtlPlan, this.cell2CutInTtlAct, this.cell2CutInTtlBal);
                    this.cell2CutInTtlPlan[24] += obj.actplan;
                    break;
                case '2Cut Out':
                    this.getDataWithTime(obj, this.cell2CutOutTtlPlan, this.cell2CutOutTtlAct, this.cell2CutOutTtlBal);
                    this.cell2CutOutTtlPlan[24] += obj.actplan;
                    break;
            }
        }
        for (var index = 0; index < this.cellInTtlPlan.length - 1; index++) {
            this.getIndex24PlanActAndBal(this.cellInTtlAct, this.cellInTtlBal, index);
            this.getIndex24PlanActAndBal(this.cellAssyInTtlAct, this.cellAssyInTtlBal, index);
            this.getIndex24PlanActAndBal(this.cell120KTtlAct, this.cell120KTtlBal, index);
            this.getIndex24PlanActAndBal(this.cellCutInTtlAct, this.cellCutInTtlBal, index);
            this.getIndex24PlanActAndBal(this.cellOutTtlAct, this.cellOutTtlBal, index);
            this.getIndex24PlanActAndBal(this.cell2CutInTtlAct, this.cell2CutInTtlBal, index);
            this.getIndex24PlanActAndBal(this.cell2CutOutTtlAct, this.cell2CutOutTtlBal, index);
        }
    };
    GsproductComponent.prototype.getDataWithTime = function (obj, plan, act, bal) {
        switch (obj.hour) {
            case '07':
                plan[0] += obj.planqty;
                act[0] += obj.qty;
                bal[0] += obj.balqty;
                break;
            case '08':
                plan[1] += obj.planqty;
                act[1] += obj.qty;
                bal[1] += obj.balqty;
                break;
            case '09':
                plan[2] += obj.planqty;
                act[2] += obj.qty;
                bal[2] += obj.balqty;
                break;
            case '10':
                plan[3] += obj.planqty;
                act[3] += obj.qty;
                bal[3] += obj.balqty;
                break;
            case '11':
                plan[4] += obj.planqty;
                act[4] += obj.qty;
                bal[4] += obj.balqty;
                break;
            case '12':
                plan[5] += obj.planqty;
                act[5] += obj.qty;
                bal[5] += obj.balqty;
                break;
            case '13':
                plan[6] += obj.planqty;
                act[6] += obj.qty;
                bal[6] += obj.balqty;
                break;
            case '14':
                plan[7] += obj.planqty;
                act[7] += obj.qty;
                bal[7] += obj.balqty;
                break;
            case '15':
                plan[8] += obj.planqty;
                act[8] += obj.qty;
                bal[8] += obj.balqty;
                break;
            case '16':
                plan[9] += obj.planqty;
                act[9] += obj.qty;
                bal[9] += obj.balqty;
                break;
            case '17':
                plan[10] += obj.planqty;
                act[10] += obj.qty;
                bal[10] += obj.balqty;
                break;
            case '18':
                plan[11] += obj.planqty;
                act[11] += obj.qty;
                bal[11] += obj.balqty;
                break;
            case '19':
                plan[12] += obj.planqty;
                act[12] += obj.qty;
                bal[12] += obj.balqty;
                break;
            case '20':
                plan[13] += obj.planqty;
                act[13] += obj.qty;
                bal[13] += obj.balqty;
                break;
            case '21':
                plan[14] += obj.planqty;
                act[14] += obj.qty;
                bal[14] += obj.balqty;
                break;
            case '22':
                plan[15] += obj.planqty;
                act[15] += obj.qty;
                bal[15] += obj.balqty;
                break;
            case '23':
                plan[16] += obj.planqty;
                act[16] += obj.qty;
                bal[16] += obj.balqty;
                break;
            case '00':
                plan[17] += obj.planqty;
                act[17] += obj.qty;
                bal[17] += obj.balqty;
                break;
            case '01':
                plan[18] += obj.planqty;
                act[18] += obj.qty;
                bal[18] += obj.balqty;
                break;
            case '02':
                plan[19] += obj.planqty;
                act[19] += obj.qty;
                bal[19] += obj.balqty;
                break;
            case '03':
                plan[20] += obj.planqty;
                act[20] += obj.qty;
                bal[20] += obj.balqty;
                break;
            case '04':
                plan[21] += obj.planqty;
                act[21] += obj.qty;
                bal[21] += obj.balqty;
                break;
            case '05':
                plan[22] += obj.planqty;
                act[22] += obj.qty;
                bal[22] += obj.balqty;
                break;
            case '06':
                plan[23] += obj.planqty;
                act[23] += obj.qty;
                bal[23] += obj.balqty;
                break;
        }
    };
    GsproductComponent.prototype.query = function () {
        var _this = this;
        if (this.dateName != null) {
            this.ifQuery = true;
            this.factory = 'array';
            this.setOptionQ();
            this.showArrayCF = true;
            this.showM1M2 = false;
            this.showCell = false;
            this.apiService.get('/sc/productioninfoQ', this.option).subscribe(function (res) {
                _this.factory1 = 'Array';
                _this.setTtl(res);
                _this.setDataArray(res);
            });
        }
        else {
            this.msgs = [{ severity: 'info', summary: '请输入日期 ！' }];
        }
    };
    GsproductComponent.prototype.refresh = function () {
        var _this = this;
        this.dateName = null;
        this.factory = 'array';
        this.ifQuery = false;
        this.setOption();
        this.showArrayCF = true;
        this.showM1M2 = false;
        this.showCell = false;
        this.apiService.get('/sc/productioninfo', this.option).subscribe(function (res) {
            _this.factory1 = 'Array';
            _this.setTtl(res);
            _this.setDataArray(res);
        });
    };
    GsproductComponent.prototype.select = function (factory) {
        var _this = this;
        this.line = null;
        this.cell = null;
        if (factory === 'array') {
            this.factory1 = 'Array';
            this.showArrayCF = true;
            this.showM1M2 = false;
            this.showCell = false;
            if (this.ifQuery) {
                this.setOptionQ();
                this.apiService.get('/sc/productioninfoQ', this.option).subscribe(function (res) {
                    _this.setTtl(res);
                    _this.setDataArray(res);
                });
            }
            else {
                this.setOption();
                this.apiService.get('/sc/productioninfo', this.option).subscribe(function (res) {
                    _this.setTtl(res);
                    _this.setDataArray(res);
                });
            }
        }
        else if (factory === 'cf') {
            this.factory1 = 'CF';
            this.showArrayCF = true;
            this.showM1M2 = false;
            this.showCell = false;
            if (this.ifQuery) {
                this.setOptionQ();
                this.apiService.get('/sc/productioninfocfQ', this.option).subscribe(function (res) {
                    _this.setTtl(res);
                    _this.setDataArray(res);
                });
            }
            else {
                this.setOption();
                this.apiService.get('/sc/productioninfocf', this.option).subscribe(function (res) {
                    _this.setTtl(res);
                    _this.setDataArray(res);
                });
            }
        }
        else if (factory === 'cell') {
            this.showArrayCF = false;
            this.showM1M2 = false;
            this.showCell = true;
            if (this.ifQuery) {
                this.setOptionQ();
                this.apiService.get('/sc/productioninfocell1Q', this.option).subscribe(function (res) {
                    _this.setTtlCell(res, 'first');
                    _this.setDataCell(res);
                });
                this.apiService.get('/sc/productioninfocell2Q', this.option).subscribe(function (res) {
                    _this.setTtlCell(res, 'second');
                    _this.setDataCellChangeXianTi(res);
                });
            }
            else {
                this.setOption();
                this.apiService.get('/sc/productioninfocell1', this.option).subscribe(function (res) {
                    _this.setTtlCell(res, 'first');
                    _this.setDataCell(res);
                });
                this.apiService.get('/sc/productioninfocell2', this.option).subscribe(function (res) {
                    _this.setTtlCell(res, 'second');
                    _this.setDataCellChangeXianTi(res);
                });
            }
        }
        else if (factory === 'm1') {
            this.showArrayCF = false;
            this.showPacking = true;
            this.showM1M2 = true;
            this.showCell = false;
            this.module_factory1 = 'MDL';
            this.module_factory2 = 'Assy';
            if (this.ifQuery) {
                this.setOptionQ();
                this.apiService.get('/sc/productioninfom1Q', this.option).subscribe(function (res) {
                    _this.backupRes = res;
                    _this.setDepartment(res);
                    _this.setTtlMod(res);
                    _this.setDataMod(res);
                });
            }
            else {
                this.setOption();
                this.apiService.get('/sc/productioninfom1', this.option).subscribe(function (res) {
                    _this.backupRes = res;
                    _this.setDepartment(res);
                    _this.setTtlMod(res);
                    _this.setDataMod(res);
                });
            }
        }
        else if (factory === 'm2') {
            this.showArrayCF = false;
            this.showPacking = false;
            this.showM1M2 = true;
            this.showCell = false;
            this.module_factory1 = 'COG';
            this.module_factory2 = 'COF';
            if (this.ifQuery) {
                this.setOptionQ();
                this.apiService.get('/sc/productioninfom2Q', this.option).subscribe(function (res) {
                    _this.backupRes = res;
                    _this.setDepartment(res);
                    _this.setTtlMod(res);
                    _this.setDataMod(res);
                });
            }
            else {
                this.setOption();
                this.apiService.get('/sc/productioninfom2', this.option).subscribe(function (res) {
                    _this.backupRes = res;
                    _this.setDepartment(res);
                    _this.setTtlMod(res);
                    _this.setDataMod(res);
                });
            }
        }
    };
    GsproductComponent.prototype.setReducteDataMod = function (array1, array2) {
        var pkMdlIn = []; // 确定某一条数据的两个字段，fgcode和line
        for (var _i = 0, array1_1 = array1; _i < array1_1.length; _i++) {
            var obj = array1_1[_i];
            var pkArrayInItem = { fgcode: obj.fgcode, line: obj.line };
            pkMdlIn.push(pkArrayInItem);
        }
        // 数组去重
        for (var i = 0; i < pkMdlIn.length - 1; i++) {
            for (var j = i + 1; j < pkMdlIn.length; j++) {
                if (pkMdlIn[i].fgcode === pkMdlIn[j].fgcode && pkMdlIn[i].line === pkMdlIn[j].line) {
                    pkMdlIn.splice(j, 1);
                    j--; // 关键，因为splice()删除元素之后，会使得数组长度减小，此时如果没有j=j-1的话，会导致相同项在重复两次以上之后无法进行去重，且会错误删除没有重复的项。
                }
            }
        }
        for (var _a = 0, pkMdlIn_1 = pkMdlIn; _a < pkMdlIn_1.length; _a++) {
            var o = pkMdlIn_1[_a];
            var newProductionDataMod = new __WEBPACK_IMPORTED_MODULE_2__model_productionDataMod__["a" /* ProductionDataMod */]();
            newProductionDataMod.line = o.line;
            newProductionDataMod.fgcode = o.fgcode;
            for (var _b = 0, array1_2 = array1; _b < array1_2.length; _b++) {
                var obj = array1_2[_b];
                if (obj.fgcode === o.fgcode && obj.line === o.line) {
                    newProductionDataMod.productname = obj.productname;
                    newProductionDataMod.model_type = obj.model_type;
                    this.setTimeData(obj, newProductionDataMod);
                }
            }
            this.getRowTtl(newProductionDataMod);
            array2.push(newProductionDataMod);
        }
    };
    GsproductComponent.prototype.setReducteDataCell = function (array1, array2) {
        var temp = []; // 确定某一条数据的两个字段，fgcode和line
        for (var _i = 0, array1_3 = array1; _i < array1_3.length; _i++) {
            var obj = array1_3[_i];
            var pkArrayInItem = { productspecname: obj.productspecname, line: obj.line };
            temp.push(pkArrayInItem);
        }
        // 数组去重
        for (var i = 0; i < temp.length - 1; i++) {
            for (var j = i + 1; j < temp.length; j++) {
                if (temp[i].productspecname === temp[j].productspecname && temp[i].line === temp[j].line) {
                    temp.splice(j, 1);
                    j--; // 关键，因为splice()删除元素之后，会使得数组长度减小，此时如果没有j=j-1的话，会导致相同项在重复两次以上之后无法进行去重，且会错误删除没有重复的项。
                }
            }
        }
        for (var _a = 0, temp_1 = temp; _a < temp_1.length; _a++) {
            var o = temp_1[_a];
            var newProductionDataMod = new __WEBPACK_IMPORTED_MODULE_3__model_productionCellIn__["a" /* ProductionCellInData */]();
            newProductionDataMod.line = o.line;
            newProductionDataMod.productspecname = o.productspecname;
            for (var _b = 0, array1_4 = array1; _b < array1_4.length; _b++) {
                var obj = array1_4[_b];
                if (obj.productspecname === o.productspecname && obj.line === o.line) {
                    newProductionDataMod.productname = obj.productname;
                    newProductionDataMod.model_type = obj.model_type;
                    this.setTimeData(obj, newProductionDataMod);
                }
            }
            this.getRowTtl(newProductionDataMod);
            array2.push(newProductionDataMod);
        }
    };
    GsproductComponent.prototype.setReducteDataCellChangeXianTi = function (array1, array2) {
        var specnames = [];
        for (var _i = 0, array1_5 = array1; _i < array1_5.length; _i++) {
            var obj = array1_5[_i];
            if (!specnames.includes(obj.productspecname)) {
                specnames.push(obj.productspecname);
            }
        }
        for (var _a = 0, specnames_1 = specnames; _a < specnames_1.length; _a++) {
            var specname = specnames_1[_a];
            var newData = new __WEBPACK_IMPORTED_MODULE_4__model_productionCellCut__["a" /* ProductionCellCutData */]();
            newData.productspecname = specname;
            var lines = [];
            for (var _b = 0, array1_6 = array1; _b < array1_6.length; _b++) {
                var obj = array1_6[_b];
                if (obj.productspecname === specname) {
                    if (!lines.includes(obj.line)) {
                        lines.push(obj.line);
                    }
                }
            }
            var newTimeHour = new __WEBPACK_IMPORTED_MODULE_4__model_productionCellCut__["b" /* TimeHour */]();
            for (var _c = 0, array1_7 = array1; _c < array1_7.length; _c++) {
                var obj = array1_7[_c];
                if (obj.productspecname === specname) {
                    if (obj.productname !== null) {
                        newData.productname = obj.productname;
                    }
                    newData.model_type = obj.model_type;
                    if (obj.line === 'ttl') {
                        this.setIimeDataXianTi(obj, newData.plan, newData.bal);
                        this.setDataActTtl(obj, newTimeHour);
                    }
                }
            }
            this.getDataPlanRowTtl(newData.plan); // 需要改的plan
            this.getDataActRowTtl(newData.bal);
            this.getDataActRowTtl(newTimeHour);
            newData.acts.push(newTimeHour);
            for (var _d = 0, lines_1 = lines; _d < lines_1.length; _d++) {
                var line = lines_1[_d];
                if (line !== 'ttl') {
                    var newTimeHour2 = new __WEBPACK_IMPORTED_MODULE_4__model_productionCellCut__["b" /* TimeHour */]();
                    for (var _e = 0, array1_8 = array1; _e < array1_8.length; _e++) {
                        var obj = array1_8[_e];
                        if (obj.line === line && obj.productspecname === specname) {
                            this.setPropActs(obj, newTimeHour2, line);
                        }
                    }
                    this.getDataActRowTtl(newTimeHour2);
                    newData.acts.push(newTimeHour2);
                }
            }
            this.setDataRowTtlBal(newData);
            array2.push(newData);
        }
    };
    // 为dataArrayIn赋值，根据arrayproductspecname去重，每有一个arrayproductspecname创建一个对象放进数组中
    GsproductComponent.prototype.setReduceDataArray = function (array1, array2) {
        var specnameArrayOut = [];
        for (var _i = 0, array1_9 = array1; _i < array1_9.length; _i++) {
            var obj = array1_9[_i];
            if (!specnameArrayOut.includes(obj.arrayproductspecname)) {
                specnameArrayOut.push(obj.arrayproductspecname);
            }
        }
        for (var _a = 0, specnameArrayOut_1 = specnameArrayOut; _a < specnameArrayOut_1.length; _a++) {
            var specname = specnameArrayOut_1[_a];
            var newProductionData = new __WEBPACK_IMPORTED_MODULE_1__model_productionData__["a" /* ProductionData */]();
            newProductionData.arrayproductspecname = specname;
            for (var _b = 0, array1_10 = array1; _b < array1_10.length; _b++) {
                var obj = array1_10[_b];
                if (obj.arrayproductspecname === specname) {
                    newProductionData.productspecname = obj.productspecname;
                    newProductionData.modeltype = obj.arraymodeltype;
                    this.setTimeData(obj, newProductionData);
                }
            }
            this.getRowTtl(newProductionData);
            array2.push(newProductionData);
        }
    };
    GsproductComponent.prototype.setDataActTtl = function (obj, timeHour) {
        switch (obj.hour) {
            case '07':
                if (obj.qty !== null) {
                    timeHour['7'] = obj.qty.toString();
                }
                break;
            case '08':
                if (obj.qty !== null) {
                    timeHour['8'] = obj.qty.toString();
                }
                break;
            case '09':
                if (obj.qty !== null) {
                    timeHour['9'] = obj.qty.toString();
                }
                break;
            case '10':
                if (obj.qty !== null) {
                    timeHour['10'] = obj.qty.toString();
                }
                break;
            case '11':
                if (obj.qty !== null) {
                    timeHour['11'] = obj.qty.toString();
                }
                break;
            case '12':
                if (obj.qty !== null) {
                    timeHour['12'] = obj.qty.toString();
                }
                break;
            case '13':
                if (obj.qty !== null) {
                    timeHour['13'] = obj.qty.toString();
                }
                break;
            case '14':
                if (obj.qty !== null) {
                    timeHour['14'] = obj.qty.toString();
                }
                break;
            case '15':
                if (obj.qty !== null) {
                    timeHour['15'] = obj.qty.toString();
                }
                break;
            case '16':
                if (obj.qty !== null) {
                    timeHour['16'] = obj.qty.toString();
                }
                break;
            case '17':
                if (obj.qty !== null) {
                    timeHour['17'] = obj.qty.toString();
                }
                break;
            case '18':
                if (obj.qty !== null) {
                    timeHour['18'] = obj.qty.toString();
                }
                break;
            case '19':
                if (obj.qty !== null) {
                    timeHour['19'] = obj.qty.toString();
                }
                break;
            case '20':
                if (obj.qty !== null) {
                    timeHour['20'] = obj.qty.toString();
                }
                break;
            case '21':
                if (obj.qty !== null) {
                    timeHour['21'] = obj.qty.toString();
                }
                break;
            case '22':
                if (obj.qty !== null) {
                    timeHour['22'] = obj.qty.toString();
                }
                break;
            case '23':
                if (obj.qty !== null) {
                    timeHour['23'] = obj.qty.toString();
                }
                break;
            case '00':
                if (obj.qty !== null) {
                    timeHour['0'] = obj.qty.toString();
                }
                break;
            case '01':
                if (obj.qty !== null) {
                    timeHour['1'] = obj.qty.toString();
                }
                break;
            case '02':
                if (obj.qty !== null) {
                    timeHour['2'] = obj.qty.toString();
                }
                break;
            case '03':
                if (obj.qty !== null) {
                    timeHour['3'] = obj.qty.toString();
                }
                break;
            case '04':
                if (obj.qty !== null) {
                    timeHour['4'] = obj.qty.toString();
                }
                break;
            case '05':
                if (obj.qty !== null) {
                    timeHour['5'] = obj.qty.toString();
                }
                break;
            case '06':
                if (obj.qty !== null) {
                    timeHour['6'] = obj.qty.toString();
                }
                break;
        }
    };
    GsproductComponent.prototype.getDataActRowTtl = function (timeHour) {
        if (timeHour['7'] !== '-') {
            timeHour.ttl += parseInt(timeHour['7'], 10);
        }
        if (timeHour['8'] !== '-') {
            timeHour.ttl += parseInt(timeHour['8'], 10);
        }
        if (timeHour['9'] !== '-') {
            timeHour.ttl += parseInt(timeHour['9'], 10);
        }
        if (timeHour['10'] !== '-') {
            timeHour.ttl += parseInt(timeHour['10'], 10);
        }
        if (timeHour['11'] !== '-') {
            timeHour.ttl += parseInt(timeHour['11'], 10);
        }
        if (timeHour['12'] !== '-') {
            timeHour.ttl += parseInt(timeHour['12'], 10);
        }
        if (timeHour['13'] !== '-') {
            timeHour.ttl += parseInt(timeHour['13'], 10);
        }
        if (timeHour['14'] !== '-') {
            timeHour.ttl += parseInt(timeHour['14'], 10);
        }
        if (timeHour['15'] !== '-') {
            timeHour.ttl += parseInt(timeHour['15'], 10);
        }
        if (timeHour['16'] !== '-') {
            timeHour.ttl += parseInt(timeHour['16'], 10);
        }
        if (timeHour['17'] !== '-') {
            timeHour.ttl += parseInt(timeHour['17'], 10);
        }
        if (timeHour['18'] !== '-') {
            timeHour.ttl += parseInt(timeHour['18'], 10);
        }
        if (timeHour['19'] !== '-') {
            timeHour.ttl += parseInt(timeHour['19'], 10);
        }
        if (timeHour['20'] !== '-') {
            timeHour.ttl += parseInt(timeHour['20'], 10);
        }
        if (timeHour['21'] !== '-') {
            timeHour.ttl += parseInt(timeHour['21'], 10);
        }
        if (timeHour['22'] !== '-') {
            timeHour.ttl += parseInt(timeHour['22'], 10);
        }
        if (timeHour['23'] !== '-') {
            timeHour.ttl += parseInt(timeHour['23'], 10);
        }
        if (timeHour['0'] !== '-') {
            timeHour.ttl += parseInt(timeHour['0'], 10);
        }
        if (timeHour['1'] !== '-') {
            timeHour.ttl += parseInt(timeHour['1'], 10);
        }
        if (timeHour['2'] !== '-') {
            timeHour.ttl += parseInt(timeHour['2'], 10);
        }
        if (timeHour['3'] !== '-') {
            timeHour.ttl += parseInt(timeHour['3'], 10);
        }
        if (timeHour['4'] !== '-') {
            timeHour.ttl += parseInt(timeHour['4'], 10);
        }
        if (timeHour['5'] !== '-') {
            timeHour.ttl += parseInt(timeHour['5'], 10);
        }
        if (timeHour['6'] !== '-') {
            timeHour.ttl += parseInt(timeHour['6'], 10);
        }
    };
    GsproductComponent.prototype.setDataRowTtlBal = function (newData) {
        if (newData.plan.ttl !== 0 && newData.acts[0].ttl !== 0) {
            newData.bal.ttl = newData.acts[0].ttl - newData.plan.ttl;
        }
    };
    GsproductComponent.prototype.setPropActs = function (obj, newTimeHour, oper) {
        newTimeHour.oper = oper;
        this.setDataActTtl(obj, newTimeHour);
    };
    GsproductComponent.prototype.setDepartment = function (data) {
        var lines = [];
        var cells = [];
        this.departmentLine = [];
        this.departmentCell = [];
        for (var _i = 0, data_8 = data; _i < data_8.length; _i++) {
            var obj = data_8[_i];
            if (!lines.includes(obj.line)) {
                lines.push(obj.line);
            }
            if (!cells.includes(obj.model_type)) {
                cells.push(obj.model_type);
            }
        }
        for (var _a = 0, lines_2 = lines; _a < lines_2.length; _a++) {
            var line = lines_2[_a];
            this.departmentLine.push({ label: line, value: line });
        }
        for (var _b = 0, cells_1 = cells; _b < cells_1.length; _b++) {
            var cell = cells_1[_b];
            this.departmentCell.push({ label: cell, value: cell });
        }
        console.log(this.departmentLine);
    };
    GsproductComponent.prototype.dtFilter = function () {
        var _this = this;
        if (this.line === null && this.cell === null) {
            this.setTtlMod(this.backupRes);
            this.setDataMod(this.backupRes);
        }
        else if (this.line !== null && this.cell === null) {
            var res = this.backupRes.filter(function (item) {
                return (item.line === _this.line);
            });
            this.setTtlMod(res);
            this.setDataMod(res);
        }
        else if (this.line === null && this.cell !== null) {
            var res = this.backupRes.filter(function (item) {
                return (item.model_type === _this.cell);
            });
            this.setTtlMod(res);
            this.setDataMod(res);
        }
        else {
            var res = this.backupRes.filter(function (item) {
                return (item.line === _this.line && item.model_type === _this.cell);
            });
            this.setTtlMod(res);
            this.setDataMod(res);
        }
    };
    GsproductComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-gsproduct',
            template: __webpack_require__("./src/app/fixreportforms/gsproduct/gsproduct.component.html"),
            styles: [__webpack_require__("./src/app/fixreportforms/gsproduct/gsproduct.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__common_service_api_api_service__["a" /* ApiService */]])
    ], GsproductComponent);
    return GsproductComponent;
}());



/***/ }),

/***/ "./src/app/fixreportforms/gsproduct/model/productionCellCut.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProductionCellCutData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return TimeHour; });
var ProductionCellCutData = /** @class */ (function () {
    function ProductionCellCutData() {
        this.productname = '-';
        this.productspecname = '-';
        this.model_type = '-';
        this.channeng = '';
        this.plan = new TimeHour();
        this.acts = [];
        this.bal = new TimeHour();
        this.remark = '';
    }
    return ProductionCellCutData;
}());

var TimeHour = /** @class */ (function () {
    function TimeHour() {
        this.oper = 'Act Ttl';
        this['7'] = '-';
        this['8'] = '-';
        this['9'] = '-';
        this['10'] = '-';
        this['11'] = '-';
        this['12'] = '-';
        this['13'] = '-';
        this['14'] = '-';
        this['15'] = '-';
        this['16'] = '-';
        this['17'] = '-';
        this['18'] = '-';
        this['19'] = '-';
        this['20'] = '-';
        this['21'] = '-';
        this['22'] = '-';
        this['23'] = '-';
        this['0'] = '-';
        this['1'] = '-';
        this['2'] = '-';
        this['3'] = '-';
        this['4'] = '-';
        this['5'] = '-';
        this['6'] = '-';
        this.ttl = 0;
    }
    return TimeHour;
}());



/***/ }),

/***/ "./src/app/fixreportforms/gsproduct/model/productionCellIn.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProductionCellInData; });
var ProductionCellInData = /** @class */ (function () {
    function ProductionCellInData() {
        this.line = '-';
        this.productname = '-';
        this.productspecname = '-';
        this.model_type = '-';
        this.channeng = '';
        this.plan7 = '-';
        this.plan8 = '-';
        this.plan9 = '-';
        this.plan10 = '-';
        this.plan11 = '-';
        this.plan12 = '-';
        this.plan13 = '-';
        this.plan14 = '-';
        this.plan15 = '-';
        this.plan16 = '-';
        this.plan17 = '-';
        this.plan18 = '-';
        this.plan19 = '-';
        this.plan20 = '-';
        this.plan21 = '-';
        this.plan22 = '-';
        this.plan23 = '-';
        this.plan0 = '-';
        this.plan1 = '-';
        this.plan2 = '-';
        this.plan3 = '-';
        this.plan4 = '-';
        this.plan5 = '-';
        this.plan6 = '-';
        this.planTtl = 0;
        this.act7 = '-';
        this.act8 = '-';
        this.act9 = '-';
        this.act10 = '-';
        this.act11 = '-';
        this.act12 = '-';
        this.act13 = '-';
        this.act14 = '-';
        this.act15 = '-';
        this.act16 = '-';
        this.act17 = '-';
        this.act18 = '-';
        this.act19 = '-';
        this.act20 = '-';
        this.act21 = '-';
        this.act22 = '-';
        this.act23 = '-';
        this.act0 = '-';
        this.act1 = '-';
        this.act2 = '-';
        this.act3 = '-';
        this.act4 = '-';
        this.act5 = '-';
        this.act6 = '-';
        this.actTtl = 0;
        this.bal7 = '-';
        this.bal8 = '-';
        this.bal9 = '-';
        this.bal10 = '-';
        this.bal11 = '-';
        this.bal12 = '-';
        this.bal13 = '-';
        this.bal14 = '-';
        this.bal15 = '-';
        this.bal16 = '-';
        this.bal17 = '-';
        this.bal18 = '-';
        this.bal19 = '-';
        this.bal20 = '-';
        this.bal21 = '-';
        this.bal22 = '-';
        this.bal23 = '-';
        this.bal0 = '-';
        this.bal1 = '-';
        this.bal2 = '-';
        this.bal3 = '-';
        this.bal4 = '-';
        this.bal5 = '-';
        this.bal6 = '-';
        this.balTtl = 0;
        this.remark = '';
    }
    return ProductionCellInData;
}());



/***/ }),

/***/ "./src/app/fixreportforms/gsproduct/model/productionData.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProductionData; });
var ProductionData = /** @class */ (function () {
    function ProductionData() {
        this.productspecname = '-';
        this.arrayproductspecname = '-';
        this.modeltype = '-';
        this.plan7 = '-';
        this.plan8 = '-';
        this.plan9 = '-';
        this.plan10 = '-';
        this.plan11 = '-';
        this.plan12 = '-';
        this.plan13 = '-';
        this.plan14 = '-';
        this.plan15 = '-';
        this.plan16 = '-';
        this.plan17 = '-';
        this.plan18 = '-';
        this.plan19 = '-';
        this.plan20 = '-';
        this.plan21 = '-';
        this.plan22 = '-';
        this.plan23 = '-';
        this.plan0 = '-';
        this.plan1 = '-';
        this.plan2 = '-';
        this.plan3 = '-';
        this.plan4 = '-';
        this.plan5 = '-';
        this.plan6 = '-';
        this.planTtl = 0;
        this.act7 = '-';
        this.act8 = '-';
        this.act9 = '-';
        this.act10 = '-';
        this.act11 = '-';
        this.act12 = '-';
        this.act13 = '-';
        this.act14 = '-';
        this.act15 = '-';
        this.act16 = '-';
        this.act17 = '-';
        this.act18 = '-';
        this.act19 = '-';
        this.act20 = '-';
        this.act21 = '-';
        this.act22 = '-';
        this.act23 = '-';
        this.act0 = '-';
        this.act1 = '-';
        this.act2 = '-';
        this.act3 = '-';
        this.act4 = '-';
        this.act5 = '-';
        this.act6 = '-';
        this.actTtl = 0;
        this.bal7 = '-';
        this.bal8 = '-';
        this.bal9 = '-';
        this.bal10 = '-';
        this.bal11 = '-';
        this.bal12 = '-';
        this.bal13 = '-';
        this.bal14 = '-';
        this.bal15 = '-';
        this.bal16 = '-';
        this.bal17 = '-';
        this.bal18 = '-';
        this.bal19 = '-';
        this.bal20 = '-';
        this.bal21 = '-';
        this.bal22 = '-';
        this.bal23 = '-';
        this.bal0 = '-';
        this.bal1 = '-';
        this.bal2 = '-';
        this.bal3 = '-';
        this.bal4 = '-';
        this.bal5 = '-';
        this.bal6 = '-';
        this.balTtl = 0;
        this.remark = '';
    }
    return ProductionData;
}());



/***/ }),

/***/ "./src/app/fixreportforms/gsproduct/model/productionDataMod.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProductionDataMod; });
var ProductionDataMod = /** @class */ (function () {
    function ProductionDataMod() {
        this.line = '-';
        this.productname = '-';
        this.fgcode = '-';
        this.model_type = '-';
        this.channeng = '';
        this.plan7 = '-';
        this.plan8 = '-';
        this.plan9 = '-';
        this.plan10 = '-';
        this.plan11 = '-';
        this.plan12 = '-';
        this.plan13 = '-';
        this.plan14 = '-';
        this.plan15 = '-';
        this.plan16 = '-';
        this.plan17 = '-';
        this.plan18 = '-';
        this.plan19 = '-';
        this.plan20 = '-';
        this.plan21 = '-';
        this.plan22 = '-';
        this.plan23 = '-';
        this.plan0 = '-';
        this.plan1 = '-';
        this.plan2 = '-';
        this.plan3 = '-';
        this.plan4 = '-';
        this.plan5 = '-';
        this.plan6 = '-';
        this.planTtl = 0;
        this.act7 = '-';
        this.act8 = '-';
        this.act9 = '-';
        this.act10 = '-';
        this.act11 = '-';
        this.act12 = '-';
        this.act13 = '-';
        this.act14 = '-';
        this.act15 = '-';
        this.act16 = '-';
        this.act17 = '-';
        this.act18 = '-';
        this.act19 = '-';
        this.act20 = '-';
        this.act21 = '-';
        this.act22 = '-';
        this.act23 = '-';
        this.act0 = '-';
        this.act1 = '-';
        this.act2 = '-';
        this.act3 = '-';
        this.act4 = '-';
        this.act5 = '-';
        this.act6 = '-';
        this.actTtl = 0;
        this.bal7 = '-';
        this.bal8 = '-';
        this.bal9 = '-';
        this.bal10 = '-';
        this.bal11 = '-';
        this.bal12 = '-';
        this.bal13 = '-';
        this.bal14 = '-';
        this.bal15 = '-';
        this.bal16 = '-';
        this.bal17 = '-';
        this.bal18 = '-';
        this.bal19 = '-';
        this.bal20 = '-';
        this.bal21 = '-';
        this.bal22 = '-';
        this.bal23 = '-';
        this.bal0 = '-';
        this.bal1 = '-';
        this.bal2 = '-';
        this.bal3 = '-';
        this.bal4 = '-';
        this.bal5 = '-';
        this.bal6 = '-';
        this.balTtl = 0;
        this.remark = '';
    }
    return ProductionDataMod;
}());



/***/ }),

/***/ "./src/app/fixreportforms/sortbank/sortbank.component.css":
/***/ (function(module, exports) {

module.exports = "input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{\r\n    -webkit-appearance: none !important;\r\n}\r\n\r\ninput {\r\n    width: 100px;\r\n    text-align: center;\r\n}\r\n\r\nth {\r\n    font-size: 12px;\r\n    font-weight: inherit!important;\r\n    padding: 0.1em 0em!important;\r\n}\r\n\r\n.headerBlue {\r\n    background-color: #BDD7EE!important;\r\n    color: black!important;\r\n    border: 1px solid #9c9c9c!important;\r\n    font-weight: bold!important;\r\n}\r\n"

/***/ }),

/***/ "./src/app/fixreportforms/sortbank/sortbank.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"ui-g\">\n  <p-panel class=\"ui-g-12\">\n      <p-header>\n          <div class=\"ui-g-12\">\n              <h2 style=\"text-align:center;margin: 0px 10px\">Sort Bank 信息详情</h2>\n          </div>\n      </p-header>\n      <div class=\"ui-panel-content\">\n          <div class=\"ui-helper-clearfix\">\n              <div style=\"float:right;padding: 5px 20px\">\n                  请输入日期：\n                  <input [(ngModel)]=\"dateName\" type=\"number\" id=\"sortBankInput\"\n                         oninput=\"if(value.length>10)value=value.slice(0,10)\" placeholder=\"2018090210\">\n                  <p-button label=\"查询\" (click)=\"query()\"></p-button>\n                  <p-button label=\"刷新\" (click)=\"refresh()\"></p-button>\n                  <p-button label=\"导出\" (click)=\"exportTable()\"></p-button>\n              </div>\n          </div>\n\n          <p-table autoLayout=\"true\"  id=\"exportableTable\">\n              <ng-template pTemplate=\"header\">\n                  <tr>\n                      <th colspan=\"7\" rowspan=\"2\" style=\"border-right: 2px solid #8c8c8c!important;\" class=\"headerBlue\">Sort Bank\n                          实时监控—{{now}}\n                      </th>\n                      <th rowspan=\"2\" class=\"headerBlue\">TFT</th>\n                      <th rowspan=\"2\" class=\"headerBlue\">CF</th>\n                      <th rowspan=\"2\" class=\"headerBlue\">Pair</th>\n                      <th rowspan=\"2\" class=\"headerBlue\" style=\"border-right: 2px solid #8c8c8c!important;\">4H投入<br>计划</th>\n                      <th rowspan=\"5\" width=\"20px\" style=\"border: 1px solid #9c9c9c!important;\"></th>\n                      <th colspan=\"6\" class=\"headerBlue\" style=\"border-right: 2px solid #8c8c8c!important; border-left: 2px solid #8c8c8c!important;\">TFT Bank</th>\n                      <th colspan=\"6\" class=\"headerBlue\">CF Bank</th>\n                  </tr>\n                  <tr>\n                      <th colspan=\"2\" class=\"headerBlue\">Normal</th>\n                      <th colspan=\"2\" class=\"headerBlue\">Hold</th>\n                      <th colspan=\"2\" class=\"headerBlue\" style=\"border-right: 2px solid #8c8c8c!important;\">EN</th>\n                      <th colspan=\"2\" class=\"headerBlue\">Normal</th>\n                      <th colspan=\"2\" class=\"headerBlue\">Hold</th>\n                      <th colspan=\"2\" class=\"headerBlue\">EN</th>\n                  </tr>\n                  <tr>\n                      <th rowspan=\"3\" class=\"headerBlue\">Product Name</th>\n                      <th rowspan=\"3\" class=\"headerBlue\">ARRAY</th>\n                      <th rowspan=\"3\" class=\"headerBlue\">CF</th>\n                      <th rowspan=\"3\" class=\"headerBlue\">CELL</th>\n                      <th rowspan=\"3\" class=\"headerBlue\">ARRAY</th>\n                      <th rowspan=\"3\" class=\"headerBlue\">CF</th>\n                      <th rowspan=\"3\" class=\"headerBlue\" style=\"border-right: 2px solid #8c8c8c!important;\">CELL</th>\n                      <th rowspan=\"3\" class=\"headerBlue\">{{sumTFT | zeroConvert}}</th>\n                      <th rowspan=\"3\" class=\"headerBlue\">{{sumCF | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumPair | zeroConvert}}</th>\n                      <th rowspan=\"3\" class=\"headerBlue\">{{sumPlan}}</th>\n                      <th colspan=\"2\" class=\"headerBlue\">{{sumTFTBankNormal | zeroConvert}}</th>\n                      <th colspan=\"2\" class=\"headerBlue\">{{sumTFTBankHold | zeroConvert}}</th>\n                      <th colspan=\"2\" class=\"headerBlue\" style=\"border-right: 2px solid #8c8c8c!important;\">{{sumTFTBankEn | zeroConvert}}</th>\n                      <th colspan=\"2\" class=\"headerBlue\">{{sumCFBankNormal | zeroConvert}}</th>\n                      <th colspan=\"2\" class=\"headerBlue\">{{sumCFBankHold | zeroConvert}}</th>\n                      <th colspan=\"2\" class=\"headerBlue\">{{sumCFBankEn | zeroConvert}}</th>\n                  </tr>\n                  <tr>\n                      <th class=\"headerBlue\">{{sumPair300 | zeroConvert}}</th>\n                      <th class=\"headerBlue\">未接收</th>\n                      <th class=\"headerBlue\">接收</th>\n                      <th class=\"headerBlue\">未接收</th>\n                      <th class=\"headerBlue\">接收</th>\n                      <th class=\"headerBlue\">未接收</th>\n                      <th class=\"headerBlue\" style=\"border-right: 2px solid #8c8c8c!important;\">接收</th>\n                      <th class=\"headerBlue\">未接收</th>\n                      <th class=\"headerBlue\">接收</th>\n                      <th class=\"headerBlue\">未接收</th>\n                      <th class=\"headerBlue\">接收</th>\n                      <th class=\"headerBlue\">未接收</th>\n                      <th class=\"headerBlue\">接收</th>\n                  </tr>\n                  <tr>\n                      <th class=\"headerBlue\">{{pairRatio}}</th>\n                      <th class=\"headerBlue\">{{sumTFTBankNormalN | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumTFTBankNormalY | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumTFTBankHoldN | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumTFTBankHoldY | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumTFTBankEnN | zeroConvert}}</th>\n                      <th class=\"headerBlue\" style=\"border-right: 2px solid #8c8c8c!important;\">{{sumTFTBankEnY | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumCFBankNormalN | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumCFBankNormalY | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumCFBankHoldN | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumCFBankHoldY | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumCFBankEnN | zeroConvert}}</th>\n                      <th class=\"headerBlue\">{{sumCFBankEnY | zeroConvert}}</th>\n                  </tr>\n                  <tr *ngFor=\"let obj of sortBankArray;let i = index;\">\n                      <th>{{obj.productname}}</th>\n                      <th>{{obj.arrayproductspecname}}</th>\n                      <th>{{obj.cfproductspecname}}</th>\n                      <th>{{obj.cellproductspecname}}</th>\n                      <th>{{obj.arraymodeltype}}</th>\n                      <th>{{obj.cfmodeltype}}</th>\n                      <th style=\"border-right: 2px solid #8c8c8c\">{{obj.cellmodeltype}}</th>\n                      <th>{{obj.tft | zeroConvert}}</th>\n                      <th>{{obj.cf | zeroConvert}}</th>\n                      <th >{{obj.pair | zeroConvert}}</th>\n                      <th colspan=\"sortBankArray.length\" style=\"border-right: 2px solid #8c8c8c\"></th>\n                      <th style=\"border-top: 0px\"\n                          [ngStyle]=\"{'border-bottom': (i == (sortBankArray.length-1)) ? '1px solid inherit' : '0px'}\"></th>\n                      <th style=\"border-left: 2px solid #8c8c8c!important;\" >{{obj.tft_bank_normal_n | zeroConvert}}</th>\n                      <th>{{obj.tft_bank_normal_y | zeroConvert}}</th>\n                      <th>{{obj.tft_bank_hold_n | zeroConvert}}</th>\n                      <th>{{obj.tft_bank_hold_y | zeroConvert}}</th>\n                      <th>{{obj.tft_bank_en_n | zeroConvert}}</th>\n                      <th style=\"border-right: 2px solid #8c8c8c!important;\">{{obj.tft_bank_en_y | zeroConvert}}</th>\n                      <th>{{obj.cf_bank_normal_n | zeroConvert}}</th>\n                      <th>{{obj.cf_bank_normal_y | zeroConvert}}</th>\n                      <th>{{obj.cf_bank_hold_n | zeroConvert}}</th>\n                      <th>{{obj.cf_bank_hold_y | zeroConvert}}</th>\n                      <th>{{obj.cf_bank_en_n | zeroConvert}}</th>\n                      <th>{{obj.cf_bank_en_y | zeroConvert}}</th>\n                  </tr>\n              </ng-template>\n          </p-table>\n      </div>\n  </p-panel>\n</div>\n"

/***/ }),

/***/ "./src/app/fixreportforms/sortbank/sortbank.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SortbankComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__ = __webpack_require__("./src/app/common/service/api/api.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_file_saver__ = __webpack_require__("./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_file_saver__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var SortbankComponent = /** @class */ (function () {
    function SortbankComponent(apiService) {
        this.apiService = apiService;
        this.sortBankArray = [];
        this.sumTFT = 0;
        this.sumCF = 0;
        this.sumPair = 0;
        this.sumPair300 = 0;
        this.sumTFTBankNormal = 0;
        this.sumTFTBankHold = 0;
        this.sumTFTBankEn = 0;
        this.sumCFBankNormal = 0;
        this.sumCFBankHold = 0;
        this.sumCFBankEn = 0;
        this.sumTFTBankNormalN = 0;
        this.sumTFTBankNormalY = 0;
        this.sumTFTBankHoldN = 0;
        this.sumTFTBankHoldY = 0;
        this.sumTFTBankEnN = 0;
        this.sumTFTBankEnY = 0;
        this.sumCFBankNormalN = 0;
        this.sumCFBankNormalY = 0;
        this.sumCFBankHoldN = 0;
        this.sumCFBankHoldY = 0;
        this.sumCFBankEnN = 0;
        this.sumCFBankEnY = 0;
    }
    SortbankComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.setOption();
        this.apiService.get('/sc/sortbank', this.option).subscribe(function (res) {
            _this.sortBankArray = res;
            _this.setSum(_this.sortBankArray);
        });
        this.apiService.get('/sc/sortbank/sum', this.option).subscribe(function (res) {
            _this.sumTFTBankNormal = res[0].tft_bank_normal;
            _this.sumTFTBankHold = res[0].tft_bank_hold;
            _this.sumTFTBankEn = res[0].tft_bank_en;
            _this.sumCFBankNormal = res[0].cf_bank_normal;
            _this.sumCFBankHold = res[0].cf_bank_hold;
            _this.sumCFBankEn = res[0].cf_bank_en;
        });
    };
    SortbankComponent.prototype.setOption = function () {
        var nowTime = new Date();
        var year = nowTime.getFullYear().toString();
        var month;
        var day;
        var hour;
        if (nowTime.getMonth() < 9) {
            month = '0' + (nowTime.getMonth() + 1);
        }
        else {
            month = (nowTime.getMonth() + 1).toString();
        }
        if (nowTime.getDate() < 10) {
            day = '0' + nowTime.getDate();
        }
        else {
            day = nowTime.getDate().toString();
        }
        if (nowTime.getHours() < 10) {
            hour = '0' + nowTime.getHours();
        }
        else {
            hour = nowTime.getHours().toString();
        }
        this.option = {
            params: {
                timekey: year + month + day + hour
            }
        };
        this.now = year + '/' + month + '/' + day + ' ' + hour + '点';
    };
    SortbankComponent.prototype.query = function () {
        var _this = this;
        if (this.dateName != null) {
            this.sumTFTBankNormal = 0;
            this.sumTFTBankHold = 0;
            this.sumTFTBankEn = 0;
            this.sumCFBankNormal = 0;
            this.sumCFBankHold = 0;
            this.sumCFBankEn = 0;
            this.option = {
                params: {
                    timekey: this.dateName.toString()
                }
            };
            this.now = this.dateName.toString().substring(0, 4) + '/' + this.dateName.toString().substring(4, 6) + '/'
                + this.dateName.toString().substring(6, 8) + ' ' + this.dateName.toString().substring(8) + '点';
            this.apiService.get('/sc/sortbank', this.option).subscribe(function (res) {
                _this.sortBankArray = res;
                _this.setSum(_this.sortBankArray);
            });
            this.apiService.get('/sc/sortbank/sum', this.option).subscribe(function (res) {
                _this.sumTFTBankNormal = res[0].tft_bank_normal;
                _this.sumTFTBankHold = res[0].tft_bank_hold;
                _this.sumTFTBankEn = res[0].tft_bank_en;
                _this.sumCFBankNormal = res[0].cf_bank_normal;
                _this.sumCFBankHold = res[0].cf_bank_hold;
                _this.sumCFBankEn = res[0].cf_bank_en;
            });
        }
    };
    SortbankComponent.prototype.refresh = function () {
        var _this = this;
        this.dateName = null;
        this.setOption();
        this.apiService.get('/sc/sortbank', this.option).subscribe(function (res) {
            _this.sortBankArray = res;
            _this.setSum(_this.sortBankArray);
        });
        this.apiService.get('/sc/sortbank/sum', this.option).subscribe(function (res) {
            _this.sumTFTBankNormal = res[0].tft_bank_normal;
            _this.sumTFTBankHold = res[0].tft_bank_hold;
            _this.sumTFTBankEn = res[0].tft_bank_en;
            _this.sumCFBankNormal = res[0].cf_bank_normal;
            _this.sumCFBankHold = res[0].cf_bank_hold;
            _this.sumCFBankEn = res[0].cf_bank_en;
        });
    };
    SortbankComponent.prototype.setSum = function (array) {
        this.sumTFT = 0;
        this.sumCF = 0;
        this.sumPair = 0;
        this.sumPair300 = 0;
        this.sumTFTBankNormalN = 0;
        this.sumTFTBankNormalY = 0;
        this.sumTFTBankHoldN = 0;
        this.sumTFTBankHoldY = 0;
        this.sumTFTBankEnN = 0;
        this.sumTFTBankEnY = 0;
        this.sumCFBankNormalN = 0;
        this.sumCFBankNormalY = 0;
        this.sumCFBankHoldN = 0;
        this.sumCFBankHoldY = 0;
        this.sumCFBankEnN = 0;
        this.sumCFBankEnY = 0;
        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {
            var obj = array_1[_i];
            this.sumTFT += obj.tft;
            this.sumCF += obj.cf;
            this.sumPair += obj.pair;
            this.sumTFTBankNormalN += obj.tft_bank_normal_n;
            this.sumTFTBankNormalY += obj.tft_bank_normal_y;
            this.sumTFTBankHoldN += obj.tft_bank_hold_n;
            this.sumTFTBankHoldY += obj.tft_bank_hold_y;
            this.sumTFTBankEnN += obj.tft_bank_en_n;
            this.sumTFTBankEnY += obj.tft_bank_en_y;
            this.sumCFBankNormalN += obj.cf_bank_normal_n;
            this.sumCFBankNormalY += obj.cf_bank_normal_y;
            this.sumCFBankHoldN += obj.cf_bank_hold_n;
            this.sumCFBankHoldY += obj.cf_bank_hold_y;
            this.sumCFBankEnN += obj.cf_bank_en_n;
            this.sumCFBankEnY += obj.cf_bank_en_y;
            if (obj.pair >= 300) {
                this.sumPair300 += obj.pair;
            }
        }
        if (isNaN(this.sumPair300 / this.sumTFT)) {
            this.pairRatio = '-';
        }
        else {
            this.pairRatio = parseFloat(((this.sumPair300 / this.sumTFT) * 100).toFixed(1)) + '%';
        }
    };
    SortbankComponent.prototype.exportTable = function () {
        var blob = new Blob([document.getElementById('exportableTable').innerHTML], {
            type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'
        });
        Object(__WEBPACK_IMPORTED_MODULE_2_file_saver__["saveAs"])(blob, 'SortBank监控' + this.option.params.timekey + '.xls');
    };
    SortbankComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-sortbank',
            template: __webpack_require__("./src/app/fixreportforms/sortbank/sortbank.component.html"),
            styles: [__webpack_require__("./src/app/fixreportforms/sortbank/sortbank.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_service_api_api_service__["a" /* ApiService */]])
    ], SortbankComponent);
    return SortbankComponent;
}());



/***/ })

});
//# sourceMappingURL=fixreportforms.module.chunk.js.map