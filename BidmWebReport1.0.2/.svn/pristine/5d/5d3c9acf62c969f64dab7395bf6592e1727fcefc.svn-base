{"version":3,"sources":["./src/app/dataimport/dataimport-routing.module.ts","./src/app/dataimport/dataimport.module.ts","./src/app/dataimport/productionplan/productionplan.component.css","./src/app/dataimport/productionplan/productionplan.component.html","./src/app/dataimport/productionplan/productionplan.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAyC;AACc;AAC6B;AAGpF,IAAM,MAAM,GAAW;IAErB;QACE,IAAI,EAAC,gBAAgB;QACrB,SAAS,EAAG,yGAAuB;QACnC,IAAI,EAAC;YACH,QAAQ,EAAC,QAAQ;YACjB,OAAO,EAAC,KAAK;SACd;KAEF;CACF,CAAC;AAMF;IAAA;IAAuC,CAAC;IAA3B,uBAAuB;QAJnC,+DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,6DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,6DAAY,CAAC;SACxB,CAAC;OACW,uBAAuB,CAAI;IAAD,8BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBK;AACM;AAEuB;AACc;AACtC;AACF;AACA;AACE;AACyH;AAC1H;AACE;AACH;AACA;AACmB;AACG;AACiB;AACT;AA0B1E;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAxB5B,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,2FAAuB;gBACvB,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY;gBACZ,gEAAe;gBACf,2DAAW;gBACX,8DAAa;gBACb,gEAAe;gBACf,8DAAa;gBACb,mEAAkB;gBAClB,sEAAgB;gBAChB,2DAAW;gBACX,iEAAgB;gBAChB,2DAAW;gBACX,+DAAc;gBACd,+DAAc,CAAC,WAAW;aAC3B;YACD,YAAY,EAAE,CAAC,yGAAuB,CAAC;YACvC,SAAS,EAAE,CAAC,oFAAU,EAAC,uFAAY,EAAC,wGAAiB,EAAC,yFAAc,CAAC;SACtE,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;AC3C7B,+BAA+B,4CAA4C,+BAA+B,4CAA4C,oCAAoC,OAAO,C;;;;;;;ACAjM,sfAAsf,iBAAiB,kBAAkB,YAAY,WAAW,6IAA6I,mMAAmM,6DAA6D,gBAAgB,oGAAoG,yaAAya,6cAA6c,otDAAotD,oBAAoB,k1E;;;;;;;;;;;;;;;;;;;;;;;;ACA7lH;AACgB;AACU;AACU;AACZ;AAS1E;IAEE,iCAAoB,UAAsB,EACjC,QAAoB,EACnB,IAAuB,EACvB,cAA8B;QAHpB,eAAU,GAAV,UAAU,CAAY;QACjC,aAAQ,GAAR,QAAQ,CAAY;QACnB,SAAI,GAAJ,IAAI,CAAmB;QACvB,mBAAc,GAAd,cAAc,CAAgB;QAK1C,oBAAe,GAAY,EAAE,CAAC;QAM9B,aAAQ,GAAY,KAAK,CAAC;QAE1B,kBAAa,GAAU,EAAE,CAAC;QAE1B,SAAI,GAAG,EAAE,CAAC;QAEV,uBAAkB,GAAG,CAAC,EAAE,EAAC,EAAE,EAAC,GAAG,CAAC,CAAC;QACjC,aAAQ,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;IAlBD,CAAC;IAoB/C,yBAAyB;IACzB,6CAA6C;IAE7C,iCAAiC;IACjC,0CAAQ,GAAR,UAAS,KAAK;QACd,GAAG,EAAa,UAAW,EAAX,UAAK,CAAC,KAAK,EAAX,cAAW,EAAX,IAAW;YAAvB,IAAI,IAAI;YACV,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/B;QAED,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;IAClF,CAAC;IAED,0CAAQ,GAAR;QAEA,aAAa;QACb,iEAAiE;QACjE,qBAAqB;QACrB,qCAAqC;QACrC,wBAAwB;QACxB,IAAI;QACJ,IAAI,CAAC,SAAS,GAAG;YACjB,EAAC,KAAK,EAAC,OAAO,EAAC,KAAK,EAAC,OAAO,EAAC;YAC7B,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC;YACvB,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC;YAC3B,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC;YACvB,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC;SACtB,CAAC;QACF,IAAI,CAAC,IAAI,GAAG;YACZ,EAAE,KAAK,EAAE,SAAS,EAAC,MAAM,EAAC,SAAS,EAAC;YACpC,EAAE,KAAK,EAAE,UAAU,EAAC,MAAM,EAAC,UAAU,EAAC;YACtC,EAAE,KAAK,EAAE,aAAa,EAAC,MAAM,EAAC,aAAa,EAAC;YAC5C,EAAE,KAAK,EAAE,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC;YAC9B,EAAE,KAAK,EAAE,iBAAiB,EAAC,MAAM,EAAC,iBAAiB,EAAC;YACpD,EAAE,KAAK,EAAE,WAAW,EAAC,MAAM,EAAC,WAAW,EAAC;YACxC,EAAE,KAAK,EAAE,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC;YAC9B,EAAE,KAAK,EAAE,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC;SAC3B,CAAC;IACF,CAAC;IAED,+BAA+B;IAC/B,4CAAU,GAAV;QAAA,iBA4BC;QA1BD,EAAE,EAAC,IAAI,CAAC,eAAe,IAAI,EAAE,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,EAAC;YAC5D,KAAK,CAAC,WAAW,CAAC,CAAC;QACnB,CAAC;QAAA,IAAI,EAAC;YACN,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;YACnC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAC7B,IAAM,MAAM,GAAG;gBACf,MAAM,EAAC;oBACP,WAAW,EAAG,OAAO;oBACrB,OAAO,EAAG,IAAI;iBACb;aACA,CAAC;YACF,IAAM,UAAU,GAAG,sBAAsB,CAAC;YAC1C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC,SAAS,CAChD,UAAC,GAAG;gBACJ,EAAE,EAAC,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC;oBAClB,KAAK,CAAC,SAAS,CAAC,CAAC;gBACnB,CAAC;gBAAA,IAAI,EAAC;oBACN,KAAI,CAAC,IAAI,GAAW,GAAG,CAAC,CAAC,qBAAqB;oBAC9C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC;oBACrC,wCAAwC;oBACxC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACvG,CAAC;YACD,CAAC,EACD,UAAC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,CAC5B,CAAC;QACF,CAAC;IACD,CAAC;IACD,iBAAiB;IACjB,4CAAU,GAAV;QACA,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAC3C,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC;QAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QACtC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,EAAE,EAAC,KAAK,GAAC,EAAE,CAAC,EAAC;YACb,QAAQ,GAAG,GAAG,GAAC,KAAK,CAAC;QACrB,CAAC;QAAA,IAAI,EAAC;YACN,QAAQ,GAAG,EAAE,GAAC,KAAK,CAAC;QACpB,CAAC;QAED,EAAE,EAAC,GAAG,GAAG,EAAE,CAAC,EAAC;YACb,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;QACnB,CAAC;QAAA,IAAI,EAAC;YACN,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC;QAClB,CAAC;QACD,OAAO,GAAG,IAAI,GAAC,QAAQ,GAAC,MAAM,CAAC;QAC/B,MAAM,CAAC,OAAO,CAAC;IACf,CAAC;IAED,eAAe;IACf,+CAAa,GAAb,UAAc,KAAK;QAAnB,iBA2BC;QA1BD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACjD,4CAA4C;QAC5C,wCAAwC;QACxC,IAAI,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAM,OAAO,GACb;YACA,MAAM,EAAC;gBACH,sBAAsB;gBACtB,SAAS,EAAG,SAAS;aACxB;SACA;QACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,yBAAyB,EAAC,OAAO,CAAC,CAAC,SAAS,CAChE,UAAC,GAAG;YACA,KAAI,CAAC,IAAI,GAAW,GAAG,CAAC,CAAC,qBAAqB;YAC/C,0BAA0B;YACzB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACrC,wCAAwC;YACxC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACvG,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACxB,CAAC,EACF,UAAC,KAAK;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACA,CAAC;IACF,CAAC;IACD,wBAAwB;IACxB,wBAAwB;IACxB,sDAAsD;IACtD,mCAAmC;IACnC,qBAAqB;IACrB,MAAM;IACN,iBAAiB;IACjB,gCAAgC;IAChC,UAAU;IACV,MAAM;IACN,qEAAqE;IACrE,eAAe;IACf,2DAA2D;IAC3D,kDAAkD;IAClD,qDAAqD;IACrD,oHAAoH;IACpH,kCAAkC;IAClC,YAAY;IACZ,mBAAmB;IACnB,8BAA8B;IAC9B,QAAQ;IACR,OAAO;IACP,IAAI;IAIJ,WAAW;IACX,qDAAmB,GAAnB;QAAA,iBAcC;QAbD,IAAM,OAAO,GACb;YACE,gBAAgB,EAAG,IAAI,CAAC,IAAI,CAAC,qBAAqB;SACnD;QACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,EAAC,OAAO,CAAC,CAAC,SAAS,CAC/D,UAAC,GAAG;YACA,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,SAAS,CAAC,sCAAsC,CAAC,CAAC;QAC1D,CAAC,EACF,UAAC,KAAK;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACA,CAAC;IACF,CAAC;IACD,gDAAc,GAAd;QACA,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,wBAAwB,CAAC;IAC5E,CAAC;IAED,2CAAS,GAAT,UAAU,GAAG;QACb,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAC,SAAS,EAAE,OAAO,EAAC,cAAc,EAAE,MAAM,EAAC,GAAG,EAAC,CAAC,CAAC;IAClF,CAAC;IAED,6CAAW,GAAX;QACA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAC,QAAQ,EAAC,SAAS,EAAE,OAAO,EAAC,iBAAiB,EAAE,MAAM,EAAC,oBAAoB,EAAC;YAC5E,EAAC,QAAQ,EAAC,MAAM,EAAE,OAAO,EAAC,cAAc,EAAE,MAAM,EAAC,oBAAoB,EAAC,CAAC,CAAC,CAAC;IACrG,CAAC;IAED,uCAAK,GAAL;QACA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAED,+BAA+B;IAC/B,wCAAM,GAAN;QACA,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,0CAAQ,GAAR,UAAS,KAAK;QACd,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACvG,CAAC;IAED,wCAAM,GAAN,UAAO,IAAI;IACX,CAAC;IA5NY,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAGgC,mFAAU;YACvB,0FAAU;YACb,uGAAiB;YACP,wFAAc;OAL7B,uBAAuB,CA8NnC;IAAD,8BAAC;CAAA;AA9NmC","file":"dataimport.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductionplanComponent } from './productionplan/productionplan.component';\n\n\nconst routes: Routes = [\n\n  {\n    path:'productionplan',\n    component : ProductionplanComponent,\n    data:{\n      tabLable:'生产计划导入',\n      destroy:false\n    }\n\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DataimportRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dataimport/dataimport-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DataimportRoutingModule } from './dataimport-routing.module';\nimport { ProductionplanComponent } from './productionplan/productionplan.component';\nimport { DialogModule } from 'primeng/dialog';\nimport { TableModule } from 'primeng/table';\nimport { PanelModule } from 'primeng/panel';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule, TabViewModule, PaginatorModule, ListboxModule, OverlayPanelModule, FileUploadModule, CalendarModule, DropdownModule } from 'primeng/primeng';\nimport { FormsModule } from '@angular/forms';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { ChartModule } from 'primeng/chart';\nimport { GrowlModule } from 'primeng/growl';\nimport { ApiService } from '../common/service/api/api.service';\nimport { PanelService } from '../boe/pages/echarts/panel.service';\nimport { FileUploadService } from '../boe-ui/boe-list/service/file-upload.service';\nimport { MessageService } from 'primeng/components/common/messageservice';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataimportRoutingModule,\n    DialogModule,    //p-dialog需要使用的ngmodule\n    TableModule,  //p-table需要使用的ngmodule\n    PanelModule,   //p-panel需要使用的ngmodule\n    ButtonModule,  //使button的label信息正常显示\n    InputTextModule,//inputtext使用需要的ngmodule\n    FormsModule,    //显示ngModel不能为input所用时，引用\n    TabViewModule,\n    PaginatorModule,\n    ListboxModule,  //p-listbox\n    OverlayPanelModule,   //overlaypanel    \n    NgxEchartsModule,   //options\n    ChartModule,\n    FileUploadModule,\n    GrowlModule,\n    CalendarModule, // 这个是写日期的\n    DropdownModule // 这个是单选下拉框\n  ],\n  declarations: [ProductionplanComponent],\n  providers: [ApiService,PanelService,FileUploadService,MessageService]\n})\nexport class DataimportModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dataimport/dataimport.module.ts","module.exports = \".headerBlue {\\r\\n    background-color: #BDD7EE!important;\\r\\n    color: black!important;\\r\\n    border: 1px solid #9c9c9c!important;\\r\\n    font-weight: bold!important;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dataimport/productionplan/productionplan.component.css\n// module id = ./src/app/dataimport/productionplan/productionplan.component.css\n// module chunks = dataimport.module","module.exports = \"<div class=\\\"ui-g\\\"> \\n  <p-growl [(value)]=\\\"msgs\\\"></p-growl>\\n<div class=\\\"ui-g-12\\\">     \\n    <!-- <h3>Excel文件上传</h3>\\n    <p-fileUpload mode=\\\"basic\\\" name=\\\"myfile[]\\\" url=\\\"./api/file/upload\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"></p-fileUpload>       -->\\n    <p-tabView>\\n      <p-tabPanel header=\\\"Excel导入\\\" leftIcon=\\\"pi pi-calendar\\\">\\n        \\n        <div class=\\\"ui-g\\\">\\n          \\n          <div class=\\\"ui-g-12\\\" style=\\\"text-align:center;font-size: 1.2em;font-weight: bold;width: 100%;height: 5%;background-color: rgb(224, 221, 221)\\\">生产计划导入界面-生产管理</div>\\n          <!-- 选择文件的按钮-->\\n          <div class=\\\"ui-g-2\\\" style=\\\"margin-top:0%;margin-bottom:-1%\\\"><p-fileUpload mode=\\\"basic\\\" chooseLabel=\\\"选择文件\\\" name=\\\"myfile[]\\\" url=\\\"./api/file/upload\\\" accept=\\\".xls,.xlsx\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event);\\\"></p-fileUpload></div>   \\n          <!-- 查询数据的 [style]=\\\"{'width':'130px'}\\\"-->\\n          <div class=\\\"ui-g-5\\\"></div>\\n          <div class=\\\"ui-g-5\\\"style=\\\"margin-top:0%;margin-bottom:-1%\\\">\\n            <div class=\\\"ui-g-3\\\"></div>\\n            <div class=\\\"ui-g-3\\\"><p-dropdown [options]=\\\"factories\\\" [(ngModel)]=\\\"selectedFactory\\\" placeholder=\\\"选择工厂\\\" ></p-dropdown></div>\\n            <div class=\\\"ui-g-3\\\"><p-calendar [(ngModel)]=\\\"selectedDate\\\" [showIcon]=\\\"true\\\" dateFormat=\\\"yy-mm-dd\\\" placeholder=\\\"选择日期\\\"></p-calendar></div>\\n            <div class=\\\"ui-g-2\\\" style=\\\"float: right;\\\"> <p-button label='查询' icon='fa fa-search' iconPos=\\\"left\\\" (click)=\\\"searchData()\\\"></p-button></div>\\n          </div>\\n        </div>\\n       <div class=\\\"ui-g\\\">\\n              <div class=\\\"ui-g-12\\\">\\n\\n                <p-panel>\\n                    <p-header>\\n                        <div class=\\\"ui-helper-clearfix\\\">\\n                            <span class=\\\"ui-panel-title\\\">Excel数据展示</span>\\n                            <span style=\\\"float: right;\\\" *ngIf=\\\"showFlag\\\">是否保存到数据库？\\n                                <p-button   icon=\\\"fa fa-plus\\\" label=\\\"保存\\\" [disabled]=\\\"false\\\"\\n                                (onClick)=\\\"saveExcelImportInfo()\\\"></p-button>\\n                              <p-button  icon=\\\"fa fa-plus\\\" label=\\\"取消\\\" [disabled]=\\\"false\\\"\\n                                  (onClick)=\\\"cancel()\\\"></p-button>\\n                              </span>\\n                            \\n                        </div>\\n                    </p-header>\\n\\n                      \\n                      <p-table #dt [columns]=\\\"cols\\\" [value]=\\\"pageData\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedData\\\"  >\\n                              <ng-template pTemplate=\\\"header\\\" let-columns>\\n                                <tr>\\n                                  <th class=\\\"headerBlue\\\">Factory</th>\\n                                  <th class=\\\"headerBlue\\\">Datename</th>\\n                                  <th class=\\\"headerBlue\\\">Hourtimekey</th>\\n                                  <th class=\\\"headerBlue\\\">Item</th>\\n                                  <th class=\\\"headerBlue\\\">Productspecname</th>\\n                                  <th class=\\\"headerBlue\\\">Modeltype</th>\\n                                  <th class=\\\"headerBlue\\\">Line</th>\\n                                  <th class=\\\"headerBlue\\\">Qty</th>\\n                                </tr>\\n                              </ng-template>\\n                              <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" >\\n                                  <tr style=\\\"text-align:center\\\">   \\n                                    <td *ngFor=\\\"let col of columns\\\">\\n                                      {{rowData[col.field]}}\\n                                    </td>\\n                                  </tr>\\n                              </ng-template>\\n                              <ng-template pTemplate=\\\"summary\\\">\\n                                  <p-paginator [rows]=\\\"rows\\\" [totalRecords]=\\\"totalRecords\\\" \\n                                  (onPageChange)=\\\"paginate($event)\\\" #p [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\"  pageLinkSize=\\\"5\\\"></p-paginator>\\n                              </ng-template>\\n                            </p-table>                       \\n                        </p-panel>\\n              </div>\\n          </div>\\n      </p-tabPanel>\\n\\n      <p-tabPanel header=\\\"Excel模板下载\\\" leftIcon=\\\"pi pi-calendar\\\">\\n       <div class=\\\"ui-g\\\">\\n              <div class=\\\"ui-g-12\\\">\\n\\n                <p-panel>\\n                    <p-header>\\n                        <div class=\\\"ui-helper-clearfix\\\">\\n                            <span class=\\\"ui-panel-title\\\">Excel数据表模板</span>  \\n                            <button type=\\\"button\\\" pButton icon=\\\"fa fa-file\\\" iconPos=\\\"left\\\" label=\\\"下载模板\\\" (click)=\\\"dt.exportCSV()\\\" style=\\\"float:right\\\"></button>\\n                        </div>\\n                    </p-header>\\n\\n                      \\n                      <p-table #dt [columns]=\\\"cols\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedData\\\"  >\\n                              <ng-template pTemplate=\\\"header\\\" let-columns>\\n                                <tr>\\n                                    <th class=\\\"headerBlue\\\">Factory</th>\\n                                    <th class=\\\"headerBlue\\\">Datename</th>\\n                                    <th class=\\\"headerBlue\\\">Hourtimekey</th>\\n                                    <th class=\\\"headerBlue\\\">Item</th>\\n                                    <th class=\\\"headerBlue\\\">Productspecname</th>\\n                                    <th class=\\\"headerBlue\\\">Modeltype</th>\\n                                    <th class=\\\"headerBlue\\\">Line</th>\\n                                    <th class=\\\"headerBlue\\\">Qty</th>\\n                                </tr>\\n                              </ng-template>\\n\\n                            </p-table>                       \\n                        </p-panel>\\n              </div>\\n          </div>\\n      </p-tabPanel>\\n     \\n  </p-tabView>\\n</div>\\n\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dataimport/productionplan/productionplan.component.html\n// module id = ./src/app/dataimport/productionplan/productionplan.component.html\n// module chunks = dataimport.module","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../common/service/api/api.service';\nimport { TabService } from '../../../core/layout/retab/service/tab.service';\nimport { FileUploadService } from '../../boe-ui/boe-list/service/file-upload.service';\nimport { MessageService } from 'primeng/components/common/messageservice';\nimport { SelectItem } from 'primeng/api';\nimport { spec } from './model/spec';\n\n@Component({\n  selector: 'app-productionplan',\n  templateUrl: './productionplan.component.html',\n  styleUrls: ['./productionplan.component.css']\n})\nexport class ProductionplanComponent implements OnInit {\n\n  constructor(private apiService: ApiService,\n    public tService: TabService,\n    private file: FileUploadService,\n    private messageService: MessageService) { }\n\n\n//下面定义的是选择条件的变量\nfactories : SelectItem[];\nselectedFactory : string = '';\nselectedDate : Date;\n\ndata:spec[];\npageData:spec[];\ncols: any[];\nshowFlag: boolean = false;\n\nuploadedFiles: any[] = [];\n\nrows = 10;\ntotalRecords;\nrowsPerPageOptions = [10,50,100];\npageInfo = { pageRow: this.rows, startRow: 0 };\n\n//下面是 一个 websocket 的测试 对象\n//socket : WebSocket; //在ngOnInit方法中 进行初始化操作的\n\n//这个方法就是一个模板的方法，不知道为什么这样写，但是就是这样写\nonUpload(event) {\nfor(let file of event.files) {\n  this.uploadedFiles.push(file);\n}\n\nthis.messageService.add({severity: 'info', summary: 'File Uploaded', detail: ''});\n}  \n\nngOnInit() {\n\n//在这里操作，创建连接的\n//this.socket = new WebSocket(\"ws://localhost:8080/api/cstinfo\");\n//socket 对象的 处理信息的方法 \n// this.socket.onmessage = (event)=>{\n//   console.log(event);\n// }\nthis.factories = [\n{label:'Array',value:'Array'},\n{label:'CF',value:'CF'},\n{label:'Cell',value:'Cell'},\n{label:'M1',value:'M1'},\n{label:'M2',value:'M2'}\n];\nthis.cols = [\n{ field: 'factory',header:'FACTORY'},\n{ field: 'datename',header:'DATENAME'},\n{ field: 'hourtimekey',header:'HOURTIMEKEY'},\n{ field: 'item',header:'ITEM'},\n{ field: 'productspecname',header:'PRODUCTSPECNAME'},\n{ field: 'modeltype',header:'MODELTYPE'},\n{ field: 'line',header:'LINE'},\n{ field: 'qty',header:'QTY'},\n];\n}\n\n//1.下面这个是查询数据的方法 ： 根据 工厂名称和  日期\nsearchData(){\n\nif(this.selectedFactory == '' || this.selectedDate == null){\nalert(\"请选择工厂和日期！\");\n}else{\nlet factory = this.selectedFactory;\nlet date = this.getTimeStr();\nconst option = {\nparams:{\nfactoryname : factory,\ndatestr : date\n}\n};\nconst search_url = '/Monitor8/searchPlan';\nthis.apiService.get(search_url,option).subscribe(\n(res)=>{\nif(res.length == 0){\n  alert(\"未查询到数据！\");\n}else{\nthis.data = <spec[]>res; // 返回的这个结果集是一条一条数据的数组\nthis.totalRecords = this.data.length;\n//下面这一行实现的是一个翻页的功能，根据每一页行数显示对应行数表格的是数据信息\nthis.pageData = this.data.slice(this.pageInfo.startRow,this.pageInfo.startRow + this.pageInfo.pageRow);\n}\n},\n(error)=>{console.log(error)}\n);\n}\n}\n//2.格式化 时间字符串的 方法\ngetTimeStr():string{\nlet timestr = '';\nlet year = this.selectedDate.getFullYear();\nlet month = this.selectedDate.getMonth()+1;\nlet day = this.selectedDate.getDate();\nlet monthstr = '';\nlet daystr = '';\nif(month<10){\nmonthstr = '0'+month;\n}else{\nmonthstr = ''+month;\n}\n\nif(day < 10){\ndaystr = '0' + day;\n}else{\ndaystr = '' + day;\n}\ntimestr = year+monthstr+daystr;\nreturn timestr;\n}\n\n//下面这个是上传文件的方法：\nonBasicUpload(event){\nconsole.log(event);\nconst response_ = JSON.parse(event.xhr.response);\n//let fileName = response_.name;origFileName\n//let fileName = response_.origFileName;\nlet localPath = response_.localPath;\nconsole.log(localPath);\nconst options = \n{\nparams:{\n    //fileName : fileName,\n    localPath : localPath\n}\n}\nthis.apiService.get('/alarmspec/excelUpload1',options).subscribe(\n(res)=>{\n    this.data = <spec[]>res; // 返回的这个结果集是一条一条数据的数组\n   // console.log(this.data);\n    this.totalRecords = this.data.length;\n    //下面这一行实现的是一个翻页的功能，根据每一页行数显示对应行数表格的是数据信息\n    this.pageData = this.data.slice(this.pageInfo.startRow,this.pageInfo.startRow + this.pageInfo.pageRow);\n    this.showFlag = true;\n },\n(error) => {\n  console.log(error);\n}\n);\n}\n// onBasicUpload(event){\n//   console.log(event);\n//   const response_ = JSON.parse(event.xhr.response);\n//   let fileName = response_.name;\n//   const options = \n//   {\n//       params:{\n//           fileName : fileName\n//       }\n//   }\n//   this.apiService.get('/alarmspec/excelUpload',options).subscribe(\n//     (res)=>{\n//           this.data = <spec[]>res; // 返回的这个结果集是一条一条数据的数组\n//           this.totalRecords = this.data.length;\n//           //下面这一行实现的是一个翻页的功能，根据每一页行数显示对应行数表格的是数据信息\n//           this.pageData = this.data.slice(this.pageInfo.startRow,this.pageInfo.startRow + this.pageInfo.pageRow);\n//           this.showFlag = true;\n//        },\n//     (error) => {\n//         console.log(error);\n//     }\n//   );\n// }\n\n\n\n//保存数据的方式 ：\nsaveExcelImportInfo(){\nconst options = \n{ \n  \"monitor8VOList\" : this.data // 传到服务端的参数就是 导入进来的数据\n}\nthis.apiService.put('/monitor8/excelImport1',options).subscribe(\n(res)=>{\n    this.showFlag = false;\n    this.addSingle('Data has been inserted into database');\n },\n(error) => {\n  console.log(error);\n}\n);\n}\nonFileDownload(){\nwindow.location.href= this.file.getDownloadUrl() + \"template/spec_tmp.xlsx\";\n}\n\naddSingle(msg) {\nthis.messageService.add({severity:'success', summary:'save success', detail:msg});\n}\n\naddMultiple() {\nthis.messageService.addAll([{severity:'success', summary:'Service Message', detail:'Via MessageService'},\n                            {severity:'info', summary:'Info Message', detail:'Via MessageService'}]);\n}\n\nclear() {\nthis.messageService.clear();\n}\n\n//取消的操作： 数据清空，页面信息清空，保存或取消的按钮隐藏\ncancel(){\nthis.data = [];\nthis.pageData = [];\nthis.showFlag = false;\n}\n\npaginate(event) {\nthis.pageInfo.pageRow = event['rows'];\nthis.pageInfo.startRow = event['first'];      \nthis.search(event.page+1); \nthis.pageData = this.data.slice(this.pageInfo.startRow,this.pageInfo.startRow + this.pageInfo.pageRow);\n}\n\nsearch(page){\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dataimport/productionplan/productionplan.component.ts"],"sourceRoot":"webpack:///"}